

================================================================
== Vivado HLS Report for 'pitchshifting'
================================================================
* Date:           Mon Dec  1 20:03:22 2014

* Version:        2013.2 (build date: Thu Jun 13 16:07:59 PM 2013)
* Project:        hls.prj
* Solution:       solution2
* Product family: zynq zynq_fpv6 
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |  10.00|      8.75|        1.25|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-------+--------+----------+-----------+-----------+------+----------+
        |          |     Latency    | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|  min  |   max  |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-------+--------+----------+-----------+-----------+------+----------+
        |- Loop 1  |  27648|   27648|        27|          -|          -|  1024|    no    |
        |- Loop 2  |  27648|  161792| 27 ~ 158 |          -|          -|  1024|    no    |
        |- Loop 3  |   6144|    6144|         6|          -|          -|  1024|    no    |
        +----------+-------+--------+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
|ShiftMemory      |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Shift register: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 64
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond5)
	29  / (exitcond5)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	2  / true
29 --> 
	30  / (!exitcond4)
	58  / (exitcond4)
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	51  / (tmp_i)
	50  / (!tmp_i & tmp_i_50)
	47  / (!tmp_i & !tmp_i_50 & !tmp_68_i)
	49  / (!tmp_i & !tmp_i_50 & tmp_68_i)
47 --> 
	48  / true
48 --> 
	52  / true
49 --> 
	48  / true
50 --> 
	48  / true
51 --> 
	48  / true
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	56  / true
56 --> 
	57  / true
57 --> 
	29  / true
58 --> 
	59  / true
59 --> 
	60  / (!exitcond3)
60 --> 
	61  / true
61 --> 
	62  / true
62 --> 
	63  / true
63 --> 
	64  / true
64 --> 
	59  / true
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: deltaPhiPrimeMod_V [1/1] 0.00ns
entry:0  %deltaPhiPrimeMod_V = alloca [1024 x i32], align 4 ; <[1024 x i32]*> [#uses=3]

ST_1: phaseCumulative_V [1/1] 0.00ns
entry:1  %phaseCumulative_V = alloca [1024 x i32], align 4 ; <[1024 x i32]*> [#uses=2]

ST_1: real_V [1/1] 0.00ns
entry:2  %real_V = alloca [1024 x i32], align 4          ; <[1024 x i32]*> [#uses=3]

ST_1: imag_V [1/1] 0.00ns
entry:3  %imag_V = alloca [1024 x i32], align 4          ; <[1024 x i32]*> [#uses=2]

ST_1: stg_69 [1/1] 1.57ns
entry:4  br label %bb53


 <State 2>: 3.50ns
ST_2: i_5 [1/1] 0.00ns
bb53:0  %i_5 = phi i11 [ %i, %bb41 ], [ 0, %entry ]     ; <i11> [#uses=3]

ST_2: phi_mul [1/1] 0.00ns
bb53:1  %phi_mul = phi i33 [ %next_mul, %bb41 ], [ 0, %entry ] ; <i33> [#uses=2]

ST_2: phi_mul6 [1/1] 0.00ns
bb53:2  %phi_mul6 = phi i41 [ %next_mul7, %bb41 ], [ 0, %entry ] ; <i41> [#uses=2]

ST_2: empty [1/1] 0.00ns
bb53:3  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1024, i64 1024, i64 1024) nounwind ; <i32> [#uses=0]

ST_2: exitcond5 [1/1] 2.11ns
bb53:4  %exitcond5 = icmp eq i11 %i_5, -1024            ; <i1> [#uses=1]

ST_2: i [1/1] 1.84ns
bb53:5  %i = add i11 %i_5, 1                            ; <i11> [#uses=1]

ST_2: stg_76 [1/1] 1.39ns
bb53:6  br i1 %exitcond5, label %bb77, label %bb24

ST_2: tmp [1/1] 0.00ns
bb24:0  %tmp = zext i11 %i_5 to i64                     ; <i64> [#uses=6]

ST_2: angle_V_addr [1/1] 0.00ns
bb24:1  %angle_V_addr = getelementptr [1024 x i32]* %angle_V, i64 0, i64 %tmp ; <i32*> [#uses=1]

ST_2: p_Val2_s [2/2] 2.39ns
bb24:2  %p_Val2_s = load i32* %angle_V_addr, align 4    ; <i32> [#uses=1]

ST_2: previousPhase_V_addr [1/1] 0.00ns
bb24:3  %previousPhase_V_addr = getelementptr [1024 x i1]* %previousPhase_V, i64 0, i64 %tmp ; <i1*> [#uses=1]

ST_2: previousPhase_V_load [2/2] 2.39ns
bb24:4  %previousPhase_V_load = load i1* %previousPhase_V_addr ; <i1> [#uses=1]

ST_2: next_mul7 [1/1] 2.80ns
bb24:7  %next_mul7 = add i41 %phi_mul6, 1686629376      ; <i41> [#uses=1]

ST_2: p_lshr_f_cast [1/1] 0.00ns
bb24:8  %p_lshr_f_cast = call i31 @_ssdm_op_PartSelect.i31.i41.i32.i32(i41 %phi_mul6, i32 10, i32 40) ; <i31> [#uses=1]


 <State 3>: 7.27ns
ST_3: p_Val2_s [1/2] 2.39ns
bb24:2  %p_Val2_s = load i32* %angle_V_addr, align 4    ; <i32> [#uses=1]

ST_3: previousPhase_V_load [1/2] 2.39ns
bb24:4  %previousPhase_V_load = load i1* %previousPhase_V_addr ; <i1> [#uses=1]

ST_3: p_Val2_46 [1/1] 0.00ns
bb24:5  %p_Val2_46 = zext i1 %previousPhase_V_load to i32 ; <i32> [#uses=1]

ST_3: deltaPhi [1/1] 2.44ns
bb24:6  %deltaPhi = sub i32 %p_Val2_s, %p_Val2_46       ; <i32> [#uses=1]

ST_3: tmp_13 [1/1] 0.00ns
bb24:9  %tmp_13 = zext i31 %p_lshr_f_cast to i32        ; <i32> [#uses=1]

ST_3: deltaPhiPrime [1/1] 2.44ns
bb24:10  %deltaPhiPrime = sub i32 %deltaPhi, %tmp_13     ; <i32> [#uses=1]


 <State 4>: 4.96ns
ST_4: lhs_V [1/1] 0.00ns
bb24:11  %lhs_V = sext i32 %deltaPhiPrime to i33         ; <i33> [#uses=1]

ST_4: r_V [1/1] 2.44ns
bb24:12  %r_V = add nsw i33 %lhs_V, 3294198              ; <i33> [#uses=3]

ST_4: tmp_s [1/1] 2.52ns
bb24:13  %tmp_s = icmp sgt i33 %r_V, 0                   ; <i1> [#uses=1]

ST_4: tmp_39 [1/1] 0.00ns
bb24:14  %tmp_39 = trunc i33 %r_V to i32                 ; <i32> [#uses=1]

ST_4: tmp_40 [1/1] 0.00ns
bb24:19  %tmp_40 = call i1 @_ssdm_op_BitSelect.i1.i33.i32(i33 %r_V, i32 31) ; <i1> [#uses=2]


 <State 5>: 6.36ns
ST_5: t_V [1/1] 0.00ns
bb24:15  %t_V = call i52 @_ssdm_op_BitConcatenate.i52.i32.i20(i32 %tmp_39, i20 0) ; <i52> [#uses=2]

ST_5: sext_i_cast [1/1] 0.00ns
bb24:16  %sext_i_cast = sext i52 %t_V to i105            ; <i105> [#uses=1]

ST_5: mul_i [11/11] 6.36ns
bb24:17  %mul_i = mul i105 %sext_i_cast, 5734162285168828 ; <i105> [#uses=2]


 <State 6>: 6.36ns
ST_6: mul_i [10/11] 6.36ns
bb24:17  %mul_i = mul i105 %sext_i_cast, 5734162285168828 ; <i105> [#uses=2]


 <State 7>: 6.36ns
ST_7: mul_i [9/11] 6.36ns
bb24:17  %mul_i = mul i105 %sext_i_cast, 5734162285168828 ; <i105> [#uses=2]


 <State 8>: 6.36ns
ST_8: mul_i [8/11] 6.36ns
bb24:17  %mul_i = mul i105 %sext_i_cast, 5734162285168828 ; <i105> [#uses=2]


 <State 9>: 6.36ns
ST_9: mul_i [7/11] 6.36ns
bb24:17  %mul_i = mul i105 %sext_i_cast, 5734162285168828 ; <i105> [#uses=2]


 <State 10>: 6.36ns
ST_10: mul_i [6/11] 6.36ns
bb24:17  %mul_i = mul i105 %sext_i_cast, 5734162285168828 ; <i105> [#uses=2]


 <State 11>: 6.36ns
ST_11: mul_i [5/11] 6.36ns
bb24:17  %mul_i = mul i105 %sext_i_cast, 5734162285168828 ; <i105> [#uses=2]


 <State 12>: 6.36ns
ST_12: mul_i [4/11] 6.36ns
bb24:17  %mul_i = mul i105 %sext_i_cast, 5734162285168828 ; <i105> [#uses=2]


 <State 13>: 6.36ns
ST_13: mul_i [3/11] 6.36ns
bb24:17  %mul_i = mul i105 %sext_i_cast, 5734162285168828 ; <i105> [#uses=2]


 <State 14>: 6.36ns
ST_14: mul_i [2/11] 6.36ns
bb24:17  %mul_i = mul i105 %sext_i_cast, 5734162285168828 ; <i105> [#uses=2]


 <State 15>: 6.36ns
ST_15: mul_i [1/11] 6.36ns
bb24:17  %mul_i = mul i105 %sext_i_cast, 5734162285168828 ; <i105> [#uses=2]


 <State 16>: 8.53ns
ST_16: neg_mul_i [1/1] 4.72ns
bb24:18  %neg_mul_i = sub i105 0, %mul_i                 ; <i105> [#uses=1]

ST_16: sel_i [1/1] 1.37ns
bb24:20  %sel_i = select i1 %tmp_40, i105 %neg_mul_i, i105 %mul_i ; <i105> [#uses=1]

ST_16: tmp_41 [1/1] 0.00ns
bb24:21  %tmp_41 = call i30 @_ssdm_op_PartSelect.i30.i105.i32.i32(i105 %sel_i, i32 75, i32 104) ; <i30> [#uses=1]

ST_16: trunc_i_cast [1/1] 0.00ns
bb24:22  %trunc_i_cast = sext i30 %tmp_41 to i31         ; <i31> [#uses=2]

ST_16: neg_ti_i [1/1] 2.44ns
bb24:23  %neg_ti_i = sub i31 0, %trunc_i_cast            ; <i31> [#uses=1]


 <State 17>: 6.45ns
ST_17: tmp_i5 [1/1] 1.37ns
bb24:24  %tmp_i5 = select i1 %tmp_40, i31 %neg_ti_i, i31 %trunc_i_cast ; <i31> [#uses=3]

ST_17: tmp_45 [1/1] 0.00ns
bb24:25  %tmp_45 = call i11 @_ssdm_op_PartSelect.i11.i31.i32.i32(i31 %tmp_i5, i32 20, i32 30) ; <i11> [#uses=1]

ST_17: tmp_i6 [1/1] 0.00ns
bb24:26  %tmp_i6 = sext i11 %tmp_45 to i32               ; <i32> [#uses=3]

ST_17: tmp_46 [1/1] 0.00ns
bb24:27  %tmp_46 = call i1 @_ssdm_op_BitSelect.i1.i31.i32(i31 %tmp_i5, i32 30) ; <i1> [#uses=1]

ST_17: tmp_47 [1/1] 0.00ns
bb24:28  %tmp_47 = trunc i31 %tmp_i5 to i20              ; <i20> [#uses=1]

ST_17: ret_V_1_i [1/1] 1.84ns
bb24:29  %ret_V_1_i = add i32 %tmp_i6, 1                 ; <i32> [#uses=1]

ST_17: tmp_1_i [1/1] 2.34ns
bb24:30  %tmp_1_i = icmp eq i20 %tmp_47, 0               ; <i1> [#uses=1]

ST_17: p_i [1/1] 1.37ns
bb24:31  %p_i = select i1 %tmp_1_i, i32 %tmp_i6, i32 %ret_V_1_i ; <i32> [#uses=1]

ST_17: result [1/1] 1.37ns
bb24:32  %result = select i1 %tmp_46, i32 %p_i, i32 %tmp_i6 ; <i32> [#uses=1]


 <State 18>: 6.36ns
ST_18: tmp_48 [1/1] 0.00ns
bb24:33  %tmp_48 = shl i32 %result, 20                   ; <i32> [#uses=1]

ST_18: tmp_29 [1/1] 0.00ns
bb24:34  %tmp_29 = sext i32 %tmp_48 to i52               ; <i52> [#uses=1]

ST_18: rhs_V3_i_cast [3/3] 6.36ns
bb24:35  %rhs_V3_i_cast = mul i52 %tmp_29, 6588396       ; <i52> [#uses=1]


 <State 19>: 6.36ns
ST_19: rhs_V3_i_cast [2/3] 6.36ns
bb24:35  %rhs_V3_i_cast = mul i52 %tmp_29, 6588396       ; <i52> [#uses=1]


 <State 20>: 6.36ns
ST_20: rhs_V3_i_cast [1/3] 6.36ns
bb24:35  %rhs_V3_i_cast = mul i52 %tmp_29, 6588396       ; <i52> [#uses=1]


 <State 21>: 7.87ns
ST_21: r_V_32 [1/1] 3.04ns
bb24:36  %r_V_32 = sub i52 %t_V, %rhs_V3_i_cast          ; <i52> [#uses=1]

ST_21: p_Val2_55 [1/1] 0.00ns
bb24:37  %p_Val2_55 = call i32 @_ssdm_op_PartSelect.i32.i52.i32.i32(i52 %r_V_32, i32 20, i32 51) ; <i32> [#uses=2]

ST_21: stg_129 [1/1] 0.00ns
bb24:38  br i1 %tmp_s, label %bb31, label %bb36

ST_21: r_V_8 [1/1] 2.44ns
bb36:0  %r_V_8 = add i32 %p_Val2_55, 3294198            ; <i32> [#uses=1]

ST_21: deltaPhiPrimeMod_V_addr_1 [1/1] 0.00ns
bb36:1  %deltaPhiPrimeMod_V_addr_1 = getelementptr [1024 x i32]* %deltaPhiPrimeMod_V, i64 0, i64 %tmp ; <i32*> [#uses=1]

ST_21: stg_132 [1/1] 2.39ns
bb36:2  store i32 %r_V_8, i32* %deltaPhiPrimeMod_V_addr_1, align 4

ST_21: stg_133 [1/1] 0.00ns
bb36:3  br label %bb41

ST_21: r_V_7 [1/1] 2.44ns
bb31:0  %r_V_7 = add i32 %p_Val2_55, -3294198           ; <i32> [#uses=1]

ST_21: deltaPhiPrimeMod_V_addr [1/1] 0.00ns
bb31:1  %deltaPhiPrimeMod_V_addr = getelementptr [1024 x i32]* %deltaPhiPrimeMod_V, i64 0, i64 %tmp ; <i32*> [#uses=1]

ST_21: stg_136 [1/1] 2.39ns
bb31:2  store i32 %r_V_7, i32* %deltaPhiPrimeMod_V_addr, align 4

ST_21: stg_137 [1/1] 0.00ns
bb31:3  br label %bb41

ST_21: next_mul [1/1] 2.56ns
bb41:11  %next_mul = add i33 %phi_mul, 6588396           ; <i33> [#uses=1]

ST_21: p_lshr_f1_cast [1/1] 0.00ns
bb41:12  %p_lshr_f1_cast = call i23 @_ssdm_op_PartSelect.i23.i33.i32.i32(i33 %phi_mul, i32 10, i32 32) ; <i23> [#uses=1]


 <State 22>: 2.39ns
ST_22: deltaPhiPrimeMod_V_addr_2 [1/1] 0.00ns
bb41:0  %deltaPhiPrimeMod_V_addr_2 = getelementptr [1024 x i32]* %deltaPhiPrimeMod_V, i64 0, i64 %tmp ; <i32*> [#uses=1]

ST_22: p_Val2_59 [2/2] 2.39ns
bb41:1  %p_Val2_59 = load i32* %deltaPhiPrimeMod_V_addr_2, align 4 ; <i32> [#uses=3]

ST_22: phaseCumulative_V_addr_1 [1/1] 0.00ns
bb41:18  %phaseCumulative_V_addr_1 = getelementptr [1024 x i32]* %phaseCumulative_V, i64 0, i64 %tmp ; <i32*> [#uses=2]


 <State 23>: 5.43ns
ST_23: p_Val2_59 [1/2] 2.39ns
bb41:1  %p_Val2_59 = load i32* %deltaPhiPrimeMod_V_addr_2, align 4 ; <i32> [#uses=3]

ST_23: t_V_1 [1/1] 0.00ns
bb41:2  %t_V_1 = call i52 @_ssdm_op_BitConcatenate.i52.i32.i20(i32 %p_Val2_59, i20 0) ; <i52> [#uses=1]

ST_23: tmp_55 [1/1] 0.00ns
bb41:3  %tmp_55 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %p_Val2_59, i32 31) ; <i1> [#uses=1]

ST_23: p_neg1 [1/1] 3.04ns
bb41:4  %p_neg1 = sub i52 0, %t_V_1                     ; <i52> [#uses=1]

ST_23: tmp_31 [1/1] 0.00ns
bb41:5  %tmp_31 = call i24 @_ssdm_op_PartSelect.i24.i52.i32.i32(i52 %p_neg1, i32 28, i32 51) ; <i24> [#uses=1]

ST_23: tmp_32 [1/1] 0.00ns
bb41:8  %tmp_32 = call i24 @_ssdm_op_PartSelect.i24.i32.i32.i32(i32 %p_Val2_59, i32 8, i32 31) ; <i24> [#uses=1]


 <State 24>: 5.89ns
ST_24: p_lshr1_cast [1/1] 0.00ns
bb41:6  %p_lshr1_cast = zext i24 %tmp_31 to i25         ; <i25> [#uses=1]

ST_24: p_neg_t1 [1/1] 2.20ns
bb41:7  %p_neg_t1 = sub i25 0, %p_lshr1_cast            ; <i25> [#uses=1]

ST_24: tmp_21_cast [1/1] 0.00ns
bb41:9  %tmp_21_cast = zext i24 %tmp_32 to i25          ; <i25> [#uses=1]

ST_24: tmp_12 [1/1] 1.37ns
bb41:10  %tmp_12 = select i1 %tmp_55, i25 %p_neg_t1, i25 %tmp_21_cast ; <i25> [#uses=1]

ST_24: tmp_24_cast [1/1] 0.00ns
bb41:13  %tmp_24_cast = sext i25 %tmp_12 to i26          ; <i26> [#uses=1]

ST_24: tmp_25_cast [1/1] 0.00ns
bb41:14  %tmp_25_cast = zext i23 %p_lshr_f1_cast to i26  ; <i26> [#uses=1]

ST_24: trueFreq [1/1] 2.32ns
bb41:15  %trueFreq = add i26 %tmp_24_cast, %tmp_25_cast  ; <i26> [#uses=1]


 <State 25>: 6.36ns
ST_25: trueFreq_cast [1/1] 0.00ns
bb41:16  %trueFreq_cast = sext i26 %trueFreq to i32      ; <i32> [#uses=1]

ST_25: r_V_16 [3/3] 6.36ns
bb41:17  %r_V_16 = mul i32 %trueFreq_cast, 323           ; <i32> [#uses=1]


 <State 26>: 6.36ns
ST_26: r_V_16 [2/3] 6.36ns
bb41:17  %r_V_16 = mul i32 %trueFreq_cast, 323           ; <i32> [#uses=1]


 <State 27>: 6.36ns
ST_27: r_V_16 [1/3] 6.36ns
bb41:17  %r_V_16 = mul i32 %trueFreq_cast, 323           ; <i32> [#uses=1]

ST_27: p_Val2_60 [2/2] 2.39ns
bb41:19  %p_Val2_60 = load i32* %phaseCumulative_V_addr_1, align 4 ; <i32> [#uses=1]


 <State 28>: 7.22ns
ST_28: p_Val2_60 [1/2] 2.39ns
bb41:19  %p_Val2_60 = load i32* %phaseCumulative_V_addr_1, align 4 ; <i32> [#uses=1]

ST_28: tmp_15 [1/1] 2.44ns
bb41:20  %tmp_15 = add i32 %r_V_16, %p_Val2_60           ; <i32> [#uses=1]

ST_28: stg_163 [1/1] 2.39ns
bb41:21  store i32 %tmp_15, i32* %phaseCumulative_V_addr_1, align 4

ST_28: stg_164 [1/1] 0.00ns
bb41:22  br label %bb53


 <State 29>: 2.39ns
ST_29: j [1/1] 0.00ns
bb77:0  %j = phi i11 [ %j_1, %cordic_sin_cos.exit ], [ 0, %bb53 ] ; <i11> [#uses=3]

ST_29: empty_51 [1/1] 0.00ns
bb77:1  %empty_51 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1024, i64 1024, i64 1024) nounwind ; <i32> [#uses=0]

ST_29: exitcond4 [1/1] 2.11ns
bb77:2  %exitcond4 = icmp eq i11 %j, -1024              ; <i1> [#uses=1]

ST_29: j_1 [1/1] 1.84ns
bb77:3  %j_1 = add i11 %j, 1                            ; <i11> [#uses=1]

ST_29: stg_169 [1/1] 0.00ns
bb77:4  br i1 %exitcond4, label %bb78, label %bb70

ST_29: tmp_5 [1/1] 0.00ns
bb70:0  %tmp_5 = zext i11 %j to i64                     ; <i64> [#uses=4]

ST_29: phaseCumulative_V_addr [1/1] 0.00ns
bb70:1  %phaseCumulative_V_addr = getelementptr [1024 x i32]* %phaseCumulative_V, i64 0, i64 %tmp_5 ; <i32*> [#uses=1]

ST_29: p_Val2_49 [2/2] 2.39ns
bb70:2  %p_Val2_49 = load i32* %phaseCumulative_V_addr  ; <i32> [#uses=2]

ST_29: stg_173 [2/2] 0.00ns
bb78:0  call fastcc void @IFFT([1024 x i32]* %real_V, [1024 x i32]* %imag_V)


 <State 30>: 8.75ns
ST_30: p_Val2_49 [1/2] 2.39ns
bb70:2  %p_Val2_49 = load i32* %phaseCumulative_V_addr  ; <i32> [#uses=2]

ST_30: t_V_7 [1/1] 0.00ns
bb70:3  %t_V_7 = call i52 @_ssdm_op_BitConcatenate.i52.i32.i20(i32 %p_Val2_49, i20 0) ; <i52> [#uses=2]

ST_30: sext_i37_cast [1/1] 0.00ns
bb70:4  %sext_i37_cast = sext i52 %t_V_7 to i105        ; <i105> [#uses=1]

ST_30: mul_i1 [11/11] 6.36ns
bb70:5  %mul_i1 = mul i105 %sext_i37_cast, 5734162285168828 ; <i105> [#uses=2]

ST_30: tmp_49 [1/1] 0.00ns
bb70:7  %tmp_49 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %p_Val2_49, i32 31) ; <i1> [#uses=2]


 <State 31>: 6.36ns
ST_31: mul_i1 [10/11] 6.36ns
bb70:5  %mul_i1 = mul i105 %sext_i37_cast, 5734162285168828 ; <i105> [#uses=2]


 <State 32>: 6.36ns
ST_32: mul_i1 [9/11] 6.36ns
bb70:5  %mul_i1 = mul i105 %sext_i37_cast, 5734162285168828 ; <i105> [#uses=2]


 <State 33>: 6.36ns
ST_33: mul_i1 [8/11] 6.36ns
bb70:5  %mul_i1 = mul i105 %sext_i37_cast, 5734162285168828 ; <i105> [#uses=2]


 <State 34>: 6.36ns
ST_34: mul_i1 [7/11] 6.36ns
bb70:5  %mul_i1 = mul i105 %sext_i37_cast, 5734162285168828 ; <i105> [#uses=2]


 <State 35>: 6.36ns
ST_35: mul_i1 [6/11] 6.36ns
bb70:5  %mul_i1 = mul i105 %sext_i37_cast, 5734162285168828 ; <i105> [#uses=2]


 <State 36>: 6.36ns
ST_36: mul_i1 [5/11] 6.36ns
bb70:5  %mul_i1 = mul i105 %sext_i37_cast, 5734162285168828 ; <i105> [#uses=2]


 <State 37>: 6.36ns
ST_37: mul_i1 [4/11] 6.36ns
bb70:5  %mul_i1 = mul i105 %sext_i37_cast, 5734162285168828 ; <i105> [#uses=2]


 <State 38>: 6.36ns
ST_38: mul_i1 [3/11] 6.36ns
bb70:5  %mul_i1 = mul i105 %sext_i37_cast, 5734162285168828 ; <i105> [#uses=2]


 <State 39>: 6.36ns
ST_39: mul_i1 [2/11] 6.36ns
bb70:5  %mul_i1 = mul i105 %sext_i37_cast, 5734162285168828 ; <i105> [#uses=2]


 <State 40>: 6.36ns
ST_40: mul_i1 [1/11] 6.36ns
bb70:5  %mul_i1 = mul i105 %sext_i37_cast, 5734162285168828 ; <i105> [#uses=2]


 <State 41>: 8.53ns
ST_41: neg_mul_i1 [1/1] 4.72ns
bb70:6  %neg_mul_i1 = sub i105 0, %mul_i1               ; <i105> [#uses=1]

ST_41: sel_i1 [1/1] 1.37ns
bb70:8  %sel_i1 = select i1 %tmp_49, i105 %neg_mul_i1, i105 %mul_i1 ; <i105> [#uses=1]

ST_41: tmp_50 [1/1] 0.00ns
bb70:9  %tmp_50 = call i30 @_ssdm_op_PartSelect.i30.i105.i32.i32(i105 %sel_i1, i32 75, i32 104) ; <i30> [#uses=1]

ST_41: trunc_i1_cast [1/1] 0.00ns
bb70:10  %trunc_i1_cast = sext i30 %tmp_50 to i31        ; <i31> [#uses=2]

ST_41: neg_ti_i1 [1/1] 2.44ns
bb70:11  %neg_ti_i1 = sub i31 0, %trunc_i1_cast          ; <i31> [#uses=1]


 <State 42>: 6.45ns
ST_42: tmp_i1 [1/1] 1.37ns
bb70:12  %tmp_i1 = select i1 %tmp_49, i31 %neg_ti_i1, i31 %trunc_i1_cast ; <i31> [#uses=3]

ST_42: tmp_51 [1/1] 0.00ns
bb70:13  %tmp_51 = call i11 @_ssdm_op_PartSelect.i11.i31.i32.i32(i31 %tmp_i1, i32 20, i32 30) ; <i11> [#uses=1]

ST_42: tmp_i1_49 [1/1] 0.00ns
bb70:14  %tmp_i1_49 = sext i11 %tmp_51 to i32            ; <i32> [#uses=3]

ST_42: tmp_52 [1/1] 0.00ns
bb70:15  %tmp_52 = call i1 @_ssdm_op_BitSelect.i1.i31.i32(i31 %tmp_i1, i32 30) ; <i1> [#uses=1]

ST_42: tmp_53 [1/1] 0.00ns
bb70:16  %tmp_53 = trunc i31 %tmp_i1 to i20              ; <i20> [#uses=1]

ST_42: ret_V_1_i1 [1/1] 1.84ns
bb70:17  %ret_V_1_i1 = add i32 %tmp_i1_49, 1             ; <i32> [#uses=1]

ST_42: tmp_1_i1 [1/1] 2.34ns
bb70:18  %tmp_1_i1 = icmp eq i20 %tmp_53, 0              ; <i1> [#uses=1]

ST_42: p_i1 [1/1] 1.37ns
bb70:19  %p_i1 = select i1 %tmp_1_i1, i32 %tmp_i1_49, i32 %ret_V_1_i1 ; <i32> [#uses=1]

ST_42: result_2 [1/1] 1.37ns
bb70:20  %result_2 = select i1 %tmp_52, i32 %p_i1, i32 %tmp_i1_49 ; <i32> [#uses=1]


 <State 43>: 6.36ns
ST_43: tmp_54 [1/1] 0.00ns
bb70:21  %tmp_54 = shl i32 %result_2, 20                 ; <i32> [#uses=1]

ST_43: tmp_30 [1/1] 0.00ns
bb70:22  %tmp_30 = sext i32 %tmp_54 to i52               ; <i52> [#uses=1]

ST_43: rhs_V3_i58_cast [3/3] 6.36ns
bb70:23  %rhs_V3_i58_cast = mul i52 %tmp_30, 6588396     ; <i52> [#uses=1]


 <State 44>: 6.36ns
ST_44: rhs_V3_i58_cast [2/3] 6.36ns
bb70:23  %rhs_V3_i58_cast = mul i52 %tmp_30, 6588396     ; <i52> [#uses=1]


 <State 45>: 6.36ns
ST_45: rhs_V3_i58_cast [1/3] 6.36ns
bb70:23  %rhs_V3_i58_cast = mul i52 %tmp_30, 6588396     ; <i52> [#uses=1]


 <State 46>: 8.14ns
ST_46: r_V_33 [1/1] 3.04ns
bb70:24  %r_V_33 = sub i52 %t_V_7, %rhs_V3_i58_cast      ; <i52> [#uses=3]

ST_46: real_angle_V [1/1] 0.00ns
bb70:25  %real_angle_V = call i32 @_ssdm_op_PartSelect.i32.i52.i32.i32(i52 %r_V_33, i32 20, i32 51) ; <i32> [#uses=4]

ST_46: agg_result_V_i61_cast1 [1/1] 0.00ns
bb70:26  %agg_result_V_i61_cast1 = call i31 @_ssdm_op_PartSelect.i31.i52.i32.i32(i52 %r_V_33, i32 20, i32 50) ; <i31> [#uses=1]

ST_46: agg_result_V_i61_cast [1/1] 0.00ns
bb70:27  %agg_result_V_i61_cast = call i21 @_ssdm_op_PartSelect.i21.i52.i32.i32(i52 %r_V_33, i32 20, i32 40) ; <i21> [#uses=2]

ST_46: tmp_i [1/1] 2.52ns
bb70:28  %tmp_i = icmp slt i32 %real_angle_V, 1647099    ; <i1> [#uses=1]

ST_46: stg_213 [1/1] 0.00ns
bb70:29  br i1 %tmp_i, label %bb.i, label %bb1.i

ST_46: tmp_i_50 [1/1] 2.52ns
bb1.i:0  %tmp_i_50 = icmp slt i32 %real_angle_V, 3294198 ; <i1> [#uses=1]

ST_46: stg_215 [1/1] 0.00ns
bb1.i:1  br i1 %tmp_i_50, label %bb2.i, label %bb6.i

ST_46: tmp_68_i [1/1] 2.52ns
bb6.i:0  %tmp_68_i = icmp slt i32 %real_angle_V, 4941297 ; <i1> [#uses=1]

ST_46: stg_217 [1/1] 0.00ns
bb6.i:1  br i1 %tmp_68_i, label %bb9.i, label %bb13.i

ST_46: cordic_ret_i [2/2] 5.10ns
bb.i:0  %cordic_ret_i = call fastcc %cordic_ret @cordic(i32 %real_angle_V) ; <%cordic_ret> [#uses=2]


 <State 47>: 7.54ns
ST_47: r_V_65_i [1/1] 2.44ns
bb13.i:0  %r_V_65_i = add i31 %agg_result_V_i61_cast1, -4941297 ; <i31> [#uses=1]

ST_47: r_V_65_i_cast [1/1] 0.00ns
bb13.i:1  %r_V_65_i_cast = zext i31 %r_V_65_i to i32      ; <i32> [#uses=1]

ST_47: cordic_ret14_i [2/2] 5.10ns
bb13.i:2  %cordic_ret14_i = call fastcc %cordic_ret @cordic(i32 %r_V_65_i_cast) ; <%cordic_ret> [#uses=2]


 <State 48>: 4.17ns
ST_48: cordic_ret14_i [1/2] 0.00ns
bb13.i:2  %cordic_ret14_i = call fastcc %cordic_ret @cordic(i32 %r_V_65_i_cast) ; <%cordic_ret> [#uses=2]

ST_48: sin_value_V_3 [1/1] 0.00ns
bb13.i:3  %sin_value_V_3 = extractvalue %cordic_ret %cordic_ret14_i, 0 ; <i32> [#uses=1]

ST_48: cos_value_V_5 [1/1] 0.00ns
bb13.i:4  %cos_value_V_5 = extractvalue %cordic_ret %cordic_ret14_i, 1 ; <i32> [#uses=1]

ST_48: ssdm_int_32_true_V_write_assign_7 [1/1] 2.44ns
bb13.i:5  %ssdm_int_32_true_V_write_assign_7 = sub i32 0, %cos_value_V_5 ; <i32> [#uses=1]

ST_48: stg_226 [1/1] 1.74ns
bb13.i:6  br label %cordic_sin_cos.exit

ST_48: cordic_ret17_i [1/2] 0.00ns
bb9.i:2  %cordic_ret17_i = call fastcc %cordic_ret @cordic(i32 %r_V_64_i_cast) ; <%cordic_ret> [#uses=2]

ST_48: sin_value_V_5 [1/1] 0.00ns
bb9.i:3  %sin_value_V_5 = extractvalue %cordic_ret %cordic_ret17_i, 0 ; <i32> [#uses=1]

ST_48: cos_value_V_4 [1/1] 0.00ns
bb9.i:4  %cos_value_V_4 = extractvalue %cordic_ret %cordic_ret17_i, 1 ; <i32> [#uses=1]

ST_48: ssdm_int_32_true_V_write_assign_6 [1/1] 2.44ns
bb9.i:5  %ssdm_int_32_true_V_write_assign_6 = sub i32 0, %cos_value_V_4 ; <i32> [#uses=1]

ST_48: ssdm_int_32_true_V_write_assign_5 [1/1] 2.44ns
bb9.i:6  %ssdm_int_32_true_V_write_assign_5 = sub i32 0, %sin_value_V_5 ; <i32> [#uses=1]

ST_48: stg_232 [1/1] 1.74ns
bb9.i:7  br label %cordic_sin_cos.exit

ST_48: cordic_ret20_i [1/2] 0.00ns
bb2.i:2  %cordic_ret20_i = call fastcc %cordic_ret @cordic(i32 %r_V_i_cast) ; <%cordic_ret> [#uses=2]

ST_48: sin_value_V_4 [1/1] 0.00ns
bb2.i:3  %sin_value_V_4 = extractvalue %cordic_ret %cordic_ret20_i, 0 ; <i32> [#uses=1]

ST_48: cos_value_V_1 [1/1] 0.00ns
bb2.i:4  %cos_value_V_1 = extractvalue %cordic_ret %cordic_ret20_i, 1 ; <i32> [#uses=1]

ST_48: ssdm_int_32_true_V_write_assign_4 [1/1] 2.44ns
bb2.i:5  %ssdm_int_32_true_V_write_assign_4 = sub i32 0, %sin_value_V_4 ; <i32> [#uses=1]

ST_48: stg_237 [1/1] 1.74ns
bb2.i:6  br label %cordic_sin_cos.exit

ST_48: amplitude_V_addr [1/1] 0.00ns
cordic_sin_cos.exit:2  %amplitude_V_addr = getelementptr [1024 x i32]* %amplitude_V, i64 0, i64 %tmp_5 ; <i32*> [#uses=1]

ST_48: amplitude_V_load [2/2] 2.39ns
cordic_sin_cos.exit:3  %amplitude_V_load = load i32* %amplitude_V_addr, align 4 ; <i32> [#uses=1]


 <State 49>: 7.30ns
ST_49: r_V_64_i [1/1] 2.20ns
bb9.i:0  %r_V_64_i = add i21 %agg_result_V_i61_cast, 900106 ; <i21> [#uses=1]

ST_49: r_V_64_i_cast [1/1] 0.00ns
bb9.i:1  %r_V_64_i_cast = zext i21 %r_V_64_i to i32      ; <i32> [#uses=1]

ST_49: cordic_ret17_i [2/2] 5.10ns
bb9.i:2  %cordic_ret17_i = call fastcc %cordic_ret @cordic(i32 %r_V_64_i_cast) ; <%cordic_ret> [#uses=2]


 <State 50>: 7.30ns
ST_50: r_V_i [1/1] 2.20ns
bb2.i:0  %r_V_i = add i21 %agg_result_V_i61_cast, 450053 ; <i21> [#uses=1]

ST_50: r_V_i_cast [1/1] 0.00ns
bb2.i:1  %r_V_i_cast = zext i21 %r_V_i to i32            ; <i32> [#uses=1]

ST_50: cordic_ret20_i [2/2] 5.10ns
bb2.i:2  %cordic_ret20_i = call fastcc %cordic_ret @cordic(i32 %r_V_i_cast) ; <%cordic_ret> [#uses=2]


 <State 51>: 1.74ns
ST_51: cordic_ret_i [1/2] 0.00ns
bb.i:0  %cordic_ret_i = call fastcc %cordic_ret @cordic(i32 %real_angle_V) ; <%cordic_ret> [#uses=2]

ST_51: ssdm_int_32_true_V_write_assign [1/1] 0.00ns
bb.i:1  %ssdm_int_32_true_V_write_assign = extractvalue %cordic_ret %cordic_ret_i, 0 ; <i32> [#uses=1]

ST_51: ssdm_int_32_true_V_write_assign_2 [1/1] 0.00ns
bb.i:2  %ssdm_int_32_true_V_write_assign_2 = extractvalue %cordic_ret %cordic_ret_i, 1 ; <i32> [#uses=1]

ST_51: stg_249 [1/1] 1.74ns
bb.i:3  br label %cordic_sin_cos.exit


 <State 52>: 8.75ns
ST_52: sin_value_V [1/1] 0.00ns
cordic_sin_cos.exit:0  %sin_value_V = phi i32 [ %ssdm_int_32_true_V_write_assign_7, %bb13.i ], [ %ssdm_int_32_true_V_write_assign_5, %bb9.i ], [ %cos_value_V_1, %bb2.i ], [ %ssdm_int_32_true_V_write_assign, %bb.i ] ; <i32> [#uses=1]

ST_52: cos_value_V [1/1] 0.00ns
cordic_sin_cos.exit:1  %cos_value_V = phi i32 [ %sin_value_V_3, %bb13.i ], [ %ssdm_int_32_true_V_write_assign_6, %bb9.i ], [ %ssdm_int_32_true_V_write_assign_4, %bb2.i ], [ %ssdm_int_32_true_V_write_assign_2, %bb.i ] ; <i32> [#uses=1]

ST_52: amplitude_V_load [1/2] 2.39ns
cordic_sin_cos.exit:3  %amplitude_V_load = load i32* %amplitude_V_addr, align 4 ; <i32> [#uses=1]

ST_52: OP1_V_cast [1/1] 0.00ns
cordic_sin_cos.exit:4  %OP1_V_cast = sext i32 %amplitude_V_load to i52 ; <i52> [#uses=2]

ST_52: OP2_V_1_cast [1/1] 0.00ns
cordic_sin_cos.exit:5  %OP2_V_1_cast = sext i32 %cos_value_V to i52    ; <i52> [#uses=1]

ST_52: r_V_34 [6/6] 6.36ns
cordic_sin_cos.exit:6  %r_V_34 = mul i52 %OP2_V_1_cast, %OP1_V_cast    ; <i52> [#uses=1]

ST_52: OP2_V_2_cast [1/1] 0.00ns
cordic_sin_cos.exit:10  %OP2_V_2_cast = sext i32 %sin_value_V to i52    ; <i52> [#uses=1]

ST_52: r_V_35 [6/6] 6.36ns
cordic_sin_cos.exit:11  %r_V_35 = mul i52 %OP2_V_2_cast, %OP1_V_cast    ; <i52> [#uses=1]


 <State 53>: 6.36ns
ST_53: r_V_34 [5/6] 6.36ns
cordic_sin_cos.exit:6  %r_V_34 = mul i52 %OP2_V_1_cast, %OP1_V_cast    ; <i52> [#uses=1]

ST_53: r_V_35 [5/6] 6.36ns
cordic_sin_cos.exit:11  %r_V_35 = mul i52 %OP2_V_2_cast, %OP1_V_cast    ; <i52> [#uses=1]


 <State 54>: 6.36ns
ST_54: r_V_34 [4/6] 6.36ns
cordic_sin_cos.exit:6  %r_V_34 = mul i52 %OP2_V_1_cast, %OP1_V_cast    ; <i52> [#uses=1]

ST_54: r_V_35 [4/6] 6.36ns
cordic_sin_cos.exit:11  %r_V_35 = mul i52 %OP2_V_2_cast, %OP1_V_cast    ; <i52> [#uses=1]


 <State 55>: 6.36ns
ST_55: r_V_34 [3/6] 6.36ns
cordic_sin_cos.exit:6  %r_V_34 = mul i52 %OP2_V_1_cast, %OP1_V_cast    ; <i52> [#uses=1]

ST_55: r_V_35 [3/6] 6.36ns
cordic_sin_cos.exit:11  %r_V_35 = mul i52 %OP2_V_2_cast, %OP1_V_cast    ; <i52> [#uses=1]


 <State 56>: 6.36ns
ST_56: r_V_34 [2/6] 6.36ns
cordic_sin_cos.exit:6  %r_V_34 = mul i52 %OP2_V_1_cast, %OP1_V_cast    ; <i52> [#uses=1]

ST_56: r_V_35 [2/6] 6.36ns
cordic_sin_cos.exit:11  %r_V_35 = mul i52 %OP2_V_2_cast, %OP1_V_cast    ; <i52> [#uses=1]


 <State 57>: 8.75ns
ST_57: r_V_34 [1/6] 6.36ns
cordic_sin_cos.exit:6  %r_V_34 = mul i52 %OP2_V_1_cast, %OP1_V_cast    ; <i52> [#uses=1]

ST_57: tmp_8 [1/1] 0.00ns
cordic_sin_cos.exit:7  %tmp_8 = call i32 @_ssdm_op_PartSelect.i32.i52.i32.i32(i52 %r_V_34, i32 20, i32 51) ; <i32> [#uses=1]

ST_57: real_V_addr_1 [1/1] 0.00ns
cordic_sin_cos.exit:8  %real_V_addr_1 = getelementptr [1024 x i32]* %real_V, i64 0, i64 %tmp_5 ; <i32*> [#uses=1]

ST_57: stg_269 [1/1] 2.39ns
cordic_sin_cos.exit:9  store i32 %tmp_8, i32* %real_V_addr_1, align 4

ST_57: r_V_35 [1/6] 6.36ns
cordic_sin_cos.exit:11  %r_V_35 = mul i52 %OP2_V_2_cast, %OP1_V_cast    ; <i52> [#uses=1]

ST_57: tmp_10 [1/1] 0.00ns
cordic_sin_cos.exit:12  %tmp_10 = call i32 @_ssdm_op_PartSelect.i32.i52.i32.i32(i52 %r_V_35, i32 20, i32 51) ; <i32> [#uses=1]

ST_57: imag_V_addr [1/1] 0.00ns
cordic_sin_cos.exit:13  %imag_V_addr = getelementptr [1024 x i32]* %imag_V, i64 0, i64 %tmp_5 ; <i32*> [#uses=1]

ST_57: stg_273 [1/1] 2.39ns
cordic_sin_cos.exit:14  store i32 %tmp_10, i32* %imag_V_addr, align 4

ST_57: stg_274 [1/1] 0.00ns
cordic_sin_cos.exit:15  br label %bb77


 <State 58>: 1.39ns
ST_58: stg_275 [1/2] 0.00ns
bb78:0  call fastcc void @IFFT([1024 x i32]* %real_V, [1024 x i32]* %imag_V)

ST_58: stg_276 [1/1] 1.39ns
bb78:1  br label %bb82


 <State 59>: 2.39ns
ST_59: m [1/1] 0.00ns
bb82:0  %m = phi i11 [ 0, %bb78 ], [ %m_1, %bb79 ]      ; <i11> [#uses=3]

ST_59: empty_52 [1/1] 0.00ns
bb82:1  %empty_52 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1024, i64 1024, i64 1024) nounwind ; <i32> [#uses=0]

ST_59: exitcond3 [1/1] 2.11ns
bb82:2  %exitcond3 = icmp eq i11 %m, -1024              ; <i1> [#uses=1]

ST_59: m_1 [1/1] 1.84ns
bb82:3  %m_1 = add i11 %m, 1                            ; <i11> [#uses=1]

ST_59: stg_281 [1/1] 0.00ns
bb82:4  br i1 %exitcond3, label %return, label %bb79

ST_59: tmp_16 [1/1] 0.00ns
bb79:0  %tmp_16 = zext i11 %m to i64                    ; <i64> [#uses=3]

ST_59: real_V_addr [1/1] 0.00ns
bb79:1  %real_V_addr = getelementptr [1024 x i32]* %real_V, i64 0, i64 %tmp_16 ; <i32*> [#uses=1]

ST_59: real_V_load [2/2] 2.39ns
bb79:2  %real_V_load = load i32* %real_V_addr, align 4  ; <i32> [#uses=1]

ST_59: wn_V_1_addr [1/1] 0.00ns
bb79:4  %wn_V_1_addr = getelementptr [1024 x i20]* @wn_V_1, i64 0, i64 %tmp_16 ; <i20*> [#uses=1]

ST_59: wn_V_1_load [2/2] 2.39ns
bb79:5  %wn_V_1_load = load i20* %wn_V_1_addr           ; <i20> [#uses=1]

ST_59: stg_287 [1/1] 0.00ns
return:0  ret void


 <State 60>: 8.75ns
ST_60: real_V_load [1/2] 2.39ns
bb79:2  %real_V_load = load i32* %real_V_addr, align 4  ; <i32> [#uses=1]

ST_60: OP1_V_1_cast [1/1] 0.00ns
bb79:3  %OP1_V_1_cast = sext i32 %real_V_load to i52    ; <i52> [#uses=1]

ST_60: wn_V_1_load [1/2] 2.39ns
bb79:5  %wn_V_1_load = load i20* %wn_V_1_addr           ; <i20> [#uses=1]

ST_60: OP2_V_cast [1/1] 0.00ns
bb79:6  %OP2_V_cast = zext i20 %wn_V_1_load to i52      ; <i52> [#uses=1]

ST_60: r_V_36 [3/3] 6.36ns
bb79:7  %r_V_36 = mul i52 %OP2_V_cast, %OP1_V_1_cast    ; <i52> [#uses=2]


 <State 61>: 6.36ns
ST_61: r_V_36 [2/3] 6.36ns
bb79:7  %r_V_36 = mul i52 %OP2_V_cast, %OP1_V_1_cast    ; <i52> [#uses=2]


 <State 62>: 8.75ns
ST_62: r_V_36 [1/3] 6.36ns
bb79:7  %r_V_36 = mul i52 %OP2_V_cast, %OP1_V_1_cast    ; <i52> [#uses=2]

ST_62: tmp_33 [1/1] 0.00ns
bb79:8  %tmp_33 = call i72 @_ssdm_op_BitConcatenate.i72.i52.i20(i52 %r_V_36, i20 0) ; <i72> [#uses=1]

ST_62: sext_cast_cast [1/1] 0.00ns
bb79:9  %sext_cast_cast = sext i72 %tmp_33 to i157      ; <i157> [#uses=1]

ST_62: mul [2/2] 2.39ns
bb79:10  %mul = mul i157 %sext_cast_cast, 27354876025721952679457623 ; <i157> [#uses=2]

ST_62: tmp_56 [1/1] 0.00ns
bb79:12  %tmp_56 = call i1 @_ssdm_op_BitSelect.i1.i52.i32(i52 %r_V_36, i32 51) ; <i1> [#uses=2]


 <State 63>: 8.67ns
ST_63: mul [1/2] 2.39ns
bb79:10  %mul = mul i157 %sext_cast_cast, 27354876025721952679457623 ; <i157> [#uses=2]

ST_63: neg_mul [1/1] 6.28ns
bb79:11  %neg_mul = sub i157 0, %mul                     ; <i157> [#uses=1]


 <State 64>: 8.17ns
ST_64: sel [1/1] 1.37ns
bb79:13  %sel = select i1 %tmp_56, i157 %neg_mul, i157 %mul ; <i157> [#uses=1]

ST_64: tmp_57 [1/1] 0.00ns
bb79:14  %tmp_57 = call i52 @_ssdm_op_PartSelect.i52.i157.i32.i32(i157 %sel, i32 105, i32 156) ; <i52> [#uses=1]

ST_64: trunc_cast [1/1] 0.00ns
bb79:15  %trunc_cast = sext i52 %tmp_57 to i65           ; <i65> [#uses=2]

ST_64: neg_ti [1/1] 3.04ns
bb79:16  %neg_ti = sub i65 0, %trunc_cast                ; <i65> [#uses=1]

ST_64: tmp_18 [1/1] 1.37ns
bb79:17  %tmp_18 = select i1 %tmp_56, i65 %neg_ti, i65 %trunc_cast ; <i65> [#uses=1]

ST_64: tmp_20 [1/1] 0.00ns
bb79:18  %tmp_20 = call i32 @_ssdm_op_PartSelect.i32.i65.i32.i32(i65 %tmp_18, i32 20, i32 51) ; <i32> [#uses=1]

ST_64: time_domain_V_addr [1/1] 0.00ns
bb79:19  %time_domain_V_addr = getelementptr [1024 x i32]* %time_domain_V, i64 0, i64 %tmp_16 ; <i32*> [#uses=1]

ST_64: stg_308 [1/1] 2.39ns
bb79:20  store i32 %tmp_20, i32* %time_domain_V_addr, align 4

ST_64: stg_309 [1/1] 0.00ns
bb79:21  br label %bb82



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
