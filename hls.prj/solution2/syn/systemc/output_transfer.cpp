// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.2
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "output_transfer.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic output_transfer::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic output_transfer::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> output_transfer::ap_ST_st1_fsm_0 = "0000";
const sc_lv<4> output_transfer::ap_ST_st2_fsm_1 = "1";
const sc_lv<4> output_transfer::ap_ST_st3_fsm_2 = "10";
const sc_lv<4> output_transfer::ap_ST_st4_fsm_3 = "11";
const sc_lv<4> output_transfer::ap_ST_st5_fsm_4 = "100";
const sc_lv<4> output_transfer::ap_ST_st6_fsm_5 = "101";
const sc_lv<4> output_transfer::ap_ST_st7_fsm_6 = "110";
const sc_lv<4> output_transfer::ap_ST_st8_fsm_7 = "111";
const sc_lv<4> output_transfer::ap_ST_st9_fsm_8 = "1000";
const sc_lv<32> output_transfer::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> output_transfer::ap_const_lv1_0 = "0";
const sc_lv<11> output_transfer::ap_const_lv11_0 = "00000000000";
const sc_lv<9> output_transfer::ap_const_lv9_0 = "000000000";
const sc_lv<10> output_transfer::ap_const_lv10_0 = "0000000000";
const sc_lv<32> output_transfer::ap_const_lv32_3 = "11";
const sc_lv<32> output_transfer::ap_const_lv32_2 = "10";
const sc_lv<10> output_transfer::ap_const_lv10_286 = "1010000110";
const sc_lv<10> output_transfer::ap_const_lv10_3C9 = "1111001001";
const sc_lv<32> output_transfer::ap_const_lv32_1 = "1";
const sc_lv<10> output_transfer::ap_const_lv10_143 = "101000011";
const sc_lv<11> output_transfer::ap_const_lv11_400 = "10000000000";
const sc_lv<11> output_transfer::ap_const_lv11_1 = "1";
const sc_lv<9> output_transfer::ap_const_lv9_143 = "101000011";
const sc_lv<9> output_transfer::ap_const_lv9_1 = "1";
const sc_lv<10> output_transfer::ap_const_lv10_2BD = "1010111101";
const sc_lv<10> output_transfer::ap_const_lv10_1 = "1";
const sc_lv<11> output_transfer::ap_const_lv11_50C = "10100001100";
const sc_lv<32> output_transfer::ap_const_lv32_1F = "11111";
const sc_lv<30> output_transfer::ap_const_lv30_0 = "000000000000000000000000000000";
const sc_lv<32> output_transfer::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";

output_transfer::output_transfer(sc_module_name name) : sc_module(name), mVcdFile(0) {
    output_buffer_V_U = new output_transfer_output_buffer_V("output_buffer_V_U");
    output_buffer_V_U->clk(ap_clk);
    output_buffer_V_U->reset(ap_rst);
    output_buffer_V_U->address0(output_buffer_V_address0);
    output_buffer_V_U->ce0(output_buffer_V_ce0);
    output_buffer_V_U->we0(output_buffer_V_we0);
    output_buffer_V_U->d0(output_buffer_V_d0);
    output_buffer_V_U->q0(output_buffer_V_q0);
    output_buffer_V_U->address1(output_buffer_V_address1);
    output_buffer_V_U->ce1(output_buffer_V_ce1);
    output_buffer_V_U->we1(output_buffer_V_we1);
    output_buffer_V_U->d1(output_buffer_V_d1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_exitcond5_fu_305_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( j_reg_175 );

    SC_METHOD(thread_exitcond6_fu_274_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( jj_reg_163 );

    SC_METHOD(thread_exitcond7_fu_240_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( i_reg_152 );

    SC_METHOD(thread_i_5_fu_246_p2);
    sensitive << ( i_reg_152 );

    SC_METHOD(thread_j_1_fu_311_p2);
    sensitive << ( j_reg_175 );

    SC_METHOD(thread_j_cast9_fu_317_p1);
    sensitive << ( j_reg_175 );

    SC_METHOD(thread_jj_1_fu_280_p2);
    sensitive << ( jj_reg_163 );

    SC_METHOD(thread_jj_cast_fu_286_p1);
    sensitive << ( jj_reg_163 );

    SC_METHOD(thread_offset_cast_fu_236_p1);
    sensitive << ( offset_fu_228_p3 );

    SC_METHOD(thread_offset_fu_228_p3);
    sensitive << ( sel_tmp7_fu_222_p2 );
    sensitive << ( sel_tmp6_fu_214_p3 );

    SC_METHOD(thread_output_array_V_address0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_fu_252_p1 );

    SC_METHOD(thread_output_array_V_ce0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond7_fu_240_p2 );

    SC_METHOD(thread_output_buffer_V_address0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( output_buffer_V_addr_reg_419 );
    sensitive << ( output_buffer_V_addr_1_reg_438 );
    sensitive << ( tmp_22_fu_262_p1 );
    sensitive << ( tmp_25_fu_295_p1 );
    sensitive << ( tmp_30_fu_327_p1 );
    sensitive << ( tmp_31_fu_332_p1 );

    SC_METHOD(thread_output_buffer_V_address1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( output_buffer_V_addr_2_reg_452 );

    SC_METHOD(thread_output_buffer_V_ce0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond7_fu_240_p2 );
    sensitive << ( exitcond7_reg_410 );
    sensitive << ( exitcond6_fu_274_p2 );
    sensitive << ( exitcond6_reg_429 );
    sensitive << ( exitcond5_fu_305_p2 );
    sensitive << ( exitcond5_reg_443 );

    SC_METHOD(thread_output_buffer_V_ce1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond5_reg_443 );

    SC_METHOD(thread_output_buffer_V_d0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( output_buffer_V_q0 );
    sensitive << ( r_V_fu_267_p2 );

    SC_METHOD(thread_output_buffer_V_d1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_output_buffer_V_we0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond7_reg_410 );
    sensitive << ( exitcond6_reg_429 );
    sensitive << ( exitcond5_reg_443 );

    SC_METHOD(thread_output_buffer_V_we1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond5_reg_443 );

    SC_METHOD(thread_p_and_f_fu_354_p3);
    sensitive << ( tmp_99_fu_350_p1 );

    SC_METHOD(thread_p_and_t_fu_371_p3);
    sensitive << ( tmp_100_fu_367_p1 );

    SC_METHOD(thread_p_neg_fu_362_p2);
    sensitive << ( base_output_load_reg_394 );

    SC_METHOD(thread_p_neg_t_fu_379_p2);
    sensitive << ( p_and_t_fu_371_p3 );

    SC_METHOD(thread_r_V_fu_267_p2);
    sensitive << ( output_buffer_V_q0 );
    sensitive << ( output_array_V_q0 );

    SC_METHOD(thread_sel_tmp4_cast_fu_200_p3);
    sensitive << ( sel_tmp5_fu_194_p2 );

    SC_METHOD(thread_sel_tmp5_fu_194_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( base_output );

    SC_METHOD(thread_sel_tmp6_fu_214_p3);
    sensitive << ( tmp_32_fu_208_p2 );
    sensitive << ( sel_tmp4_cast_fu_200_p3 );

    SC_METHOD(thread_sel_tmp7_fu_222_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( base_output );

    SC_METHOD(thread_sel_tmp_fu_188_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( base_output );

    SC_METHOD(thread_tmp_100_fu_367_p1);
    sensitive << ( p_neg_fu_362_p2 );

    SC_METHOD(thread_tmp_22_fu_262_p1);
    sensitive << ( tmp_s_fu_257_p2 );

    SC_METHOD(thread_tmp_24_fu_290_p2);
    sensitive << ( offset_cast_reg_404 );
    sensitive << ( jj_cast_fu_286_p1 );

    SC_METHOD(thread_tmp_25_fu_295_p1);
    sensitive << ( tmp_24_fu_290_p2 );

    SC_METHOD(thread_tmp_26_fu_300_p1);
    sensitive << ( jj_reg_163 );

    SC_METHOD(thread_tmp_27_fu_337_p2);
    sensitive << ( base_output_load_reg_394 );

    SC_METHOD(thread_tmp_28_fu_385_p3);
    sensitive << ( tmp_98_fu_342_p3 );
    sensitive << ( p_neg_t_fu_379_p2 );
    sensitive << ( p_and_f_fu_354_p3 );

    SC_METHOD(thread_tmp_29_fu_321_p2);
    sensitive << ( j_cast9_fu_317_p1 );

    SC_METHOD(thread_tmp_30_fu_327_p1);
    sensitive << ( tmp_29_fu_321_p2 );

    SC_METHOD(thread_tmp_31_fu_332_p1);
    sensitive << ( j_reg_175 );

    SC_METHOD(thread_tmp_32_fu_208_p2);
    sensitive << ( sel_tmp_fu_188_p2 );
    sensitive << ( sel_tmp5_fu_194_p2 );

    SC_METHOD(thread_tmp_98_fu_342_p3);
    sensitive << ( tmp_27_fu_337_p2 );

    SC_METHOD(thread_tmp_99_fu_350_p1);
    sensitive << ( tmp_27_fu_337_p2 );

    SC_METHOD(thread_tmp_fu_252_p1);
    sensitive << ( i_reg_152 );

    SC_METHOD(thread_tmp_s_fu_257_p2);
    sensitive << ( offset_cast_reg_404 );
    sensitive << ( i_reg_152 );

    SC_METHOD(thread_transfer_array_V_address0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_26_fu_300_p1 );

    SC_METHOD(thread_transfer_array_V_ce0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond6_reg_429 );

    SC_METHOD(thread_transfer_array_V_d0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( output_buffer_V_q0 );

    SC_METHOD(thread_transfer_array_V_we0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond6_reg_429 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( sel_tmp_reg_400 );
    sensitive << ( exitcond7_fu_240_p2 );
    sensitive << ( exitcond6_fu_274_p2 );
    sensitive << ( exitcond5_fu_305_p2 );

    ap_CS_fsm = "0000";
    base_output = "00000000000000000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "output_transfer_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    const char* dump_vcd = std::getenv("AP_WRITE_VCD");
    if (dump_vcd && string(dump_vcd) == "1" ) {
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, output_array_V_address0, "(port)output_array_V_address0");
    sc_trace(mVcdFile, output_array_V_ce0, "(port)output_array_V_ce0");
    sc_trace(mVcdFile, output_array_V_q0, "(port)output_array_V_q0");
    sc_trace(mVcdFile, transfer_array_V_address0, "(port)transfer_array_V_address0");
    sc_trace(mVcdFile, transfer_array_V_ce0, "(port)transfer_array_V_ce0");
    sc_trace(mVcdFile, transfer_array_V_we0, "(port)transfer_array_V_we0");
    sc_trace(mVcdFile, transfer_array_V_d0, "(port)transfer_array_V_d0");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, base_output, "base_output");
    sc_trace(mVcdFile, output_buffer_V_address0, "output_buffer_V_address0");
    sc_trace(mVcdFile, output_buffer_V_ce0, "output_buffer_V_ce0");
    sc_trace(mVcdFile, output_buffer_V_we0, "output_buffer_V_we0");
    sc_trace(mVcdFile, output_buffer_V_d0, "output_buffer_V_d0");
    sc_trace(mVcdFile, output_buffer_V_q0, "output_buffer_V_q0");
    sc_trace(mVcdFile, output_buffer_V_address1, "output_buffer_V_address1");
    sc_trace(mVcdFile, output_buffer_V_ce1, "output_buffer_V_ce1");
    sc_trace(mVcdFile, output_buffer_V_we1, "output_buffer_V_we1");
    sc_trace(mVcdFile, output_buffer_V_d1, "output_buffer_V_d1");
    sc_trace(mVcdFile, base_output_load_reg_394, "base_output_load_reg_394");
    sc_trace(mVcdFile, sel_tmp_fu_188_p2, "sel_tmp_fu_188_p2");
    sc_trace(mVcdFile, sel_tmp_reg_400, "sel_tmp_reg_400");
    sc_trace(mVcdFile, offset_cast_fu_236_p1, "offset_cast_fu_236_p1");
    sc_trace(mVcdFile, offset_cast_reg_404, "offset_cast_reg_404");
    sc_trace(mVcdFile, exitcond7_fu_240_p2, "exitcond7_fu_240_p2");
    sc_trace(mVcdFile, exitcond7_reg_410, "exitcond7_reg_410");
    sc_trace(mVcdFile, i_5_fu_246_p2, "i_5_fu_246_p2");
    sc_trace(mVcdFile, i_5_reg_414, "i_5_reg_414");
    sc_trace(mVcdFile, output_buffer_V_addr_reg_419, "output_buffer_V_addr_reg_419");
    sc_trace(mVcdFile, exitcond6_fu_274_p2, "exitcond6_fu_274_p2");
    sc_trace(mVcdFile, exitcond6_reg_429, "exitcond6_reg_429");
    sc_trace(mVcdFile, jj_1_fu_280_p2, "jj_1_fu_280_p2");
    sc_trace(mVcdFile, jj_1_reg_433, "jj_1_reg_433");
    sc_trace(mVcdFile, output_buffer_V_addr_1_reg_438, "output_buffer_V_addr_1_reg_438");
    sc_trace(mVcdFile, exitcond5_fu_305_p2, "exitcond5_fu_305_p2");
    sc_trace(mVcdFile, exitcond5_reg_443, "exitcond5_reg_443");
    sc_trace(mVcdFile, j_1_fu_311_p2, "j_1_fu_311_p2");
    sc_trace(mVcdFile, j_1_reg_447, "j_1_reg_447");
    sc_trace(mVcdFile, output_buffer_V_addr_2_reg_452, "output_buffer_V_addr_2_reg_452");
    sc_trace(mVcdFile, i_reg_152, "i_reg_152");
    sc_trace(mVcdFile, jj_reg_163, "jj_reg_163");
    sc_trace(mVcdFile, j_reg_175, "j_reg_175");
    sc_trace(mVcdFile, tmp_22_fu_262_p1, "tmp_22_fu_262_p1");
    sc_trace(mVcdFile, tmp_fu_252_p1, "tmp_fu_252_p1");
    sc_trace(mVcdFile, tmp_25_fu_295_p1, "tmp_25_fu_295_p1");
    sc_trace(mVcdFile, tmp_26_fu_300_p1, "tmp_26_fu_300_p1");
    sc_trace(mVcdFile, tmp_30_fu_327_p1, "tmp_30_fu_327_p1");
    sc_trace(mVcdFile, tmp_31_fu_332_p1, "tmp_31_fu_332_p1");
    sc_trace(mVcdFile, tmp_28_fu_385_p3, "tmp_28_fu_385_p3");
    sc_trace(mVcdFile, r_V_fu_267_p2, "r_V_fu_267_p2");
    sc_trace(mVcdFile, sel_tmp5_fu_194_p2, "sel_tmp5_fu_194_p2");
    sc_trace(mVcdFile, tmp_32_fu_208_p2, "tmp_32_fu_208_p2");
    sc_trace(mVcdFile, sel_tmp4_cast_fu_200_p3, "sel_tmp4_cast_fu_200_p3");
    sc_trace(mVcdFile, sel_tmp7_fu_222_p2, "sel_tmp7_fu_222_p2");
    sc_trace(mVcdFile, sel_tmp6_fu_214_p3, "sel_tmp6_fu_214_p3");
    sc_trace(mVcdFile, offset_fu_228_p3, "offset_fu_228_p3");
    sc_trace(mVcdFile, tmp_s_fu_257_p2, "tmp_s_fu_257_p2");
    sc_trace(mVcdFile, jj_cast_fu_286_p1, "jj_cast_fu_286_p1");
    sc_trace(mVcdFile, tmp_24_fu_290_p2, "tmp_24_fu_290_p2");
    sc_trace(mVcdFile, j_cast9_fu_317_p1, "j_cast9_fu_317_p1");
    sc_trace(mVcdFile, tmp_29_fu_321_p2, "tmp_29_fu_321_p2");
    sc_trace(mVcdFile, tmp_27_fu_337_p2, "tmp_27_fu_337_p2");
    sc_trace(mVcdFile, tmp_99_fu_350_p1, "tmp_99_fu_350_p1");
    sc_trace(mVcdFile, p_neg_fu_362_p2, "p_neg_fu_362_p2");
    sc_trace(mVcdFile, tmp_100_fu_367_p1, "tmp_100_fu_367_p1");
    sc_trace(mVcdFile, p_and_t_fu_371_p3, "p_and_t_fu_371_p3");
    sc_trace(mVcdFile, tmp_98_fu_342_p3, "tmp_98_fu_342_p3");
    sc_trace(mVcdFile, p_neg_t_fu_379_p2, "p_neg_t_fu_379_p2");
    sc_trace(mVcdFile, p_and_f_fu_354_p3, "p_and_f_fu_354_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");

    }
}

output_transfer::~output_transfer() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete output_buffer_V_U;
}

void output_transfer::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,4,4>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(exitcond7_reg_410.read(), ap_const_lv1_0))) {
        i_reg_152 = i_5_reg_414.read();
    } else if ((esl_seteq<1,4,4>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        i_reg_152 = ap_const_lv11_0;
    }
    if ((esl_seteq<1,4,4>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(sel_tmp_reg_400.read(), ap_const_lv1_0))) {
        j_reg_175 = ap_const_lv10_0;
    } else if ((esl_seteq<1,4,4>(ap_ST_st8_fsm_7, ap_CS_fsm.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_reg_443.read()))) {
        j_reg_175 = j_1_reg_447.read();
    }
    if ((esl_seteq<1,4,4>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(exitcond7_fu_240_p2.read(), ap_const_lv1_0))) {
        jj_reg_163 = ap_const_lv9_0;
    } else if ((esl_seteq<1,4,4>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_reg_429.read()))) {
        jj_reg_163 = jj_1_reg_433.read();
    }
    if (esl_seteq<1,4,4>(ap_ST_st9_fsm_8, ap_CS_fsm.read())) {
        base_output = tmp_28_fu_385_p3.read();
    }
    if ((esl_seteq<1,4,4>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        base_output_load_reg_394 = base_output.read();
        offset_cast_reg_404 = offset_cast_fu_236_p1.read();
        sel_tmp_reg_400 = sel_tmp_fu_188_p2.read();
    }
    if (esl_seteq<1,4,4>(ap_ST_st7_fsm_6, ap_CS_fsm.read())) {
        exitcond5_reg_443 = exitcond5_fu_305_p2.read();
        j_1_reg_447 = j_1_fu_311_p2.read();
    }
    if (esl_seteq<1,4,4>(ap_ST_st4_fsm_3, ap_CS_fsm.read())) {
        exitcond6_reg_429 = exitcond6_fu_274_p2.read();
        jj_1_reg_433 = jj_1_fu_280_p2.read();
    }
    if (esl_seteq<1,4,4>(ap_ST_st2_fsm_1, ap_CS_fsm.read())) {
        exitcond7_reg_410 = exitcond7_fu_240_p2.read();
        i_5_reg_414 = i_5_fu_246_p2.read();
    }
    if ((esl_seteq<1,4,4>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_fu_274_p2.read()))) {
        output_buffer_V_addr_1_reg_438 =  (sc_lv<11>) (tmp_25_fu_295_p1.read());
    }
    if ((esl_seteq<1,4,4>(ap_ST_st7_fsm_6, ap_CS_fsm.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_305_p2.read()))) {
        output_buffer_V_addr_2_reg_452 =  (sc_lv<11>) (tmp_30_fu_327_p1.read());
    }
    if ((esl_seteq<1,4,4>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && esl_seteq<1,1,1>(exitcond7_fu_240_p2.read(), ap_const_lv1_0))) {
        output_buffer_V_addr_reg_419 =  (sc_lv<11>) (tmp_22_fu_262_p1.read());
    }
}

void output_transfer::thread_ap_done() {
    if (((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,4,4>(ap_ST_st1_fsm_0, ap_CS_fsm.read())) || 
         esl_seteq<1,4,4>(ap_ST_st9_fsm_8, ap_CS_fsm.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void output_transfer::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,4,4>(ap_ST_st1_fsm_0, ap_CS_fsm.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void output_transfer::thread_ap_ready() {
    if (esl_seteq<1,4,4>(ap_ST_st9_fsm_8, ap_CS_fsm.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void output_transfer::thread_exitcond5_fu_305_p2() {
    exitcond5_fu_305_p2 = (!j_reg_175.read().is_01() || !ap_const_lv10_2BD.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_175.read() == ap_const_lv10_2BD);
}

void output_transfer::thread_exitcond6_fu_274_p2() {
    exitcond6_fu_274_p2 = (!jj_reg_163.read().is_01() || !ap_const_lv9_143.is_01())? sc_lv<1>(): sc_lv<1>(jj_reg_163.read() == ap_const_lv9_143);
}

void output_transfer::thread_exitcond7_fu_240_p2() {
    exitcond7_fu_240_p2 = (!i_reg_152.read().is_01() || !ap_const_lv11_400.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_152.read() == ap_const_lv11_400);
}

void output_transfer::thread_i_5_fu_246_p2() {
    i_5_fu_246_p2 = (!i_reg_152.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_bigint<11>(i_reg_152.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void output_transfer::thread_j_1_fu_311_p2() {
    j_1_fu_311_p2 = (!j_reg_175.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_bigint<10>(j_reg_175.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void output_transfer::thread_j_cast9_fu_317_p1() {
    j_cast9_fu_317_p1 = esl_zext<11,10>(j_reg_175.read());
}

void output_transfer::thread_jj_1_fu_280_p2() {
    jj_1_fu_280_p2 = (!jj_reg_163.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_bigint<9>(jj_reg_163.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void output_transfer::thread_jj_cast_fu_286_p1() {
    jj_cast_fu_286_p1 = esl_zext<11,9>(jj_reg_163.read());
}

void output_transfer::thread_offset_cast_fu_236_p1() {
    offset_cast_fu_236_p1 = esl_zext<11,10>(offset_fu_228_p3.read());
}

void output_transfer::thread_offset_fu_228_p3() {
    offset_fu_228_p3 = (!sel_tmp7_fu_222_p2.read()[0].is_01())? sc_lv<10>(): ((sel_tmp7_fu_222_p2.read()[0].to_bool())? ap_const_lv10_143: sel_tmp6_fu_214_p3.read());
}

void output_transfer::thread_output_array_V_address0() {
    output_array_V_address0 =  (sc_lv<10>) (tmp_fu_252_p1.read());
}

void output_transfer::thread_output_array_V_ce0() {
    if ((esl_seteq<1,4,4>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(exitcond7_fu_240_p2.read(), ap_const_lv1_0))) {
        output_array_V_ce0 = ap_const_logic_1;
    } else {
        output_array_V_ce0 = ap_const_logic_0;
    }
}

void output_transfer::thread_output_buffer_V_address0() {
    if (esl_seteq<1,4,4>(ap_ST_st8_fsm_7, ap_CS_fsm.read())) {
        output_buffer_V_address0 =  (sc_lv<11>) (tmp_31_fu_332_p1.read());
    } else if (esl_seteq<1,4,4>(ap_ST_st5_fsm_4, ap_CS_fsm.read())) {
        output_buffer_V_address0 = output_buffer_V_addr_1_reg_438.read();
    } else if (esl_seteq<1,4,4>(ap_ST_st3_fsm_2, ap_CS_fsm.read())) {
        output_buffer_V_address0 = output_buffer_V_addr_reg_419.read();
    } else if (esl_seteq<1,4,4>(ap_ST_st7_fsm_6, ap_CS_fsm.read())) {
        output_buffer_V_address0 =  (sc_lv<11>) (tmp_30_fu_327_p1.read());
    } else if (esl_seteq<1,4,4>(ap_ST_st4_fsm_3, ap_CS_fsm.read())) {
        output_buffer_V_address0 =  (sc_lv<11>) (tmp_25_fu_295_p1.read());
    } else if (esl_seteq<1,4,4>(ap_ST_st2_fsm_1, ap_CS_fsm.read())) {
        output_buffer_V_address0 =  (sc_lv<11>) (tmp_22_fu_262_p1.read());
    } else {
        output_buffer_V_address0 =  (sc_lv<11>) (tmp_31_fu_332_p1.read());
    }
}

void output_transfer::thread_output_buffer_V_address1() {
    output_buffer_V_address1 = output_buffer_V_addr_2_reg_452.read();
}

void output_transfer::thread_output_buffer_V_ce0() {
    if (((esl_seteq<1,4,4>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(exitcond7_fu_240_p2.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,4,4>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_fu_274_p2.read())) || 
         (esl_seteq<1,4,4>(ap_ST_st7_fsm_6, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_305_p2.read())) || 
         (esl_seteq<1,4,4>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(exitcond7_reg_410.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,4,4>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_reg_429.read())) || 
         (esl_seteq<1,4,4>(ap_ST_st8_fsm_7, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_reg_443.read())))) {
        output_buffer_V_ce0 = ap_const_logic_1;
    } else {
        output_buffer_V_ce0 = ap_const_logic_0;
    }
}

void output_transfer::thread_output_buffer_V_ce1() {
    if ((esl_seteq<1,4,4>(ap_ST_st8_fsm_7, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_reg_443.read()))) {
        output_buffer_V_ce1 = ap_const_logic_1;
    } else {
        output_buffer_V_ce1 = ap_const_logic_0;
    }
}

void output_transfer::thread_output_buffer_V_d0() {
    if (esl_seteq<1,4,4>(ap_ST_st8_fsm_7, ap_CS_fsm.read())) {
        output_buffer_V_d0 = output_buffer_V_q0.read();
    } else if (esl_seteq<1,4,4>(ap_ST_st5_fsm_4, ap_CS_fsm.read())) {
        output_buffer_V_d0 = ap_const_lv32_0;
    } else if (esl_seteq<1,4,4>(ap_ST_st3_fsm_2, ap_CS_fsm.read())) {
        output_buffer_V_d0 = r_V_fu_267_p2.read();
    } else {
        output_buffer_V_d0 = r_V_fu_267_p2.read();
    }
}

void output_transfer::thread_output_buffer_V_d1() {
    output_buffer_V_d1 = ap_const_lv32_0;
}

void output_transfer::thread_output_buffer_V_we0() {
    if (((esl_seteq<1,4,4>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(exitcond7_reg_410.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,4,4>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_reg_429.read())) || 
         (esl_seteq<1,4,4>(ap_ST_st8_fsm_7, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_reg_443.read())))) {
        output_buffer_V_we0 = ap_const_logic_1;
    } else {
        output_buffer_V_we0 = ap_const_logic_0;
    }
}

void output_transfer::thread_output_buffer_V_we1() {
    if (((esl_seteq<1,4,4>(ap_ST_st8_fsm_7, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_reg_443.read())))) {
        output_buffer_V_we1 = ap_const_logic_1;
    } else {
        output_buffer_V_we1 = ap_const_logic_0;
    }
}

void output_transfer::thread_p_and_f_fu_354_p3() {
    p_and_f_fu_354_p3 = esl_concat<30,2>(ap_const_lv30_0, tmp_99_fu_350_p1.read());
}

void output_transfer::thread_p_and_t_fu_371_p3() {
    p_and_t_fu_371_p3 = esl_concat<30,2>(ap_const_lv30_0, tmp_100_fu_367_p1.read());
}

void output_transfer::thread_p_neg_fu_362_p2() {
    p_neg_fu_362_p2 = (base_output_load_reg_394.read() ^ ap_const_lv32_FFFFFFFF);
}

void output_transfer::thread_p_neg_t_fu_379_p2() {
    p_neg_t_fu_379_p2 = (!ap_const_lv32_0.is_01() || !p_and_t_fu_371_p3.read().is_01())? sc_lv<32>(): (sc_bigint<32>(ap_const_lv32_0) - sc_biguint<32>(p_and_t_fu_371_p3.read()));
}

void output_transfer::thread_r_V_fu_267_p2() {
    r_V_fu_267_p2 = (!output_array_V_q0.read().is_01() || !output_buffer_V_q0.read().is_01())? sc_lv<32>(): (sc_bigint<32>(output_array_V_q0.read()) + sc_biguint<32>(output_buffer_V_q0.read()));
}

void output_transfer::thread_sel_tmp4_cast_fu_200_p3() {
    sel_tmp4_cast_fu_200_p3 = (!sel_tmp5_fu_194_p2.read()[0].is_01())? sc_lv<10>(): ((sel_tmp5_fu_194_p2.read()[0].to_bool())? ap_const_lv10_286: ap_const_lv10_3C9);
}

void output_transfer::thread_sel_tmp5_fu_194_p2() {
    sel_tmp5_fu_194_p2 = (!base_output.read().is_01() || !ap_const_lv32_2.is_01())? sc_lv<1>(): sc_lv<1>(base_output.read() == ap_const_lv32_2);
}

void output_transfer::thread_sel_tmp6_fu_214_p3() {
    sel_tmp6_fu_214_p3 = (!tmp_32_fu_208_p2.read()[0].is_01())? sc_lv<10>(): ((tmp_32_fu_208_p2.read()[0].to_bool())? sel_tmp4_cast_fu_200_p3.read(): ap_const_lv10_0);
}

void output_transfer::thread_sel_tmp7_fu_222_p2() {
    sel_tmp7_fu_222_p2 = (!base_output.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<1>(): sc_lv<1>(base_output.read() == ap_const_lv32_1);
}

void output_transfer::thread_sel_tmp_fu_188_p2() {
    sel_tmp_fu_188_p2 = (!base_output.read().is_01() || !ap_const_lv32_3.is_01())? sc_lv<1>(): sc_lv<1>(base_output.read() == ap_const_lv32_3);
}

void output_transfer::thread_tmp_100_fu_367_p1() {
    tmp_100_fu_367_p1 = p_neg_fu_362_p2.read().range(2-1, 0);
}

void output_transfer::thread_tmp_22_fu_262_p1() {
    tmp_22_fu_262_p1 = esl_zext<64,11>(tmp_s_fu_257_p2.read());
}

void output_transfer::thread_tmp_24_fu_290_p2() {
    tmp_24_fu_290_p2 = (!jj_cast_fu_286_p1.read().is_01() || !offset_cast_reg_404.read().is_01())? sc_lv<11>(): (sc_bigint<11>(jj_cast_fu_286_p1.read()) + sc_biguint<11>(offset_cast_reg_404.read()));
}

void output_transfer::thread_tmp_25_fu_295_p1() {
    tmp_25_fu_295_p1 = esl_zext<64,11>(tmp_24_fu_290_p2.read());
}

void output_transfer::thread_tmp_26_fu_300_p1() {
    tmp_26_fu_300_p1 = esl_zext<64,9>(jj_reg_163.read());
}

void output_transfer::thread_tmp_27_fu_337_p2() {
    tmp_27_fu_337_p2 = (!base_output_load_reg_394.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_bigint<32>(base_output_load_reg_394.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void output_transfer::thread_tmp_28_fu_385_p3() {
    tmp_28_fu_385_p3 = (!tmp_98_fu_342_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_98_fu_342_p3.read()[0].to_bool())? p_neg_t_fu_379_p2.read(): p_and_f_fu_354_p3.read());
}

void output_transfer::thread_tmp_29_fu_321_p2() {
    tmp_29_fu_321_p2 = (!j_cast9_fu_317_p1.read().is_01() || !ap_const_lv11_50C.is_01())? sc_lv<11>(): (sc_bigint<11>(j_cast9_fu_317_p1.read()) + sc_biguint<11>(ap_const_lv11_50C));
}

void output_transfer::thread_tmp_30_fu_327_p1() {
    tmp_30_fu_327_p1 = esl_zext<64,11>(tmp_29_fu_321_p2.read());
}

void output_transfer::thread_tmp_31_fu_332_p1() {
    tmp_31_fu_332_p1 = esl_zext<64,10>(j_reg_175.read());
}

void output_transfer::thread_tmp_32_fu_208_p2() {
    tmp_32_fu_208_p2 = (sel_tmp5_fu_194_p2.read() | sel_tmp_fu_188_p2.read());
}

void output_transfer::thread_tmp_98_fu_342_p3() {
    tmp_98_fu_342_p3 = tmp_27_fu_337_p2.read().range(31, 31);
}

void output_transfer::thread_tmp_99_fu_350_p1() {
    tmp_99_fu_350_p1 = tmp_27_fu_337_p2.read().range(2-1, 0);
}

void output_transfer::thread_tmp_fu_252_p1() {
    tmp_fu_252_p1 = esl_zext<64,11>(i_reg_152.read());
}

void output_transfer::thread_tmp_s_fu_257_p2() {
    tmp_s_fu_257_p2 = (!i_reg_152.read().is_01() || !offset_cast_reg_404.read().is_01())? sc_lv<11>(): (sc_bigint<11>(i_reg_152.read()) + sc_biguint<11>(offset_cast_reg_404.read()));
}

void output_transfer::thread_transfer_array_V_address0() {
    transfer_array_V_address0 =  (sc_lv<9>) (tmp_26_fu_300_p1.read());
}

void output_transfer::thread_transfer_array_V_ce0() {
    if ((esl_seteq<1,4,4>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_reg_429.read()))) {
        transfer_array_V_ce0 = ap_const_logic_1;
    } else {
        transfer_array_V_ce0 = ap_const_logic_0;
    }
}

void output_transfer::thread_transfer_array_V_d0() {
    transfer_array_V_d0 = output_buffer_V_q0.read();
}

void output_transfer::thread_transfer_array_V_we0() {
    if (((esl_seteq<1,4,4>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_reg_429.read())))) {
        transfer_array_V_we0 = ap_const_logic_1;
    } else {
        transfer_array_V_we0 = ap_const_logic_0;
    }
}

void output_transfer::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint()) {
        case 0 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 1 : 
            if (esl_seteq<1,1,1>(exitcond7_fu_240_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            } else {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_st2_fsm_1;
            break;
        case 3 : 
            if (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_fu_274_p2.read())) {
                ap_NS_fsm = ap_ST_st5_fsm_4;
            } else {
                ap_NS_fsm = ap_ST_st6_fsm_5;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_st4_fsm_3;
            break;
        case 5 : 
            if (esl_seteq<1,1,1>(sel_tmp_reg_400.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st9_fsm_8;
            } else {
                ap_NS_fsm = ap_ST_st7_fsm_6;
            }
            break;
        case 6 : 
            if (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_305_p2.read())) {
                ap_NS_fsm = ap_ST_st8_fsm_7;
            } else {
                ap_NS_fsm = ap_ST_st9_fsm_8;
            }
            break;
        case 7 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}
}

