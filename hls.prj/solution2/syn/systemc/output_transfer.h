// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.2
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _output_transfer_HH_
#define _output_transfer_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "output_transfer_output_buffer_V.h"

namespace ap_rtl {

struct output_transfer : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<10> > output_array_V_address0;
    sc_out< sc_logic > output_array_V_ce0;
    sc_in< sc_lv<32> > output_array_V_q0;
    sc_out< sc_lv<9> > transfer_array_V_address0;
    sc_out< sc_logic > transfer_array_V_ce0;
    sc_out< sc_logic > transfer_array_V_we0;
    sc_out< sc_lv<32> > transfer_array_V_d0;


    // Module declarations
    output_transfer(sc_module_name name);
    SC_HAS_PROCESS(output_transfer);

    ~output_transfer();

    sc_trace_file* mVcdFile;

    output_transfer_output_buffer_V* output_buffer_V_U;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_lv<32> > base_output;
    sc_signal< sc_lv<11> > output_buffer_V_address0;
    sc_signal< sc_logic > output_buffer_V_ce0;
    sc_signal< sc_logic > output_buffer_V_we0;
    sc_signal< sc_lv<32> > output_buffer_V_d0;
    sc_signal< sc_lv<32> > output_buffer_V_q0;
    sc_signal< sc_lv<11> > output_buffer_V_address1;
    sc_signal< sc_logic > output_buffer_V_ce1;
    sc_signal< sc_logic > output_buffer_V_we1;
    sc_signal< sc_lv<32> > output_buffer_V_d1;
    sc_signal< sc_lv<32> > base_output_load_reg_394;
    sc_signal< sc_lv<1> > sel_tmp_fu_188_p2;
    sc_signal< sc_lv<1> > sel_tmp_reg_400;
    sc_signal< sc_lv<11> > offset_cast_fu_236_p1;
    sc_signal< sc_lv<11> > offset_cast_reg_404;
    sc_signal< sc_lv<1> > exitcond7_fu_240_p2;
    sc_signal< sc_lv<1> > exitcond7_reg_410;
    sc_signal< sc_lv<11> > i_5_fu_246_p2;
    sc_signal< sc_lv<11> > i_5_reg_414;
    sc_signal< sc_lv<11> > output_buffer_V_addr_reg_419;
    sc_signal< sc_lv<1> > exitcond6_fu_274_p2;
    sc_signal< sc_lv<1> > exitcond6_reg_429;
    sc_signal< sc_lv<9> > jj_1_fu_280_p2;
    sc_signal< sc_lv<9> > jj_1_reg_433;
    sc_signal< sc_lv<11> > output_buffer_V_addr_1_reg_438;
    sc_signal< sc_lv<1> > exitcond5_fu_305_p2;
    sc_signal< sc_lv<1> > exitcond5_reg_443;
    sc_signal< sc_lv<10> > j_1_fu_311_p2;
    sc_signal< sc_lv<10> > j_1_reg_447;
    sc_signal< sc_lv<11> > output_buffer_V_addr_2_reg_452;
    sc_signal< sc_lv<11> > i_reg_152;
    sc_signal< sc_lv<9> > jj_reg_163;
    sc_signal< sc_lv<10> > j_reg_175;
    sc_signal< sc_lv<64> > tmp_22_fu_262_p1;
    sc_signal< sc_lv<64> > tmp_fu_252_p1;
    sc_signal< sc_lv<64> > tmp_25_fu_295_p1;
    sc_signal< sc_lv<64> > tmp_26_fu_300_p1;
    sc_signal< sc_lv<64> > tmp_30_fu_327_p1;
    sc_signal< sc_lv<64> > tmp_31_fu_332_p1;
    sc_signal< sc_lv<32> > tmp_28_fu_385_p3;
    sc_signal< sc_lv<32> > r_V_fu_267_p2;
    sc_signal< sc_lv<1> > sel_tmp5_fu_194_p2;
    sc_signal< sc_lv<1> > tmp_32_fu_208_p2;
    sc_signal< sc_lv<10> > sel_tmp4_cast_fu_200_p3;
    sc_signal< sc_lv<1> > sel_tmp7_fu_222_p2;
    sc_signal< sc_lv<10> > sel_tmp6_fu_214_p3;
    sc_signal< sc_lv<10> > offset_fu_228_p3;
    sc_signal< sc_lv<11> > tmp_s_fu_257_p2;
    sc_signal< sc_lv<11> > jj_cast_fu_286_p1;
    sc_signal< sc_lv<11> > tmp_24_fu_290_p2;
    sc_signal< sc_lv<11> > j_cast9_fu_317_p1;
    sc_signal< sc_lv<11> > tmp_29_fu_321_p2;
    sc_signal< sc_lv<32> > tmp_27_fu_337_p2;
    sc_signal< sc_lv<2> > tmp_99_fu_350_p1;
    sc_signal< sc_lv<32> > p_neg_fu_362_p2;
    sc_signal< sc_lv<2> > tmp_100_fu_367_p1;
    sc_signal< sc_lv<32> > p_and_t_fu_371_p3;
    sc_signal< sc_lv<1> > tmp_98_fu_342_p3;
    sc_signal< sc_lv<32> > p_neg_t_fu_379_p2;
    sc_signal< sc_lv<32> > p_and_f_fu_354_p3;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_st1_fsm_0;
    static const sc_lv<4> ap_ST_st2_fsm_1;
    static const sc_lv<4> ap_ST_st3_fsm_2;
    static const sc_lv<4> ap_ST_st4_fsm_3;
    static const sc_lv<4> ap_ST_st5_fsm_4;
    static const sc_lv<4> ap_ST_st6_fsm_5;
    static const sc_lv<4> ap_ST_st7_fsm_6;
    static const sc_lv<4> ap_ST_st8_fsm_7;
    static const sc_lv<4> ap_ST_st9_fsm_8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<10> ap_const_lv10_286;
    static const sc_lv<10> ap_const_lv10_3C9;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<10> ap_const_lv10_143;
    static const sc_lv<11> ap_const_lv11_400;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<9> ap_const_lv9_143;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<10> ap_const_lv10_2BD;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<11> ap_const_lv11_50C;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<30> ap_const_lv30_0;
    static const sc_lv<32> ap_const_lv32_FFFFFFFF;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_exitcond5_fu_305_p2();
    void thread_exitcond6_fu_274_p2();
    void thread_exitcond7_fu_240_p2();
    void thread_i_5_fu_246_p2();
    void thread_j_1_fu_311_p2();
    void thread_j_cast9_fu_317_p1();
    void thread_jj_1_fu_280_p2();
    void thread_jj_cast_fu_286_p1();
    void thread_offset_cast_fu_236_p1();
    void thread_offset_fu_228_p3();
    void thread_output_array_V_address0();
    void thread_output_array_V_ce0();
    void thread_output_buffer_V_address0();
    void thread_output_buffer_V_address1();
    void thread_output_buffer_V_ce0();
    void thread_output_buffer_V_ce1();
    void thread_output_buffer_V_d0();
    void thread_output_buffer_V_d1();
    void thread_output_buffer_V_we0();
    void thread_output_buffer_V_we1();
    void thread_p_and_f_fu_354_p3();
    void thread_p_and_t_fu_371_p3();
    void thread_p_neg_fu_362_p2();
    void thread_p_neg_t_fu_379_p2();
    void thread_r_V_fu_267_p2();
    void thread_sel_tmp4_cast_fu_200_p3();
    void thread_sel_tmp5_fu_194_p2();
    void thread_sel_tmp6_fu_214_p3();
    void thread_sel_tmp7_fu_222_p2();
    void thread_sel_tmp_fu_188_p2();
    void thread_tmp_100_fu_367_p1();
    void thread_tmp_22_fu_262_p1();
    void thread_tmp_24_fu_290_p2();
    void thread_tmp_25_fu_295_p1();
    void thread_tmp_26_fu_300_p1();
    void thread_tmp_27_fu_337_p2();
    void thread_tmp_28_fu_385_p3();
    void thread_tmp_29_fu_321_p2();
    void thread_tmp_30_fu_327_p1();
    void thread_tmp_31_fu_332_p1();
    void thread_tmp_32_fu_208_p2();
    void thread_tmp_98_fu_342_p3();
    void thread_tmp_99_fu_350_p1();
    void thread_tmp_fu_252_p1();
    void thread_tmp_s_fu_257_p2();
    void thread_transfer_array_V_address0();
    void thread_transfer_array_V_ce0();
    void thread_transfer_array_V_d0();
    void thread_transfer_array_V_we0();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
