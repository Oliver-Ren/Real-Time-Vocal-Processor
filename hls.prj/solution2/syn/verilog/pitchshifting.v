// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.2
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pitchshifting (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        amplitude_V_address0,
        amplitude_V_ce0,
        amplitude_V_q0,
        angle_V_address0,
        angle_V_ce0,
        angle_V_q0,
        output_array_V_address0,
        output_array_V_ce0,
        output_array_V_we0,
        output_array_V_d0
);

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] amplitude_V_address0;
output   amplitude_V_ce0;
input  [31:0] amplitude_V_q0;
output  [9:0] angle_V_address0;
output   angle_V_ce0;
input  [10:0] angle_V_q0;
output  [9:0] output_array_V_address0;
output   output_array_V_ce0;
output   output_array_V_we0;
output  [31:0] output_array_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg amplitude_V_ce0;
reg angle_V_ce0;
reg output_array_V_ce0;
reg output_array_V_we0;
reg   [2:0] ap_CS_fsm = 3'b000;
wire   [9:0] previousPhase_V_address0;
reg    previousPhase_V_ce0;
reg    previousPhase_V_we0;
wire   [31:0] previousPhase_V_d0;
reg   [9:0] phaseCumulative_V_address0;
reg    phaseCumulative_V_ce0;
wire   [31:0] phaseCumulative_V_q0;
wire   [9:0] phaseCumulative_V_address1;
reg    phaseCumulative_V_ce1;
reg    phaseCumulative_V_we1;
wire   [31:0] phaseCumulative_V_d1;
wire   [9:0] wn_V_address0;
reg    wn_V_ce0;
wire   [5:0] wn_V_q0;
reg   [10:0] i_6_reg_230;
reg   [10:0] j_reg_241;
reg   [10:0] m_reg_278;
reg   [31:0] reg_329;
reg    ap_reg_ppiten_pp1_it29 = 1'b0;
reg    ap_reg_ppiten_pp1_it0 = 1'b0;
reg    ap_reg_ppiten_pp1_it1 = 1'b0;
reg    ap_reg_ppiten_pp1_it2 = 1'b0;
reg    ap_reg_ppiten_pp1_it3 = 1'b0;
reg    ap_reg_ppiten_pp1_it4 = 1'b0;
reg    ap_reg_ppiten_pp1_it5 = 1'b0;
reg    ap_reg_ppiten_pp1_it6 = 1'b0;
reg    ap_reg_ppiten_pp1_it7 = 1'b0;
reg    ap_reg_ppiten_pp1_it8 = 1'b0;
reg    ap_reg_ppiten_pp1_it9 = 1'b0;
reg    ap_reg_ppiten_pp1_it10 = 1'b0;
reg    ap_reg_ppiten_pp1_it11 = 1'b0;
reg    ap_reg_ppiten_pp1_it12 = 1'b0;
reg    ap_reg_ppiten_pp1_it13 = 1'b0;
reg    ap_reg_ppiten_pp1_it14 = 1'b0;
reg    ap_reg_ppiten_pp1_it15 = 1'b0;
reg    ap_reg_ppiten_pp1_it16 = 1'b0;
reg    ap_reg_ppiten_pp1_it17 = 1'b0;
reg    ap_reg_ppiten_pp1_it18 = 1'b0;
reg    ap_reg_ppiten_pp1_it19 = 1'b0;
reg    ap_reg_ppiten_pp1_it20 = 1'b0;
reg    ap_reg_ppiten_pp1_it21 = 1'b0;
reg    ap_reg_ppiten_pp1_it22 = 1'b0;
reg    ap_reg_ppiten_pp1_it23 = 1'b0;
reg    ap_reg_ppiten_pp1_it24 = 1'b0;
reg    ap_reg_ppiten_pp1_it25 = 1'b0;
reg    ap_reg_ppiten_pp1_it26 = 1'b0;
reg    ap_reg_ppiten_pp1_it27 = 1'b0;
reg    ap_reg_ppiten_pp1_it28 = 1'b0;
reg    ap_reg_ppiten_pp1_it30 = 1'b0;
reg    ap_reg_ppiten_pp1_it31 = 1'b0;
reg    ap_reg_ppiten_pp1_it32 = 1'b0;
reg    ap_reg_ppiten_pp1_it33 = 1'b0;
reg    ap_reg_ppiten_pp1_it34 = 1'b0;
reg    ap_reg_ppiten_pp1_it35 = 1'b0;
reg   [0:0] exitcond6_reg_922;
reg   [0:0] ap_reg_ppstg_exitcond6_reg_922_pp1_it28;
reg   [0:0] tmp_i_reg_1008;
reg   [0:0] ap_reg_ppstg_tmp_i_reg_1008_pp1_it28;
reg   [0:0] tmp_i_112_reg_1012;
reg   [0:0] ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it28;
reg   [0:0] tmp_61_i_reg_1016;
reg   [0:0] ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it28;
wire   [31:0] grp_fu_317_p2;
reg   [31:0] reg_335;
wire   [31:0] grp_fu_323_p2;
reg   [31:0] reg_341;
reg   [31:0] reg_347;
wire   [0:0] exitcond7_fu_353_p2;
reg   [0:0] exitcond7_reg_850;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
reg    ap_reg_ppiten_pp0_it3 = 1'b0;
reg    ap_reg_ppiten_pp0_it4 = 1'b0;
reg    ap_reg_ppiten_pp0_it5 = 1'b0;
reg    ap_reg_ppiten_pp0_it6 = 1'b0;
reg    ap_reg_ppiten_pp0_it7 = 1'b0;
reg    ap_reg_ppiten_pp0_it8 = 1'b0;
reg    ap_reg_ppiten_pp0_it9 = 1'b0;
reg    ap_reg_ppiten_pp0_it10 = 1'b0;
reg    ap_reg_ppiten_pp0_it11 = 1'b0;
reg   [0:0] ap_reg_ppstg_exitcond7_reg_850_pp0_it1;
reg   [0:0] ap_reg_ppstg_exitcond7_reg_850_pp0_it2;
reg   [0:0] ap_reg_ppstg_exitcond7_reg_850_pp0_it3;
reg   [0:0] ap_reg_ppstg_exitcond7_reg_850_pp0_it4;
reg   [0:0] ap_reg_ppstg_exitcond7_reg_850_pp0_it5;
reg   [0:0] ap_reg_ppstg_exitcond7_reg_850_pp0_it6;
reg   [0:0] ap_reg_ppstg_exitcond7_reg_850_pp0_it7;
reg   [0:0] ap_reg_ppstg_exitcond7_reg_850_pp0_it8;
reg   [0:0] ap_reg_ppstg_exitcond7_reg_850_pp0_it9;
reg   [0:0] ap_reg_ppstg_exitcond7_reg_850_pp0_it10;
wire   [10:0] i_fu_359_p2;
wire   [63:0] OP2_V_fu_365_p1;
reg   [63:0] OP2_V_reg_859;
reg   [9:0] phaseCumulative_V_addr_1_reg_869;
reg   [9:0] ap_reg_ppstg_phaseCumulative_V_addr_1_reg_869_pp0_it1;
reg   [9:0] ap_reg_ppstg_phaseCumulative_V_addr_1_reg_869_pp0_it2;
reg   [9:0] ap_reg_ppstg_phaseCumulative_V_addr_1_reg_869_pp0_it3;
reg   [9:0] ap_reg_ppstg_phaseCumulative_V_addr_1_reg_869_pp0_it4;
reg   [9:0] ap_reg_ppstg_phaseCumulative_V_addr_1_reg_869_pp0_it5;
reg   [9:0] ap_reg_ppstg_phaseCumulative_V_addr_1_reg_869_pp0_it6;
reg   [9:0] ap_reg_ppstg_phaseCumulative_V_addr_1_reg_869_pp0_it7;
reg   [9:0] ap_reg_ppstg_phaseCumulative_V_addr_1_reg_869_pp0_it8;
reg   [9:0] ap_reg_ppstg_phaseCumulative_V_addr_1_reg_869_pp0_it9;
reg   [9:0] ap_reg_ppstg_phaseCumulative_V_addr_1_reg_869_pp0_it10;
wire   [37:0] t_V_fu_376_p3;
reg   [37:0] t_V_reg_875;
reg   [37:0] ap_reg_ppstg_t_V_reg_875_pp0_it2;
reg   [37:0] ap_reg_ppstg_t_V_reg_875_pp0_it3;
reg   [37:0] ap_reg_ppstg_t_V_reg_875_pp0_it4;
reg   [37:0] ap_reg_ppstg_t_V_reg_875_pp0_it5;
reg   [37:0] ap_reg_ppstg_t_V_reg_875_pp0_it6;
reg   [37:0] ap_reg_ppstg_t_V_reg_875_pp0_it7;
reg   [37:0] ap_reg_ppstg_t_V_reg_875_pp0_it8;
reg   [37:0] ap_reg_ppstg_t_V_reg_875_pp0_it9;
reg   [37:0] ap_reg_ppstg_t_V_reg_875_pp0_it10;
reg   [0:0] tmp_125_reg_885;
reg   [0:0] ap_reg_ppstg_tmp_125_reg_885_pp0_it2;
reg   [0:0] ap_reg_ppstg_tmp_125_reg_885_pp0_it3;
reg   [0:0] ap_reg_ppstg_tmp_125_reg_885_pp0_it4;
reg   [0:0] ap_reg_ppstg_tmp_125_reg_885_pp0_it5;
reg   [0:0] ap_reg_ppstg_tmp_125_reg_885_pp0_it6;
wire   [76:0] grp_fu_388_p2;
reg   [76:0] mul_i_reg_891;
wire   [30:0] trunc_i_cast_fu_415_p1;
reg   [30:0] trunc_i_cast_reg_897;
wire   [30:0] neg_ti_i_fu_419_p2;
reg   [30:0] neg_ti_i_reg_902;
wire   [31:0] result_fu_476_p3;
reg   [31:0] result_reg_907;
wire   [37:0] grp_fu_493_p2;
reg   [37:0] rhs_V3_i56_cast_reg_917;
wire   [0:0] exitcond6_fu_514_p2;
reg   [0:0] ap_reg_ppstg_exitcond6_reg_922_pp1_it1;
reg   [0:0] ap_reg_ppstg_exitcond6_reg_922_pp1_it2;
reg   [0:0] ap_reg_ppstg_exitcond6_reg_922_pp1_it3;
reg   [0:0] ap_reg_ppstg_exitcond6_reg_922_pp1_it4;
reg   [0:0] ap_reg_ppstg_exitcond6_reg_922_pp1_it5;
reg   [0:0] ap_reg_ppstg_exitcond6_reg_922_pp1_it6;
reg   [0:0] ap_reg_ppstg_exitcond6_reg_922_pp1_it7;
reg   [0:0] ap_reg_ppstg_exitcond6_reg_922_pp1_it8;
reg   [0:0] ap_reg_ppstg_exitcond6_reg_922_pp1_it9;
reg   [0:0] ap_reg_ppstg_exitcond6_reg_922_pp1_it10;
reg   [0:0] ap_reg_ppstg_exitcond6_reg_922_pp1_it11;
reg   [0:0] ap_reg_ppstg_exitcond6_reg_922_pp1_it12;
reg   [0:0] ap_reg_ppstg_exitcond6_reg_922_pp1_it13;
reg   [0:0] ap_reg_ppstg_exitcond6_reg_922_pp1_it14;
reg   [0:0] ap_reg_ppstg_exitcond6_reg_922_pp1_it15;
reg   [0:0] ap_reg_ppstg_exitcond6_reg_922_pp1_it16;
reg   [0:0] ap_reg_ppstg_exitcond6_reg_922_pp1_it17;
reg   [0:0] ap_reg_ppstg_exitcond6_reg_922_pp1_it18;
reg   [0:0] ap_reg_ppstg_exitcond6_reg_922_pp1_it19;
reg   [0:0] ap_reg_ppstg_exitcond6_reg_922_pp1_it20;
reg   [0:0] ap_reg_ppstg_exitcond6_reg_922_pp1_it21;
reg   [0:0] ap_reg_ppstg_exitcond6_reg_922_pp1_it22;
reg   [0:0] ap_reg_ppstg_exitcond6_reg_922_pp1_it23;
reg   [0:0] ap_reg_ppstg_exitcond6_reg_922_pp1_it24;
reg   [0:0] ap_reg_ppstg_exitcond6_reg_922_pp1_it25;
reg   [0:0] ap_reg_ppstg_exitcond6_reg_922_pp1_it26;
reg   [0:0] ap_reg_ppstg_exitcond6_reg_922_pp1_it27;
reg   [0:0] ap_reg_ppstg_exitcond6_reg_922_pp1_it29;
reg   [0:0] ap_reg_ppstg_exitcond6_reg_922_pp1_it30;
reg   [0:0] ap_reg_ppstg_exitcond6_reg_922_pp1_it31;
reg   [0:0] ap_reg_ppstg_exitcond6_reg_922_pp1_it32;
reg   [0:0] ap_reg_ppstg_exitcond6_reg_922_pp1_it33;
reg   [0:0] ap_reg_ppstg_exitcond6_reg_922_pp1_it34;
wire   [10:0] j_1_fu_520_p2;
wire   [63:0] tmp_4_fu_526_p1;
reg   [63:0] tmp_4_reg_931;
reg   [63:0] ap_reg_ppstg_tmp_4_reg_931_pp1_it1;
reg   [63:0] ap_reg_ppstg_tmp_4_reg_931_pp1_it2;
reg   [63:0] ap_reg_ppstg_tmp_4_reg_931_pp1_it3;
reg   [63:0] ap_reg_ppstg_tmp_4_reg_931_pp1_it4;
reg   [63:0] ap_reg_ppstg_tmp_4_reg_931_pp1_it5;
reg   [63:0] ap_reg_ppstg_tmp_4_reg_931_pp1_it6;
reg   [63:0] ap_reg_ppstg_tmp_4_reg_931_pp1_it7;
reg   [63:0] ap_reg_ppstg_tmp_4_reg_931_pp1_it8;
reg   [63:0] ap_reg_ppstg_tmp_4_reg_931_pp1_it9;
reg   [63:0] ap_reg_ppstg_tmp_4_reg_931_pp1_it10;
reg   [63:0] ap_reg_ppstg_tmp_4_reg_931_pp1_it11;
reg   [63:0] ap_reg_ppstg_tmp_4_reg_931_pp1_it12;
reg   [63:0] ap_reg_ppstg_tmp_4_reg_931_pp1_it13;
reg   [63:0] ap_reg_ppstg_tmp_4_reg_931_pp1_it14;
reg   [63:0] ap_reg_ppstg_tmp_4_reg_931_pp1_it15;
reg   [63:0] ap_reg_ppstg_tmp_4_reg_931_pp1_it16;
reg   [63:0] ap_reg_ppstg_tmp_4_reg_931_pp1_it17;
reg   [63:0] ap_reg_ppstg_tmp_4_reg_931_pp1_it18;
reg   [63:0] ap_reg_ppstg_tmp_4_reg_931_pp1_it19;
reg   [63:0] ap_reg_ppstg_tmp_4_reg_931_pp1_it20;
reg   [63:0] ap_reg_ppstg_tmp_4_reg_931_pp1_it21;
reg   [63:0] ap_reg_ppstg_tmp_4_reg_931_pp1_it22;
reg   [63:0] ap_reg_ppstg_tmp_4_reg_931_pp1_it23;
reg   [63:0] ap_reg_ppstg_tmp_4_reg_931_pp1_it24;
reg   [63:0] ap_reg_ppstg_tmp_4_reg_931_pp1_it25;
reg   [63:0] ap_reg_ppstg_tmp_4_reg_931_pp1_it26;
reg   [63:0] ap_reg_ppstg_tmp_4_reg_931_pp1_it27;
reg   [63:0] ap_reg_ppstg_tmp_4_reg_931_pp1_it28;
reg   [63:0] ap_reg_ppstg_tmp_4_reg_931_pp1_it29;
reg   [63:0] ap_reg_ppstg_tmp_4_reg_931_pp1_it30;
reg   [63:0] ap_reg_ppstg_tmp_4_reg_931_pp1_it31;
reg   [63:0] ap_reg_ppstg_tmp_4_reg_931_pp1_it32;
reg   [63:0] ap_reg_ppstg_tmp_4_reg_931_pp1_it33;
reg   [63:0] ap_reg_ppstg_tmp_4_reg_931_pp1_it34;
wire   [37:0] t_V_63_fu_531_p3;
reg   [37:0] t_V_63_reg_943;
reg   [37:0] ap_reg_ppstg_t_V_63_reg_943_pp1_it2;
reg   [37:0] ap_reg_ppstg_t_V_63_reg_943_pp1_it3;
reg   [37:0] ap_reg_ppstg_t_V_63_reg_943_pp1_it4;
reg   [37:0] ap_reg_ppstg_t_V_63_reg_943_pp1_it5;
reg   [37:0] ap_reg_ppstg_t_V_63_reg_943_pp1_it6;
reg   [37:0] ap_reg_ppstg_t_V_63_reg_943_pp1_it7;
reg   [37:0] ap_reg_ppstg_t_V_63_reg_943_pp1_it8;
reg   [37:0] ap_reg_ppstg_t_V_63_reg_943_pp1_it9;
reg   [37:0] ap_reg_ppstg_t_V_63_reg_943_pp1_it10;
reg   [0:0] tmp_131_reg_953;
reg   [0:0] ap_reg_ppstg_tmp_131_reg_953_pp1_it2;
reg   [0:0] ap_reg_ppstg_tmp_131_reg_953_pp1_it3;
reg   [0:0] ap_reg_ppstg_tmp_131_reg_953_pp1_it4;
reg   [0:0] ap_reg_ppstg_tmp_131_reg_953_pp1_it5;
reg   [0:0] ap_reg_ppstg_tmp_131_reg_953_pp1_it6;
wire   [76:0] grp_fu_543_p2;
reg   [76:0] mul_i1_reg_959;
wire   [30:0] trunc_i1_cast_fu_570_p1;
reg   [30:0] trunc_i1_cast_reg_965;
wire   [30:0] neg_ti_i1_fu_574_p2;
reg   [30:0] neg_ti_i1_reg_970;
wire   [31:0] result_1_fu_631_p3;
reg   [31:0] result_1_reg_975;
wire   [37:0] grp_fu_648_p2;
reg   [37:0] rhs_V3_i83_cast_reg_985;
reg   [31:0] real_angle_V_reg_990;
reg   [30:0] agg_result_V_i86_cast1_reg_997;
reg   [6:0] agg_result_V_i86_cast_reg_1003;
wire   [0:0] tmp_i_fu_688_p2;
reg   [0:0] ap_reg_ppstg_tmp_i_reg_1008_pp1_it13;
reg   [0:0] ap_reg_ppstg_tmp_i_reg_1008_pp1_it14;
reg   [0:0] ap_reg_ppstg_tmp_i_reg_1008_pp1_it15;
reg   [0:0] ap_reg_ppstg_tmp_i_reg_1008_pp1_it16;
reg   [0:0] ap_reg_ppstg_tmp_i_reg_1008_pp1_it17;
reg   [0:0] ap_reg_ppstg_tmp_i_reg_1008_pp1_it18;
reg   [0:0] ap_reg_ppstg_tmp_i_reg_1008_pp1_it19;
reg   [0:0] ap_reg_ppstg_tmp_i_reg_1008_pp1_it20;
reg   [0:0] ap_reg_ppstg_tmp_i_reg_1008_pp1_it21;
reg   [0:0] ap_reg_ppstg_tmp_i_reg_1008_pp1_it22;
reg   [0:0] ap_reg_ppstg_tmp_i_reg_1008_pp1_it23;
reg   [0:0] ap_reg_ppstg_tmp_i_reg_1008_pp1_it24;
reg   [0:0] ap_reg_ppstg_tmp_i_reg_1008_pp1_it25;
reg   [0:0] ap_reg_ppstg_tmp_i_reg_1008_pp1_it26;
reg   [0:0] ap_reg_ppstg_tmp_i_reg_1008_pp1_it27;
reg   [0:0] ap_reg_ppstg_tmp_i_reg_1008_pp1_it29;
wire   [0:0] tmp_i_112_fu_693_p2;
reg   [0:0] ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it13;
reg   [0:0] ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it14;
reg   [0:0] ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it15;
reg   [0:0] ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it16;
reg   [0:0] ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it17;
reg   [0:0] ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it18;
reg   [0:0] ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it19;
reg   [0:0] ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it20;
reg   [0:0] ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it21;
reg   [0:0] ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it22;
reg   [0:0] ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it23;
reg   [0:0] ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it24;
reg   [0:0] ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it25;
reg   [0:0] ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it26;
reg   [0:0] ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it27;
reg   [0:0] ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it29;
wire   [0:0] tmp_61_i_fu_705_p2;
reg   [0:0] ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it13;
reg   [0:0] ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it14;
reg   [0:0] ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it15;
reg   [0:0] ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it16;
reg   [0:0] ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it17;
reg   [0:0] ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it18;
reg   [0:0] ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it19;
reg   [0:0] ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it20;
reg   [0:0] ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it21;
reg   [0:0] ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it22;
reg   [0:0] ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it23;
reg   [0:0] ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it24;
reg   [0:0] ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it25;
reg   [0:0] ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it26;
reg   [0:0] ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it27;
reg   [0:0] ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it29;
wire   [37:0] OP1_V_cast_fu_752_p1;
wire   [0:0] exitcond5_fu_798_p2;
reg   [0:0] exitcond5_reg_1041;
reg    ap_reg_ppiten_pp2_it0 = 1'b0;
reg    ap_reg_ppiten_pp2_it1 = 1'b0;
reg    ap_reg_ppiten_pp2_it2 = 1'b0;
reg    ap_reg_ppiten_pp2_it3 = 1'b0;
reg    ap_reg_ppiten_pp2_it4 = 1'b0;
reg    ap_reg_ppiten_pp2_it5 = 1'b0;
reg    ap_reg_ppiten_pp2_it6 = 1'b0;
reg   [0:0] ap_reg_ppstg_exitcond5_reg_1041_pp2_it1;
reg   [0:0] ap_reg_ppstg_exitcond5_reg_1041_pp2_it2;
reg   [0:0] ap_reg_ppstg_exitcond5_reg_1041_pp2_it3;
reg   [0:0] ap_reg_ppstg_exitcond5_reg_1041_pp2_it4;
reg   [0:0] ap_reg_ppstg_exitcond5_reg_1041_pp2_it5;
wire   [10:0] m_1_fu_804_p2;
wire   [63:0] tmp_fu_810_p1;
reg   [63:0] tmp_reg_1050;
reg   [63:0] ap_reg_ppstg_tmp_reg_1050_pp2_it1;
reg   [63:0] ap_reg_ppstg_tmp_reg_1050_pp2_it2;
reg   [63:0] ap_reg_ppstg_tmp_reg_1050_pp2_it3;
reg   [63:0] ap_reg_ppstg_tmp_reg_1050_pp2_it4;
reg   [63:0] ap_reg_ppstg_tmp_reg_1050_pp2_it5;
wire   [37:0] grp_fu_824_p2;
reg   [37:0] r_V_reg_1075;
wire    grp_IFFT_fu_295_ap_done;
reg   [9:0] real_V_address0;
reg    real_V_ce0;
reg    real_V_we0;
reg   [31:0] real_V_d0;
wire   [31:0] real_V_q0;
wire   [9:0] real_V_address1;
reg    real_V_ce1;
wire   [31:0] real_V_q1;
reg   [9:0] imag_V_address0;
reg    imag_V_ce0;
reg    imag_V_we0;
reg   [31:0] imag_V_d0;
wire   [31:0] imag_V_q0;
wire   [9:0] imag_V_address1;
reg    imag_V_ce1;
wire   [31:0] imag_V_q1;
reg   [31:0] grp_cordic_fu_290_theta_V;
wire   [31:0] grp_cordic_fu_290_ap_return_0;
wire   [31:0] grp_cordic_fu_290_ap_return_1;
reg    grp_cordic_fu_290_ap_ce;
wire    grp_IFFT_fu_295_ap_start;
wire    grp_IFFT_fu_295_ap_idle;
wire    grp_IFFT_fu_295_ap_ready;
wire   [9:0] grp_IFFT_fu_295_xreal_V_address0;
wire    grp_IFFT_fu_295_xreal_V_ce0;
wire    grp_IFFT_fu_295_xreal_V_we0;
wire   [31:0] grp_IFFT_fu_295_xreal_V_d0;
wire   [31:0] grp_IFFT_fu_295_xreal_V_q0;
wire   [9:0] grp_IFFT_fu_295_xreal_V_address1;
wire    grp_IFFT_fu_295_xreal_V_ce1;
wire   [31:0] grp_IFFT_fu_295_xreal_V_q1;
wire   [9:0] grp_IFFT_fu_295_ximag_V_address0;
wire    grp_IFFT_fu_295_ximag_V_ce0;
wire    grp_IFFT_fu_295_ximag_V_we0;
wire   [31:0] grp_IFFT_fu_295_ximag_V_d0;
wire   [31:0] grp_IFFT_fu_295_ximag_V_q0;
wire   [9:0] grp_IFFT_fu_295_ximag_V_address1;
wire    grp_IFFT_fu_295_ximag_V_ce1;
wire   [31:0] grp_IFFT_fu_295_ximag_V_q1;
reg   [31:0] ap_reg_phiprechg_sin_value_V_reg_252pp1_it30;
reg   [31:0] sin_value_V_phi_fu_255_p8;
wire   [31:0] ap_reg_phiprechg_sin_value_V_reg_252pp1_it29;
reg   [31:0] ap_reg_phiprechg_cos_value_V_reg_265pp1_it30;
reg   [31:0] cos_value_V_phi_fu_268_p8;
wire   [31:0] ap_reg_phiprechg_cos_value_V_reg_265pp1_it29;
wire   [31:0] this_addr_i12_0_0_i_fu_727_p1;
wire   [31:0] r_V_68_i_cast_fu_737_p1;
wire   [31:0] r_V_i_cast_fu_747_p1;
reg    grp_IFFT_fu_295_ap_start_ap_start_reg = 1'b0;
wire   [37:0] grp_fu_388_p0;
wire   [38:0] grp_fu_388_p1;
wire   [76:0] neg_mul_i_fu_394_p2;
wire   [76:0] sel_i_fu_399_p3;
wire   [29:0] tmp_126_fu_405_p4;
wire   [30:0] neg_ti_i_fu_419_p1;
wire   [30:0] tmp_i1_fu_425_p3;
wire   [24:0] tmp_127_fu_430_p4;
wire   [31:0] ret_V_1_i_fu_456_p0;
wire   [31:0] tmp_i1_108_fu_440_p1;
wire   [5:0] tmp_129_fu_452_p1;
wire   [0:0] tmp_1_i_fu_462_p2;
wire   [31:0] p_i_fu_468_p1;
wire   [31:0] ret_V_1_i_fu_456_p2;
wire   [0:0] tmp_128_fu_444_p3;
wire   [31:0] p_i_fu_468_p3;
wire   [31:0] result_fu_476_p2;
wire   [31:0] tmp_130_fu_484_p2;
wire   [31:0] grp_fu_493_p0;
wire   [8:0] grp_fu_493_p1;
wire   [37:0] r_V_146_fu_499_p2;
wire   [37:0] grp_fu_543_p0;
wire   [38:0] grp_fu_543_p1;
wire   [76:0] neg_mul_i1_fu_549_p2;
wire   [76:0] sel_i1_fu_554_p3;
wire   [29:0] tmp_132_fu_560_p4;
wire   [30:0] neg_ti_i1_fu_574_p1;
wire   [30:0] tmp_i2_fu_580_p3;
wire   [24:0] tmp_133_fu_585_p4;
wire   [31:0] ret_V_1_i1_fu_611_p0;
wire   [31:0] tmp_i2_111_fu_595_p1;
wire   [5:0] tmp_135_fu_607_p1;
wire   [0:0] tmp_1_i1_fu_617_p2;
wire   [31:0] p_i1_fu_623_p1;
wire   [31:0] ret_V_1_i1_fu_611_p2;
wire   [0:0] tmp_134_fu_599_p3;
wire   [31:0] p_i1_fu_623_p3;
wire   [31:0] result_1_fu_631_p2;
wire   [31:0] tmp_136_fu_639_p2;
wire   [31:0] grp_fu_648_p0;
wire   [8:0] grp_fu_648_p1;
wire   [37:0] r_V_147_fu_654_p2;
wire   [36:0] lhs_V_64_fu_698_p3;
wire   [36:0] r_V_148_fu_711_p2;
wire   [30:0] tmp_137_fu_717_p4;
wire   [30:0] r_V_68_i_fu_732_p2;
wire   [6:0] r_V_i_fu_742_p2;
wire   [31:0] grp_fu_760_p0;
wire   [31:0] grp_fu_760_p1;
wire   [31:0] grp_fu_770_p0;
wire   [31:0] grp_fu_770_p1;
wire   [37:0] grp_fu_760_p2;
wire   [37:0] grp_fu_770_p2;
wire   [5:0] grp_fu_824_p0;
wire   [31:0] grp_fu_824_p1;
wire   [37:0] grp_fu_833_p0;
wire   [5:0] grp_fu_833_p1;
wire   [43:0] grp_fu_833_p2;
wire    grp_fu_388_ce;
wire    grp_fu_493_ce;
wire    grp_fu_543_ce;
wire    grp_fu_648_ce;
wire    grp_fu_760_ce;
wire    grp_fu_770_ce;
wire    grp_fu_824_ce;
wire    grp_fu_833_ce;
reg   [2:0] ap_NS_fsm;
wire   [37:0] grp_fu_824_p00;
reg    ap_sig_bdd_176;
reg    ap_sig_bdd_87;
reg    ap_sig_bdd_1416;
reg    ap_sig_bdd_1418;
reg    ap_sig_bdd_1415;
reg    ap_sig_bdd_1422;
reg    ap_sig_bdd_1424;
reg    ap_sig_bdd_1426;
reg    ap_sig_bdd_468;
parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 3'b000;
parameter    ap_ST_pp0_stg0_fsm_1 = 3'b1;
parameter    ap_ST_pp1_stg0_fsm_2 = 3'b10;
parameter    ap_ST_st50_fsm_3 = 3'b11;
parameter    ap_ST_st51_fsm_4 = 3'b100;
parameter    ap_ST_pp2_stg0_fsm_5 = 3'b101;
parameter    ap_ST_st59_fsm_6 = 3'b110;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv11_400 = 11'b10000000000;
parameter    ap_const_lv11_1 = 11'b1;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv77_51832F1FD8 = 77'b101000110000011001011110001111111011000;
parameter    ap_const_lv77_0 = 77'b00000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_2F = 32'b101111;
parameter    ap_const_lv32_4C = 32'b1001100;
parameter    ap_const_lv31_0 = 31'b0000000000000000000000000000000;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv38_192 = 38'b110010010;
parameter    ap_const_lv32_25 = 32'b100101;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_64 = 32'b1100100;
parameter    ap_const_lv32_C9 = 32'b11001001;
parameter    ap_const_lv37_4B60 = 37'b100101101100000;
parameter    ap_const_lv37_1FFFFFB4A0 = 37'b1111111111111111111111011010010100000;
parameter    ap_const_lv31_7FFFFF37 = 31'b1111111111111111111111100110111;
parameter    ap_const_lv7_1C = 7'b11100;
parameter    ap_const_lv44_2D = 44'b101101;
parameter    ap_const_lv32_2B = 32'b101011;
parameter    ap_true = 1'b1;


pitchshifting_previousPhase_V #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
previousPhase_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( previousPhase_V_address0 ),
    .ce0( previousPhase_V_ce0 ),
    .we0( previousPhase_V_we0 ),
    .d0( previousPhase_V_d0 )
);

pitchshifting_phaseCumulative_V #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
phaseCumulative_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( phaseCumulative_V_address0 ),
    .ce0( phaseCumulative_V_ce0 ),
    .q0( phaseCumulative_V_q0 ),
    .address1( phaseCumulative_V_address1 ),
    .ce1( phaseCumulative_V_ce1 ),
    .we1( phaseCumulative_V_we1 ),
    .d1( phaseCumulative_V_d1 )
);

pitchshifting_wn_V #(
    .DataWidth( 6 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
wn_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( wn_V_address0 ),
    .ce0( wn_V_ce0 ),
    .q0( wn_V_q0 )
);

pitchshifting_real_V #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
real_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( real_V_address0 ),
    .ce0( real_V_ce0 ),
    .we0( real_V_we0 ),
    .d0( real_V_d0 ),
    .q0( real_V_q0 ),
    .address1( real_V_address1 ),
    .ce1( real_V_ce1 ),
    .q1( real_V_q1 )
);

pitchshifting_real_V #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
imag_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( imag_V_address0 ),
    .ce0( imag_V_ce0 ),
    .we0( imag_V_we0 ),
    .d0( imag_V_d0 ),
    .q0( imag_V_q0 ),
    .address1( imag_V_address1 ),
    .ce1( imag_V_ce1 ),
    .q1( imag_V_q1 )
);

cordic grp_cordic_fu_290(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .theta_V( grp_cordic_fu_290_theta_V ),
    .ap_return_0( grp_cordic_fu_290_ap_return_0 ),
    .ap_return_1( grp_cordic_fu_290_ap_return_1 ),
    .ap_ce( grp_cordic_fu_290_ap_ce )
);

IFFT grp_IFFT_fu_295(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_IFFT_fu_295_ap_start ),
    .ap_done( grp_IFFT_fu_295_ap_done ),
    .ap_idle( grp_IFFT_fu_295_ap_idle ),
    .ap_ready( grp_IFFT_fu_295_ap_ready ),
    .xreal_V_address0( grp_IFFT_fu_295_xreal_V_address0 ),
    .xreal_V_ce0( grp_IFFT_fu_295_xreal_V_ce0 ),
    .xreal_V_we0( grp_IFFT_fu_295_xreal_V_we0 ),
    .xreal_V_d0( grp_IFFT_fu_295_xreal_V_d0 ),
    .xreal_V_q0( grp_IFFT_fu_295_xreal_V_q0 ),
    .xreal_V_address1( grp_IFFT_fu_295_xreal_V_address1 ),
    .xreal_V_ce1( grp_IFFT_fu_295_xreal_V_ce1 ),
    .xreal_V_q1( grp_IFFT_fu_295_xreal_V_q1 ),
    .ximag_V_address0( grp_IFFT_fu_295_ximag_V_address0 ),
    .ximag_V_ce0( grp_IFFT_fu_295_ximag_V_ce0 ),
    .ximag_V_we0( grp_IFFT_fu_295_ximag_V_we0 ),
    .ximag_V_d0( grp_IFFT_fu_295_ximag_V_d0 ),
    .ximag_V_q0( grp_IFFT_fu_295_ximag_V_q0 ),
    .ximag_V_address1( grp_IFFT_fu_295_ximag_V_address1 ),
    .ximag_V_ce1( grp_IFFT_fu_295_ximag_V_ce1 ),
    .ximag_V_q1( grp_IFFT_fu_295_ximag_V_q1 )
);

top_mul_38s_39ns_77_5 #(
    .ID( 36 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 38 ),
    .din1_WIDTH( 39 ),
    .dout_WIDTH( 77 ))
top_mul_38s_39ns_77_5_U36(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_388_p0 ),
    .din1( grp_fu_388_p1 ),
    .ce( grp_fu_388_ce ),
    .dout( grp_fu_388_p2 )
);

top_mul_32s_9ns_38_3 #(
    .ID( 37 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 38 ))
top_mul_32s_9ns_38_3_U37(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_493_p0 ),
    .din1( grp_fu_493_p1 ),
    .ce( grp_fu_493_ce ),
    .dout( grp_fu_493_p2 )
);

top_mul_38s_39ns_77_5 #(
    .ID( 38 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 38 ),
    .din1_WIDTH( 39 ),
    .dout_WIDTH( 77 ))
top_mul_38s_39ns_77_5_U38(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_543_p0 ),
    .din1( grp_fu_543_p1 ),
    .ce( grp_fu_543_ce ),
    .dout( grp_fu_543_p2 )
);

top_mul_32s_9ns_38_3 #(
    .ID( 39 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 38 ))
top_mul_32s_9ns_38_3_U39(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_648_p0 ),
    .din1( grp_fu_648_p1 ),
    .ce( grp_fu_648_ce ),
    .dout( grp_fu_648_p2 )
);

top_mul_32s_32s_38_6 #(
    .ID( 40 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 38 ))
top_mul_32s_32s_38_6_U40(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_760_p0 ),
    .din1( grp_fu_760_p1 ),
    .ce( grp_fu_760_ce ),
    .dout( grp_fu_760_p2 )
);

top_mul_32s_32s_38_6 #(
    .ID( 41 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 38 ))
top_mul_32s_32s_38_6_U41(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_770_p0 ),
    .din1( grp_fu_770_p1 ),
    .ce( grp_fu_770_ce ),
    .dout( grp_fu_770_p2 )
);

top_mul_6ns_32s_38_3 #(
    .ID( 42 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 38 ))
top_mul_6ns_32s_38_3_U42(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_824_p0 ),
    .din1( grp_fu_824_p1 ),
    .ce( grp_fu_824_ce ),
    .dout( grp_fu_824_p2 )
);

top_mul_38s_6ns_44_3 #(
    .ID( 43 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 38 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 44 ))
top_mul_38s_6ns_44_3_U43(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_833_p0 ),
    .din1( grp_fu_833_p1 ),
    .ce( grp_fu_833_ce ),
    .dout( grp_fu_833_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond7_fu_353_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond7_fu_353_p2))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0)) | ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond7_fu_353_p2)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it10 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it10
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it10 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it10 <= ap_reg_ppiten_pp0_it9;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it10 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it11 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it11
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it11 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it11 <= ap_reg_ppiten_pp0_it10;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it11 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it3 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it3
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it4 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it4
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it5 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it5
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it6 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it6
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it7 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it7
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it8 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it8
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it9 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it9
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it9 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it9 <= ap_reg_ppiten_pp0_it8;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it9 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond6_fu_514_p2))) begin
            ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
        end else if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond7_fu_353_p2))) begin
            ap_reg_ppiten_pp1_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp1_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond6_fu_514_p2))) begin
            ap_reg_ppiten_pp1_it1 <= ap_const_logic_1;
        end else if ((((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond7_fu_353_p2)) | ((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond6_fu_514_p2)))) begin
            ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it10 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it10
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it10 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it10 <= ap_reg_ppiten_pp1_it9;
        end else if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond7_fu_353_p2))) begin
            ap_reg_ppiten_pp1_it10 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it11 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it11
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it11 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it11 <= ap_reg_ppiten_pp1_it10;
        end else if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond7_fu_353_p2))) begin
            ap_reg_ppiten_pp1_it11 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it12 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it12
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it12 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it12 <= ap_reg_ppiten_pp1_it11;
        end else if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond7_fu_353_p2))) begin
            ap_reg_ppiten_pp1_it12 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it13 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it13
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it13 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it13 <= ap_reg_ppiten_pp1_it12;
        end else if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond7_fu_353_p2))) begin
            ap_reg_ppiten_pp1_it13 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it14 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it14
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it14 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it14 <= ap_reg_ppiten_pp1_it13;
        end else if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond7_fu_353_p2))) begin
            ap_reg_ppiten_pp1_it14 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it15 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it15
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it15 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it15 <= ap_reg_ppiten_pp1_it14;
        end else if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond7_fu_353_p2))) begin
            ap_reg_ppiten_pp1_it15 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it16 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it16
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it16 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it16 <= ap_reg_ppiten_pp1_it15;
        end else if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond7_fu_353_p2))) begin
            ap_reg_ppiten_pp1_it16 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it17 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it17
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it17 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it17 <= ap_reg_ppiten_pp1_it16;
        end else if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond7_fu_353_p2))) begin
            ap_reg_ppiten_pp1_it17 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it18 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it18
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it18 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it18 <= ap_reg_ppiten_pp1_it17;
        end else if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond7_fu_353_p2))) begin
            ap_reg_ppiten_pp1_it18 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it19 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it19
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it19 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it19 <= ap_reg_ppiten_pp1_it18;
        end else if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond7_fu_353_p2))) begin
            ap_reg_ppiten_pp1_it19 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it2 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it2 <= ap_reg_ppiten_pp1_it1;
        end else if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond7_fu_353_p2))) begin
            ap_reg_ppiten_pp1_it2 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it20 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it20
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it20 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it20 <= ap_reg_ppiten_pp1_it19;
        end else if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond7_fu_353_p2))) begin
            ap_reg_ppiten_pp1_it20 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it21 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it21
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it21 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it21 <= ap_reg_ppiten_pp1_it20;
        end else if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond7_fu_353_p2))) begin
            ap_reg_ppiten_pp1_it21 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it22 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it22
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it22 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it22 <= ap_reg_ppiten_pp1_it21;
        end else if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond7_fu_353_p2))) begin
            ap_reg_ppiten_pp1_it22 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it23 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it23
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it23 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it23 <= ap_reg_ppiten_pp1_it22;
        end else if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond7_fu_353_p2))) begin
            ap_reg_ppiten_pp1_it23 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it24 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it24
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it24 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it24 <= ap_reg_ppiten_pp1_it23;
        end else if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond7_fu_353_p2))) begin
            ap_reg_ppiten_pp1_it24 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it25 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it25
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it25 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it25 <= ap_reg_ppiten_pp1_it24;
        end else if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond7_fu_353_p2))) begin
            ap_reg_ppiten_pp1_it25 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it26 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it26
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it26 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it26 <= ap_reg_ppiten_pp1_it25;
        end else if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond7_fu_353_p2))) begin
            ap_reg_ppiten_pp1_it26 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it27 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it27
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it27 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it27 <= ap_reg_ppiten_pp1_it26;
        end else if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond7_fu_353_p2))) begin
            ap_reg_ppiten_pp1_it27 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it28 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it28
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it28 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it28 <= ap_reg_ppiten_pp1_it27;
        end else if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond7_fu_353_p2))) begin
            ap_reg_ppiten_pp1_it28 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it29 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it29
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it29 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it29 <= ap_reg_ppiten_pp1_it28;
        end else if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond7_fu_353_p2))) begin
            ap_reg_ppiten_pp1_it29 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it3 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it3
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it3 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it3 <= ap_reg_ppiten_pp1_it2;
        end else if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond7_fu_353_p2))) begin
            ap_reg_ppiten_pp1_it3 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it30 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it30
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it30 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it30 <= ap_reg_ppiten_pp1_it29;
        end else if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond7_fu_353_p2))) begin
            ap_reg_ppiten_pp1_it30 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it31 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it31
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it31 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it31 <= ap_reg_ppiten_pp1_it30;
        end else if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond7_fu_353_p2))) begin
            ap_reg_ppiten_pp1_it31 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it32 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it32
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it32 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it32 <= ap_reg_ppiten_pp1_it31;
        end else if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond7_fu_353_p2))) begin
            ap_reg_ppiten_pp1_it32 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it33 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it33
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it33 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it33 <= ap_reg_ppiten_pp1_it32;
        end else if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond7_fu_353_p2))) begin
            ap_reg_ppiten_pp1_it33 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it34 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it34
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it34 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it34 <= ap_reg_ppiten_pp1_it33;
        end else if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond7_fu_353_p2))) begin
            ap_reg_ppiten_pp1_it34 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it35 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it35
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it35 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it35 <= ap_reg_ppiten_pp1_it34;
        end else if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond7_fu_353_p2))) begin
            ap_reg_ppiten_pp1_it35 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it4 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it4
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it4 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it4 <= ap_reg_ppiten_pp1_it3;
        end else if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond7_fu_353_p2))) begin
            ap_reg_ppiten_pp1_it4 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it5 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it5
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it5 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it5 <= ap_reg_ppiten_pp1_it4;
        end else if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond7_fu_353_p2))) begin
            ap_reg_ppiten_pp1_it5 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it6 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it6
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it6 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it6 <= ap_reg_ppiten_pp1_it5;
        end else if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond7_fu_353_p2))) begin
            ap_reg_ppiten_pp1_it6 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it7 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it7
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it7 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it7 <= ap_reg_ppiten_pp1_it6;
        end else if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond7_fu_353_p2))) begin
            ap_reg_ppiten_pp1_it7 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it8 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it8
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it8 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it8 <= ap_reg_ppiten_pp1_it7;
        end else if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond7_fu_353_p2))) begin
            ap_reg_ppiten_pp1_it8 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it9 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it9
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it9 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it9 <= ap_reg_ppiten_pp1_it8;
        end else if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond7_fu_353_p2))) begin
            ap_reg_ppiten_pp1_it9 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp2_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp2_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp2_stg0_fsm_5 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond5_fu_798_p2))) begin
            ap_reg_ppiten_pp2_it0 <= ap_const_logic_0;
        end else if (((ap_ST_st51_fsm_4 == ap_CS_fsm) & ~(ap_const_logic_0 == grp_IFFT_fu_295_ap_done))) begin
            ap_reg_ppiten_pp2_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp2_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp2_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp2_stg0_fsm_5 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond5_fu_798_p2))) begin
            ap_reg_ppiten_pp2_it1 <= ap_const_logic_1;
        end else if ((((ap_ST_st51_fsm_4 == ap_CS_fsm) & ~(ap_const_logic_0 == grp_IFFT_fu_295_ap_done)) | ((ap_ST_pp2_stg0_fsm_5 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond5_fu_798_p2)))) begin
            ap_reg_ppiten_pp2_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp2_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp2_it2 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp2_stg0_fsm_5 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp2_it2 <= ap_reg_ppiten_pp2_it1;
        end else if (((ap_ST_st51_fsm_4 == ap_CS_fsm) & ~(ap_const_logic_0 == grp_IFFT_fu_295_ap_done))) begin
            ap_reg_ppiten_pp2_it2 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp2_it3 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it3
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp2_it3 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp2_stg0_fsm_5 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp2_it3 <= ap_reg_ppiten_pp2_it2;
        end else if (((ap_ST_st51_fsm_4 == ap_CS_fsm) & ~(ap_const_logic_0 == grp_IFFT_fu_295_ap_done))) begin
            ap_reg_ppiten_pp2_it3 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp2_it4 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it4
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp2_it4 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp2_stg0_fsm_5 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp2_it4 <= ap_reg_ppiten_pp2_it3;
        end else if (((ap_ST_st51_fsm_4 == ap_CS_fsm) & ~(ap_const_logic_0 == grp_IFFT_fu_295_ap_done))) begin
            ap_reg_ppiten_pp2_it4 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp2_it5 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it5
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp2_it5 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp2_stg0_fsm_5 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp2_it5 <= ap_reg_ppiten_pp2_it4;
        end else if (((ap_ST_st51_fsm_4 == ap_CS_fsm) & ~(ap_const_logic_0 == grp_IFFT_fu_295_ap_done))) begin
            ap_reg_ppiten_pp2_it5 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp2_it6 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it6
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp2_it6 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp2_stg0_fsm_5 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp2_it6 <= ap_reg_ppiten_pp2_it5;
        end else if (((ap_ST_st51_fsm_4 == ap_CS_fsm) & ~(ap_const_logic_0 == grp_IFFT_fu_295_ap_done))) begin
            ap_reg_ppiten_pp2_it6 <= ap_const_logic_0;
        end
    end
end

/// grp_IFFT_fu_295_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_IFFT_fu_295_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_IFFT_fu_295_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if ((ap_ST_st50_fsm_3 == ap_CS_fsm)) begin
            grp_IFFT_fu_295_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_IFFT_fu_295_ap_ready)) begin
            grp_IFFT_fu_295_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (ap_sig_bdd_87) begin
        if (ap_sig_bdd_176) begin
            ap_reg_phiprechg_cos_value_V_reg_265pp1_it30 <= grp_cordic_fu_290_ap_return_1;
        end else if ((ap_true == ap_true)) begin
            ap_reg_phiprechg_cos_value_V_reg_265pp1_it30 <= ap_reg_phiprechg_cos_value_V_reg_265pp1_it29;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (ap_sig_bdd_87) begin
        if (ap_sig_bdd_176) begin
            ap_reg_phiprechg_sin_value_V_reg_252pp1_it30 <= grp_cordic_fu_290_ap_return_0;
        end else if ((ap_true == ap_true)) begin
            ap_reg_phiprechg_sin_value_V_reg_252pp1_it30 <= ap_reg_phiprechg_sin_value_V_reg_252pp1_it29;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
        i_6_reg_230 <= ap_const_lv11_0;
    end else if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_lv1_0 == exitcond7_fu_353_p2))) begin
        i_6_reg_230 <= i_fu_359_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond7_fu_353_p2))) begin
        j_reg_241 <= ap_const_lv11_0;
    end else if (((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_lv1_0 == exitcond6_fu_514_p2))) begin
        j_reg_241 <= j_1_fu_520_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp2_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it0) & (ap_const_lv1_0 == exitcond5_fu_798_p2))) begin
        m_reg_278 <= m_1_fu_804_p2;
    end else if (((ap_ST_st51_fsm_4 == ap_CS_fsm) & ~(ap_const_logic_0 == grp_IFFT_fu_295_ap_done))) begin
        m_reg_278 <= ap_const_lv11_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_lv1_0 == exitcond7_fu_353_p2))) begin
        OP2_V_reg_859[0] <= OP2_V_fu_365_p1[0];
OP2_V_reg_859[1] <= OP2_V_fu_365_p1[1];
OP2_V_reg_859[2] <= OP2_V_fu_365_p1[2];
OP2_V_reg_859[3] <= OP2_V_fu_365_p1[3];
OP2_V_reg_859[4] <= OP2_V_fu_365_p1[4];
OP2_V_reg_859[5] <= OP2_V_fu_365_p1[5];
OP2_V_reg_859[6] <= OP2_V_fu_365_p1[6];
OP2_V_reg_859[7] <= OP2_V_fu_365_p1[7];
OP2_V_reg_859[8] <= OP2_V_fu_365_p1[8];
OP2_V_reg_859[9] <= OP2_V_fu_365_p1[9];
OP2_V_reg_859[10] <= OP2_V_fu_365_p1[10];
        phaseCumulative_V_addr_1_reg_869 <= OP2_V_fu_365_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it11) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it10))) begin
        agg_result_V_i86_cast1_reg_997 <= {{r_V_147_fu_654_p2[ap_const_lv32_24 : ap_const_lv32_6]}};
        agg_result_V_i86_cast_reg_1003 <= {{r_V_147_fu_654_p2[ap_const_lv32_C : ap_const_lv32_6]}};
        real_angle_V_reg_990 <= {{r_V_147_fu_654_p2[ap_const_lv32_25 : ap_const_lv32_6]}};
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_pp2_stg0_fsm_5 == ap_CS_fsm)) begin
        ap_reg_ppstg_exitcond5_reg_1041_pp2_it1 <= exitcond5_reg_1041;
        ap_reg_ppstg_exitcond5_reg_1041_pp2_it2 <= ap_reg_ppstg_exitcond5_reg_1041_pp2_it1;
        ap_reg_ppstg_exitcond5_reg_1041_pp2_it3 <= ap_reg_ppstg_exitcond5_reg_1041_pp2_it2;
        ap_reg_ppstg_exitcond5_reg_1041_pp2_it4 <= ap_reg_ppstg_exitcond5_reg_1041_pp2_it3;
        ap_reg_ppstg_exitcond5_reg_1041_pp2_it5 <= ap_reg_ppstg_exitcond5_reg_1041_pp2_it4;
        ap_reg_ppstg_tmp_reg_1050_pp2_it1[0] <= tmp_reg_1050[0];
ap_reg_ppstg_tmp_reg_1050_pp2_it1[1] <= tmp_reg_1050[1];
ap_reg_ppstg_tmp_reg_1050_pp2_it1[2] <= tmp_reg_1050[2];
ap_reg_ppstg_tmp_reg_1050_pp2_it1[3] <= tmp_reg_1050[3];
ap_reg_ppstg_tmp_reg_1050_pp2_it1[4] <= tmp_reg_1050[4];
ap_reg_ppstg_tmp_reg_1050_pp2_it1[5] <= tmp_reg_1050[5];
ap_reg_ppstg_tmp_reg_1050_pp2_it1[6] <= tmp_reg_1050[6];
ap_reg_ppstg_tmp_reg_1050_pp2_it1[7] <= tmp_reg_1050[7];
ap_reg_ppstg_tmp_reg_1050_pp2_it1[8] <= tmp_reg_1050[8];
ap_reg_ppstg_tmp_reg_1050_pp2_it1[9] <= tmp_reg_1050[9];
ap_reg_ppstg_tmp_reg_1050_pp2_it1[10] <= tmp_reg_1050[10];
        ap_reg_ppstg_tmp_reg_1050_pp2_it2[0] <= ap_reg_ppstg_tmp_reg_1050_pp2_it1[0];
ap_reg_ppstg_tmp_reg_1050_pp2_it2[1] <= ap_reg_ppstg_tmp_reg_1050_pp2_it1[1];
ap_reg_ppstg_tmp_reg_1050_pp2_it2[2] <= ap_reg_ppstg_tmp_reg_1050_pp2_it1[2];
ap_reg_ppstg_tmp_reg_1050_pp2_it2[3] <= ap_reg_ppstg_tmp_reg_1050_pp2_it1[3];
ap_reg_ppstg_tmp_reg_1050_pp2_it2[4] <= ap_reg_ppstg_tmp_reg_1050_pp2_it1[4];
ap_reg_ppstg_tmp_reg_1050_pp2_it2[5] <= ap_reg_ppstg_tmp_reg_1050_pp2_it1[5];
ap_reg_ppstg_tmp_reg_1050_pp2_it2[6] <= ap_reg_ppstg_tmp_reg_1050_pp2_it1[6];
ap_reg_ppstg_tmp_reg_1050_pp2_it2[7] <= ap_reg_ppstg_tmp_reg_1050_pp2_it1[7];
ap_reg_ppstg_tmp_reg_1050_pp2_it2[8] <= ap_reg_ppstg_tmp_reg_1050_pp2_it1[8];
ap_reg_ppstg_tmp_reg_1050_pp2_it2[9] <= ap_reg_ppstg_tmp_reg_1050_pp2_it1[9];
ap_reg_ppstg_tmp_reg_1050_pp2_it2[10] <= ap_reg_ppstg_tmp_reg_1050_pp2_it1[10];
        ap_reg_ppstg_tmp_reg_1050_pp2_it3[0] <= ap_reg_ppstg_tmp_reg_1050_pp2_it2[0];
ap_reg_ppstg_tmp_reg_1050_pp2_it3[1] <= ap_reg_ppstg_tmp_reg_1050_pp2_it2[1];
ap_reg_ppstg_tmp_reg_1050_pp2_it3[2] <= ap_reg_ppstg_tmp_reg_1050_pp2_it2[2];
ap_reg_ppstg_tmp_reg_1050_pp2_it3[3] <= ap_reg_ppstg_tmp_reg_1050_pp2_it2[3];
ap_reg_ppstg_tmp_reg_1050_pp2_it3[4] <= ap_reg_ppstg_tmp_reg_1050_pp2_it2[4];
ap_reg_ppstg_tmp_reg_1050_pp2_it3[5] <= ap_reg_ppstg_tmp_reg_1050_pp2_it2[5];
ap_reg_ppstg_tmp_reg_1050_pp2_it3[6] <= ap_reg_ppstg_tmp_reg_1050_pp2_it2[6];
ap_reg_ppstg_tmp_reg_1050_pp2_it3[7] <= ap_reg_ppstg_tmp_reg_1050_pp2_it2[7];
ap_reg_ppstg_tmp_reg_1050_pp2_it3[8] <= ap_reg_ppstg_tmp_reg_1050_pp2_it2[8];
ap_reg_ppstg_tmp_reg_1050_pp2_it3[9] <= ap_reg_ppstg_tmp_reg_1050_pp2_it2[9];
ap_reg_ppstg_tmp_reg_1050_pp2_it3[10] <= ap_reg_ppstg_tmp_reg_1050_pp2_it2[10];
        ap_reg_ppstg_tmp_reg_1050_pp2_it4[0] <= ap_reg_ppstg_tmp_reg_1050_pp2_it3[0];
ap_reg_ppstg_tmp_reg_1050_pp2_it4[1] <= ap_reg_ppstg_tmp_reg_1050_pp2_it3[1];
ap_reg_ppstg_tmp_reg_1050_pp2_it4[2] <= ap_reg_ppstg_tmp_reg_1050_pp2_it3[2];
ap_reg_ppstg_tmp_reg_1050_pp2_it4[3] <= ap_reg_ppstg_tmp_reg_1050_pp2_it3[3];
ap_reg_ppstg_tmp_reg_1050_pp2_it4[4] <= ap_reg_ppstg_tmp_reg_1050_pp2_it3[4];
ap_reg_ppstg_tmp_reg_1050_pp2_it4[5] <= ap_reg_ppstg_tmp_reg_1050_pp2_it3[5];
ap_reg_ppstg_tmp_reg_1050_pp2_it4[6] <= ap_reg_ppstg_tmp_reg_1050_pp2_it3[6];
ap_reg_ppstg_tmp_reg_1050_pp2_it4[7] <= ap_reg_ppstg_tmp_reg_1050_pp2_it3[7];
ap_reg_ppstg_tmp_reg_1050_pp2_it4[8] <= ap_reg_ppstg_tmp_reg_1050_pp2_it3[8];
ap_reg_ppstg_tmp_reg_1050_pp2_it4[9] <= ap_reg_ppstg_tmp_reg_1050_pp2_it3[9];
ap_reg_ppstg_tmp_reg_1050_pp2_it4[10] <= ap_reg_ppstg_tmp_reg_1050_pp2_it3[10];
        ap_reg_ppstg_tmp_reg_1050_pp2_it5[0] <= ap_reg_ppstg_tmp_reg_1050_pp2_it4[0];
ap_reg_ppstg_tmp_reg_1050_pp2_it5[1] <= ap_reg_ppstg_tmp_reg_1050_pp2_it4[1];
ap_reg_ppstg_tmp_reg_1050_pp2_it5[2] <= ap_reg_ppstg_tmp_reg_1050_pp2_it4[2];
ap_reg_ppstg_tmp_reg_1050_pp2_it5[3] <= ap_reg_ppstg_tmp_reg_1050_pp2_it4[3];
ap_reg_ppstg_tmp_reg_1050_pp2_it5[4] <= ap_reg_ppstg_tmp_reg_1050_pp2_it4[4];
ap_reg_ppstg_tmp_reg_1050_pp2_it5[5] <= ap_reg_ppstg_tmp_reg_1050_pp2_it4[5];
ap_reg_ppstg_tmp_reg_1050_pp2_it5[6] <= ap_reg_ppstg_tmp_reg_1050_pp2_it4[6];
ap_reg_ppstg_tmp_reg_1050_pp2_it5[7] <= ap_reg_ppstg_tmp_reg_1050_pp2_it4[7];
ap_reg_ppstg_tmp_reg_1050_pp2_it5[8] <= ap_reg_ppstg_tmp_reg_1050_pp2_it4[8];
ap_reg_ppstg_tmp_reg_1050_pp2_it5[9] <= ap_reg_ppstg_tmp_reg_1050_pp2_it4[9];
ap_reg_ppstg_tmp_reg_1050_pp2_it5[10] <= ap_reg_ppstg_tmp_reg_1050_pp2_it4[10];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm)) begin
        ap_reg_ppstg_exitcond6_reg_922_pp1_it1 <= exitcond6_reg_922;
        ap_reg_ppstg_exitcond6_reg_922_pp1_it10 <= ap_reg_ppstg_exitcond6_reg_922_pp1_it9;
        ap_reg_ppstg_exitcond6_reg_922_pp1_it11 <= ap_reg_ppstg_exitcond6_reg_922_pp1_it10;
        ap_reg_ppstg_exitcond6_reg_922_pp1_it12 <= ap_reg_ppstg_exitcond6_reg_922_pp1_it11;
        ap_reg_ppstg_exitcond6_reg_922_pp1_it13 <= ap_reg_ppstg_exitcond6_reg_922_pp1_it12;
        ap_reg_ppstg_exitcond6_reg_922_pp1_it14 <= ap_reg_ppstg_exitcond6_reg_922_pp1_it13;
        ap_reg_ppstg_exitcond6_reg_922_pp1_it15 <= ap_reg_ppstg_exitcond6_reg_922_pp1_it14;
        ap_reg_ppstg_exitcond6_reg_922_pp1_it16 <= ap_reg_ppstg_exitcond6_reg_922_pp1_it15;
        ap_reg_ppstg_exitcond6_reg_922_pp1_it17 <= ap_reg_ppstg_exitcond6_reg_922_pp1_it16;
        ap_reg_ppstg_exitcond6_reg_922_pp1_it18 <= ap_reg_ppstg_exitcond6_reg_922_pp1_it17;
        ap_reg_ppstg_exitcond6_reg_922_pp1_it19 <= ap_reg_ppstg_exitcond6_reg_922_pp1_it18;
        ap_reg_ppstg_exitcond6_reg_922_pp1_it2 <= ap_reg_ppstg_exitcond6_reg_922_pp1_it1;
        ap_reg_ppstg_exitcond6_reg_922_pp1_it20 <= ap_reg_ppstg_exitcond6_reg_922_pp1_it19;
        ap_reg_ppstg_exitcond6_reg_922_pp1_it21 <= ap_reg_ppstg_exitcond6_reg_922_pp1_it20;
        ap_reg_ppstg_exitcond6_reg_922_pp1_it22 <= ap_reg_ppstg_exitcond6_reg_922_pp1_it21;
        ap_reg_ppstg_exitcond6_reg_922_pp1_it23 <= ap_reg_ppstg_exitcond6_reg_922_pp1_it22;
        ap_reg_ppstg_exitcond6_reg_922_pp1_it24 <= ap_reg_ppstg_exitcond6_reg_922_pp1_it23;
        ap_reg_ppstg_exitcond6_reg_922_pp1_it25 <= ap_reg_ppstg_exitcond6_reg_922_pp1_it24;
        ap_reg_ppstg_exitcond6_reg_922_pp1_it26 <= ap_reg_ppstg_exitcond6_reg_922_pp1_it25;
        ap_reg_ppstg_exitcond6_reg_922_pp1_it27 <= ap_reg_ppstg_exitcond6_reg_922_pp1_it26;
        ap_reg_ppstg_exitcond6_reg_922_pp1_it28 <= ap_reg_ppstg_exitcond6_reg_922_pp1_it27;
        ap_reg_ppstg_exitcond6_reg_922_pp1_it29 <= ap_reg_ppstg_exitcond6_reg_922_pp1_it28;
        ap_reg_ppstg_exitcond6_reg_922_pp1_it3 <= ap_reg_ppstg_exitcond6_reg_922_pp1_it2;
        ap_reg_ppstg_exitcond6_reg_922_pp1_it30 <= ap_reg_ppstg_exitcond6_reg_922_pp1_it29;
        ap_reg_ppstg_exitcond6_reg_922_pp1_it31 <= ap_reg_ppstg_exitcond6_reg_922_pp1_it30;
        ap_reg_ppstg_exitcond6_reg_922_pp1_it32 <= ap_reg_ppstg_exitcond6_reg_922_pp1_it31;
        ap_reg_ppstg_exitcond6_reg_922_pp1_it33 <= ap_reg_ppstg_exitcond6_reg_922_pp1_it32;
        ap_reg_ppstg_exitcond6_reg_922_pp1_it34 <= ap_reg_ppstg_exitcond6_reg_922_pp1_it33;
        ap_reg_ppstg_exitcond6_reg_922_pp1_it4 <= ap_reg_ppstg_exitcond6_reg_922_pp1_it3;
        ap_reg_ppstg_exitcond6_reg_922_pp1_it5 <= ap_reg_ppstg_exitcond6_reg_922_pp1_it4;
        ap_reg_ppstg_exitcond6_reg_922_pp1_it6 <= ap_reg_ppstg_exitcond6_reg_922_pp1_it5;
        ap_reg_ppstg_exitcond6_reg_922_pp1_it7 <= ap_reg_ppstg_exitcond6_reg_922_pp1_it6;
        ap_reg_ppstg_exitcond6_reg_922_pp1_it8 <= ap_reg_ppstg_exitcond6_reg_922_pp1_it7;
        ap_reg_ppstg_exitcond6_reg_922_pp1_it9 <= ap_reg_ppstg_exitcond6_reg_922_pp1_it8;
        ap_reg_ppstg_t_V_63_reg_943_pp1_it10[6] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it9[6];
ap_reg_ppstg_t_V_63_reg_943_pp1_it10[7] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it9[7];
ap_reg_ppstg_t_V_63_reg_943_pp1_it10[8] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it9[8];
ap_reg_ppstg_t_V_63_reg_943_pp1_it10[9] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it9[9];
ap_reg_ppstg_t_V_63_reg_943_pp1_it10[10] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it9[10];
ap_reg_ppstg_t_V_63_reg_943_pp1_it10[11] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it9[11];
ap_reg_ppstg_t_V_63_reg_943_pp1_it10[12] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it9[12];
ap_reg_ppstg_t_V_63_reg_943_pp1_it10[13] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it9[13];
ap_reg_ppstg_t_V_63_reg_943_pp1_it10[14] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it9[14];
ap_reg_ppstg_t_V_63_reg_943_pp1_it10[15] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it9[15];
ap_reg_ppstg_t_V_63_reg_943_pp1_it10[16] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it9[16];
ap_reg_ppstg_t_V_63_reg_943_pp1_it10[17] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it9[17];
ap_reg_ppstg_t_V_63_reg_943_pp1_it10[18] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it9[18];
ap_reg_ppstg_t_V_63_reg_943_pp1_it10[19] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it9[19];
ap_reg_ppstg_t_V_63_reg_943_pp1_it10[20] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it9[20];
ap_reg_ppstg_t_V_63_reg_943_pp1_it10[21] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it9[21];
ap_reg_ppstg_t_V_63_reg_943_pp1_it10[22] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it9[22];
ap_reg_ppstg_t_V_63_reg_943_pp1_it10[23] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it9[23];
ap_reg_ppstg_t_V_63_reg_943_pp1_it10[24] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it9[24];
ap_reg_ppstg_t_V_63_reg_943_pp1_it10[25] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it9[25];
ap_reg_ppstg_t_V_63_reg_943_pp1_it10[26] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it9[26];
ap_reg_ppstg_t_V_63_reg_943_pp1_it10[27] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it9[27];
ap_reg_ppstg_t_V_63_reg_943_pp1_it10[28] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it9[28];
ap_reg_ppstg_t_V_63_reg_943_pp1_it10[29] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it9[29];
ap_reg_ppstg_t_V_63_reg_943_pp1_it10[30] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it9[30];
ap_reg_ppstg_t_V_63_reg_943_pp1_it10[31] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it9[31];
ap_reg_ppstg_t_V_63_reg_943_pp1_it10[32] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it9[32];
ap_reg_ppstg_t_V_63_reg_943_pp1_it10[33] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it9[33];
ap_reg_ppstg_t_V_63_reg_943_pp1_it10[34] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it9[34];
ap_reg_ppstg_t_V_63_reg_943_pp1_it10[35] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it9[35];
ap_reg_ppstg_t_V_63_reg_943_pp1_it10[36] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it9[36];
ap_reg_ppstg_t_V_63_reg_943_pp1_it10[37] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it9[37];
        ap_reg_ppstg_t_V_63_reg_943_pp1_it2[6] <= t_V_63_reg_943[6];
ap_reg_ppstg_t_V_63_reg_943_pp1_it2[7] <= t_V_63_reg_943[7];
ap_reg_ppstg_t_V_63_reg_943_pp1_it2[8] <= t_V_63_reg_943[8];
ap_reg_ppstg_t_V_63_reg_943_pp1_it2[9] <= t_V_63_reg_943[9];
ap_reg_ppstg_t_V_63_reg_943_pp1_it2[10] <= t_V_63_reg_943[10];
ap_reg_ppstg_t_V_63_reg_943_pp1_it2[11] <= t_V_63_reg_943[11];
ap_reg_ppstg_t_V_63_reg_943_pp1_it2[12] <= t_V_63_reg_943[12];
ap_reg_ppstg_t_V_63_reg_943_pp1_it2[13] <= t_V_63_reg_943[13];
ap_reg_ppstg_t_V_63_reg_943_pp1_it2[14] <= t_V_63_reg_943[14];
ap_reg_ppstg_t_V_63_reg_943_pp1_it2[15] <= t_V_63_reg_943[15];
ap_reg_ppstg_t_V_63_reg_943_pp1_it2[16] <= t_V_63_reg_943[16];
ap_reg_ppstg_t_V_63_reg_943_pp1_it2[17] <= t_V_63_reg_943[17];
ap_reg_ppstg_t_V_63_reg_943_pp1_it2[18] <= t_V_63_reg_943[18];
ap_reg_ppstg_t_V_63_reg_943_pp1_it2[19] <= t_V_63_reg_943[19];
ap_reg_ppstg_t_V_63_reg_943_pp1_it2[20] <= t_V_63_reg_943[20];
ap_reg_ppstg_t_V_63_reg_943_pp1_it2[21] <= t_V_63_reg_943[21];
ap_reg_ppstg_t_V_63_reg_943_pp1_it2[22] <= t_V_63_reg_943[22];
ap_reg_ppstg_t_V_63_reg_943_pp1_it2[23] <= t_V_63_reg_943[23];
ap_reg_ppstg_t_V_63_reg_943_pp1_it2[24] <= t_V_63_reg_943[24];
ap_reg_ppstg_t_V_63_reg_943_pp1_it2[25] <= t_V_63_reg_943[25];
ap_reg_ppstg_t_V_63_reg_943_pp1_it2[26] <= t_V_63_reg_943[26];
ap_reg_ppstg_t_V_63_reg_943_pp1_it2[27] <= t_V_63_reg_943[27];
ap_reg_ppstg_t_V_63_reg_943_pp1_it2[28] <= t_V_63_reg_943[28];
ap_reg_ppstg_t_V_63_reg_943_pp1_it2[29] <= t_V_63_reg_943[29];
ap_reg_ppstg_t_V_63_reg_943_pp1_it2[30] <= t_V_63_reg_943[30];
ap_reg_ppstg_t_V_63_reg_943_pp1_it2[31] <= t_V_63_reg_943[31];
ap_reg_ppstg_t_V_63_reg_943_pp1_it2[32] <= t_V_63_reg_943[32];
ap_reg_ppstg_t_V_63_reg_943_pp1_it2[33] <= t_V_63_reg_943[33];
ap_reg_ppstg_t_V_63_reg_943_pp1_it2[34] <= t_V_63_reg_943[34];
ap_reg_ppstg_t_V_63_reg_943_pp1_it2[35] <= t_V_63_reg_943[35];
ap_reg_ppstg_t_V_63_reg_943_pp1_it2[36] <= t_V_63_reg_943[36];
ap_reg_ppstg_t_V_63_reg_943_pp1_it2[37] <= t_V_63_reg_943[37];
        ap_reg_ppstg_t_V_63_reg_943_pp1_it3[6] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it2[6];
ap_reg_ppstg_t_V_63_reg_943_pp1_it3[7] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it2[7];
ap_reg_ppstg_t_V_63_reg_943_pp1_it3[8] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it2[8];
ap_reg_ppstg_t_V_63_reg_943_pp1_it3[9] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it2[9];
ap_reg_ppstg_t_V_63_reg_943_pp1_it3[10] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it2[10];
ap_reg_ppstg_t_V_63_reg_943_pp1_it3[11] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it2[11];
ap_reg_ppstg_t_V_63_reg_943_pp1_it3[12] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it2[12];
ap_reg_ppstg_t_V_63_reg_943_pp1_it3[13] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it2[13];
ap_reg_ppstg_t_V_63_reg_943_pp1_it3[14] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it2[14];
ap_reg_ppstg_t_V_63_reg_943_pp1_it3[15] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it2[15];
ap_reg_ppstg_t_V_63_reg_943_pp1_it3[16] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it2[16];
ap_reg_ppstg_t_V_63_reg_943_pp1_it3[17] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it2[17];
ap_reg_ppstg_t_V_63_reg_943_pp1_it3[18] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it2[18];
ap_reg_ppstg_t_V_63_reg_943_pp1_it3[19] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it2[19];
ap_reg_ppstg_t_V_63_reg_943_pp1_it3[20] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it2[20];
ap_reg_ppstg_t_V_63_reg_943_pp1_it3[21] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it2[21];
ap_reg_ppstg_t_V_63_reg_943_pp1_it3[22] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it2[22];
ap_reg_ppstg_t_V_63_reg_943_pp1_it3[23] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it2[23];
ap_reg_ppstg_t_V_63_reg_943_pp1_it3[24] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it2[24];
ap_reg_ppstg_t_V_63_reg_943_pp1_it3[25] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it2[25];
ap_reg_ppstg_t_V_63_reg_943_pp1_it3[26] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it2[26];
ap_reg_ppstg_t_V_63_reg_943_pp1_it3[27] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it2[27];
ap_reg_ppstg_t_V_63_reg_943_pp1_it3[28] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it2[28];
ap_reg_ppstg_t_V_63_reg_943_pp1_it3[29] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it2[29];
ap_reg_ppstg_t_V_63_reg_943_pp1_it3[30] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it2[30];
ap_reg_ppstg_t_V_63_reg_943_pp1_it3[31] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it2[31];
ap_reg_ppstg_t_V_63_reg_943_pp1_it3[32] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it2[32];
ap_reg_ppstg_t_V_63_reg_943_pp1_it3[33] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it2[33];
ap_reg_ppstg_t_V_63_reg_943_pp1_it3[34] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it2[34];
ap_reg_ppstg_t_V_63_reg_943_pp1_it3[35] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it2[35];
ap_reg_ppstg_t_V_63_reg_943_pp1_it3[36] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it2[36];
ap_reg_ppstg_t_V_63_reg_943_pp1_it3[37] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it2[37];
        ap_reg_ppstg_t_V_63_reg_943_pp1_it4[6] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it3[6];
ap_reg_ppstg_t_V_63_reg_943_pp1_it4[7] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it3[7];
ap_reg_ppstg_t_V_63_reg_943_pp1_it4[8] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it3[8];
ap_reg_ppstg_t_V_63_reg_943_pp1_it4[9] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it3[9];
ap_reg_ppstg_t_V_63_reg_943_pp1_it4[10] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it3[10];
ap_reg_ppstg_t_V_63_reg_943_pp1_it4[11] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it3[11];
ap_reg_ppstg_t_V_63_reg_943_pp1_it4[12] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it3[12];
ap_reg_ppstg_t_V_63_reg_943_pp1_it4[13] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it3[13];
ap_reg_ppstg_t_V_63_reg_943_pp1_it4[14] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it3[14];
ap_reg_ppstg_t_V_63_reg_943_pp1_it4[15] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it3[15];
ap_reg_ppstg_t_V_63_reg_943_pp1_it4[16] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it3[16];
ap_reg_ppstg_t_V_63_reg_943_pp1_it4[17] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it3[17];
ap_reg_ppstg_t_V_63_reg_943_pp1_it4[18] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it3[18];
ap_reg_ppstg_t_V_63_reg_943_pp1_it4[19] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it3[19];
ap_reg_ppstg_t_V_63_reg_943_pp1_it4[20] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it3[20];
ap_reg_ppstg_t_V_63_reg_943_pp1_it4[21] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it3[21];
ap_reg_ppstg_t_V_63_reg_943_pp1_it4[22] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it3[22];
ap_reg_ppstg_t_V_63_reg_943_pp1_it4[23] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it3[23];
ap_reg_ppstg_t_V_63_reg_943_pp1_it4[24] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it3[24];
ap_reg_ppstg_t_V_63_reg_943_pp1_it4[25] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it3[25];
ap_reg_ppstg_t_V_63_reg_943_pp1_it4[26] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it3[26];
ap_reg_ppstg_t_V_63_reg_943_pp1_it4[27] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it3[27];
ap_reg_ppstg_t_V_63_reg_943_pp1_it4[28] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it3[28];
ap_reg_ppstg_t_V_63_reg_943_pp1_it4[29] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it3[29];
ap_reg_ppstg_t_V_63_reg_943_pp1_it4[30] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it3[30];
ap_reg_ppstg_t_V_63_reg_943_pp1_it4[31] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it3[31];
ap_reg_ppstg_t_V_63_reg_943_pp1_it4[32] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it3[32];
ap_reg_ppstg_t_V_63_reg_943_pp1_it4[33] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it3[33];
ap_reg_ppstg_t_V_63_reg_943_pp1_it4[34] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it3[34];
ap_reg_ppstg_t_V_63_reg_943_pp1_it4[35] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it3[35];
ap_reg_ppstg_t_V_63_reg_943_pp1_it4[36] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it3[36];
ap_reg_ppstg_t_V_63_reg_943_pp1_it4[37] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it3[37];
        ap_reg_ppstg_t_V_63_reg_943_pp1_it5[6] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it4[6];
ap_reg_ppstg_t_V_63_reg_943_pp1_it5[7] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it4[7];
ap_reg_ppstg_t_V_63_reg_943_pp1_it5[8] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it4[8];
ap_reg_ppstg_t_V_63_reg_943_pp1_it5[9] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it4[9];
ap_reg_ppstg_t_V_63_reg_943_pp1_it5[10] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it4[10];
ap_reg_ppstg_t_V_63_reg_943_pp1_it5[11] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it4[11];
ap_reg_ppstg_t_V_63_reg_943_pp1_it5[12] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it4[12];
ap_reg_ppstg_t_V_63_reg_943_pp1_it5[13] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it4[13];
ap_reg_ppstg_t_V_63_reg_943_pp1_it5[14] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it4[14];
ap_reg_ppstg_t_V_63_reg_943_pp1_it5[15] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it4[15];
ap_reg_ppstg_t_V_63_reg_943_pp1_it5[16] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it4[16];
ap_reg_ppstg_t_V_63_reg_943_pp1_it5[17] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it4[17];
ap_reg_ppstg_t_V_63_reg_943_pp1_it5[18] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it4[18];
ap_reg_ppstg_t_V_63_reg_943_pp1_it5[19] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it4[19];
ap_reg_ppstg_t_V_63_reg_943_pp1_it5[20] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it4[20];
ap_reg_ppstg_t_V_63_reg_943_pp1_it5[21] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it4[21];
ap_reg_ppstg_t_V_63_reg_943_pp1_it5[22] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it4[22];
ap_reg_ppstg_t_V_63_reg_943_pp1_it5[23] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it4[23];
ap_reg_ppstg_t_V_63_reg_943_pp1_it5[24] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it4[24];
ap_reg_ppstg_t_V_63_reg_943_pp1_it5[25] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it4[25];
ap_reg_ppstg_t_V_63_reg_943_pp1_it5[26] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it4[26];
ap_reg_ppstg_t_V_63_reg_943_pp1_it5[27] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it4[27];
ap_reg_ppstg_t_V_63_reg_943_pp1_it5[28] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it4[28];
ap_reg_ppstg_t_V_63_reg_943_pp1_it5[29] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it4[29];
ap_reg_ppstg_t_V_63_reg_943_pp1_it5[30] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it4[30];
ap_reg_ppstg_t_V_63_reg_943_pp1_it5[31] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it4[31];
ap_reg_ppstg_t_V_63_reg_943_pp1_it5[32] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it4[32];
ap_reg_ppstg_t_V_63_reg_943_pp1_it5[33] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it4[33];
ap_reg_ppstg_t_V_63_reg_943_pp1_it5[34] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it4[34];
ap_reg_ppstg_t_V_63_reg_943_pp1_it5[35] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it4[35];
ap_reg_ppstg_t_V_63_reg_943_pp1_it5[36] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it4[36];
ap_reg_ppstg_t_V_63_reg_943_pp1_it5[37] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it4[37];
        ap_reg_ppstg_t_V_63_reg_943_pp1_it6[6] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it5[6];
ap_reg_ppstg_t_V_63_reg_943_pp1_it6[7] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it5[7];
ap_reg_ppstg_t_V_63_reg_943_pp1_it6[8] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it5[8];
ap_reg_ppstg_t_V_63_reg_943_pp1_it6[9] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it5[9];
ap_reg_ppstg_t_V_63_reg_943_pp1_it6[10] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it5[10];
ap_reg_ppstg_t_V_63_reg_943_pp1_it6[11] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it5[11];
ap_reg_ppstg_t_V_63_reg_943_pp1_it6[12] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it5[12];
ap_reg_ppstg_t_V_63_reg_943_pp1_it6[13] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it5[13];
ap_reg_ppstg_t_V_63_reg_943_pp1_it6[14] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it5[14];
ap_reg_ppstg_t_V_63_reg_943_pp1_it6[15] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it5[15];
ap_reg_ppstg_t_V_63_reg_943_pp1_it6[16] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it5[16];
ap_reg_ppstg_t_V_63_reg_943_pp1_it6[17] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it5[17];
ap_reg_ppstg_t_V_63_reg_943_pp1_it6[18] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it5[18];
ap_reg_ppstg_t_V_63_reg_943_pp1_it6[19] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it5[19];
ap_reg_ppstg_t_V_63_reg_943_pp1_it6[20] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it5[20];
ap_reg_ppstg_t_V_63_reg_943_pp1_it6[21] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it5[21];
ap_reg_ppstg_t_V_63_reg_943_pp1_it6[22] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it5[22];
ap_reg_ppstg_t_V_63_reg_943_pp1_it6[23] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it5[23];
ap_reg_ppstg_t_V_63_reg_943_pp1_it6[24] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it5[24];
ap_reg_ppstg_t_V_63_reg_943_pp1_it6[25] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it5[25];
ap_reg_ppstg_t_V_63_reg_943_pp1_it6[26] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it5[26];
ap_reg_ppstg_t_V_63_reg_943_pp1_it6[27] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it5[27];
ap_reg_ppstg_t_V_63_reg_943_pp1_it6[28] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it5[28];
ap_reg_ppstg_t_V_63_reg_943_pp1_it6[29] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it5[29];
ap_reg_ppstg_t_V_63_reg_943_pp1_it6[30] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it5[30];
ap_reg_ppstg_t_V_63_reg_943_pp1_it6[31] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it5[31];
ap_reg_ppstg_t_V_63_reg_943_pp1_it6[32] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it5[32];
ap_reg_ppstg_t_V_63_reg_943_pp1_it6[33] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it5[33];
ap_reg_ppstg_t_V_63_reg_943_pp1_it6[34] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it5[34];
ap_reg_ppstg_t_V_63_reg_943_pp1_it6[35] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it5[35];
ap_reg_ppstg_t_V_63_reg_943_pp1_it6[36] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it5[36];
ap_reg_ppstg_t_V_63_reg_943_pp1_it6[37] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it5[37];
        ap_reg_ppstg_t_V_63_reg_943_pp1_it7[6] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it6[6];
ap_reg_ppstg_t_V_63_reg_943_pp1_it7[7] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it6[7];
ap_reg_ppstg_t_V_63_reg_943_pp1_it7[8] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it6[8];
ap_reg_ppstg_t_V_63_reg_943_pp1_it7[9] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it6[9];
ap_reg_ppstg_t_V_63_reg_943_pp1_it7[10] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it6[10];
ap_reg_ppstg_t_V_63_reg_943_pp1_it7[11] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it6[11];
ap_reg_ppstg_t_V_63_reg_943_pp1_it7[12] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it6[12];
ap_reg_ppstg_t_V_63_reg_943_pp1_it7[13] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it6[13];
ap_reg_ppstg_t_V_63_reg_943_pp1_it7[14] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it6[14];
ap_reg_ppstg_t_V_63_reg_943_pp1_it7[15] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it6[15];
ap_reg_ppstg_t_V_63_reg_943_pp1_it7[16] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it6[16];
ap_reg_ppstg_t_V_63_reg_943_pp1_it7[17] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it6[17];
ap_reg_ppstg_t_V_63_reg_943_pp1_it7[18] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it6[18];
ap_reg_ppstg_t_V_63_reg_943_pp1_it7[19] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it6[19];
ap_reg_ppstg_t_V_63_reg_943_pp1_it7[20] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it6[20];
ap_reg_ppstg_t_V_63_reg_943_pp1_it7[21] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it6[21];
ap_reg_ppstg_t_V_63_reg_943_pp1_it7[22] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it6[22];
ap_reg_ppstg_t_V_63_reg_943_pp1_it7[23] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it6[23];
ap_reg_ppstg_t_V_63_reg_943_pp1_it7[24] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it6[24];
ap_reg_ppstg_t_V_63_reg_943_pp1_it7[25] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it6[25];
ap_reg_ppstg_t_V_63_reg_943_pp1_it7[26] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it6[26];
ap_reg_ppstg_t_V_63_reg_943_pp1_it7[27] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it6[27];
ap_reg_ppstg_t_V_63_reg_943_pp1_it7[28] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it6[28];
ap_reg_ppstg_t_V_63_reg_943_pp1_it7[29] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it6[29];
ap_reg_ppstg_t_V_63_reg_943_pp1_it7[30] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it6[30];
ap_reg_ppstg_t_V_63_reg_943_pp1_it7[31] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it6[31];
ap_reg_ppstg_t_V_63_reg_943_pp1_it7[32] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it6[32];
ap_reg_ppstg_t_V_63_reg_943_pp1_it7[33] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it6[33];
ap_reg_ppstg_t_V_63_reg_943_pp1_it7[34] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it6[34];
ap_reg_ppstg_t_V_63_reg_943_pp1_it7[35] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it6[35];
ap_reg_ppstg_t_V_63_reg_943_pp1_it7[36] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it6[36];
ap_reg_ppstg_t_V_63_reg_943_pp1_it7[37] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it6[37];
        ap_reg_ppstg_t_V_63_reg_943_pp1_it8[6] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it7[6];
ap_reg_ppstg_t_V_63_reg_943_pp1_it8[7] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it7[7];
ap_reg_ppstg_t_V_63_reg_943_pp1_it8[8] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it7[8];
ap_reg_ppstg_t_V_63_reg_943_pp1_it8[9] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it7[9];
ap_reg_ppstg_t_V_63_reg_943_pp1_it8[10] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it7[10];
ap_reg_ppstg_t_V_63_reg_943_pp1_it8[11] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it7[11];
ap_reg_ppstg_t_V_63_reg_943_pp1_it8[12] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it7[12];
ap_reg_ppstg_t_V_63_reg_943_pp1_it8[13] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it7[13];
ap_reg_ppstg_t_V_63_reg_943_pp1_it8[14] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it7[14];
ap_reg_ppstg_t_V_63_reg_943_pp1_it8[15] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it7[15];
ap_reg_ppstg_t_V_63_reg_943_pp1_it8[16] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it7[16];
ap_reg_ppstg_t_V_63_reg_943_pp1_it8[17] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it7[17];
ap_reg_ppstg_t_V_63_reg_943_pp1_it8[18] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it7[18];
ap_reg_ppstg_t_V_63_reg_943_pp1_it8[19] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it7[19];
ap_reg_ppstg_t_V_63_reg_943_pp1_it8[20] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it7[20];
ap_reg_ppstg_t_V_63_reg_943_pp1_it8[21] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it7[21];
ap_reg_ppstg_t_V_63_reg_943_pp1_it8[22] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it7[22];
ap_reg_ppstg_t_V_63_reg_943_pp1_it8[23] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it7[23];
ap_reg_ppstg_t_V_63_reg_943_pp1_it8[24] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it7[24];
ap_reg_ppstg_t_V_63_reg_943_pp1_it8[25] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it7[25];
ap_reg_ppstg_t_V_63_reg_943_pp1_it8[26] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it7[26];
ap_reg_ppstg_t_V_63_reg_943_pp1_it8[27] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it7[27];
ap_reg_ppstg_t_V_63_reg_943_pp1_it8[28] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it7[28];
ap_reg_ppstg_t_V_63_reg_943_pp1_it8[29] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it7[29];
ap_reg_ppstg_t_V_63_reg_943_pp1_it8[30] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it7[30];
ap_reg_ppstg_t_V_63_reg_943_pp1_it8[31] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it7[31];
ap_reg_ppstg_t_V_63_reg_943_pp1_it8[32] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it7[32];
ap_reg_ppstg_t_V_63_reg_943_pp1_it8[33] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it7[33];
ap_reg_ppstg_t_V_63_reg_943_pp1_it8[34] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it7[34];
ap_reg_ppstg_t_V_63_reg_943_pp1_it8[35] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it7[35];
ap_reg_ppstg_t_V_63_reg_943_pp1_it8[36] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it7[36];
ap_reg_ppstg_t_V_63_reg_943_pp1_it8[37] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it7[37];
        ap_reg_ppstg_t_V_63_reg_943_pp1_it9[6] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it8[6];
ap_reg_ppstg_t_V_63_reg_943_pp1_it9[7] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it8[7];
ap_reg_ppstg_t_V_63_reg_943_pp1_it9[8] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it8[8];
ap_reg_ppstg_t_V_63_reg_943_pp1_it9[9] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it8[9];
ap_reg_ppstg_t_V_63_reg_943_pp1_it9[10] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it8[10];
ap_reg_ppstg_t_V_63_reg_943_pp1_it9[11] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it8[11];
ap_reg_ppstg_t_V_63_reg_943_pp1_it9[12] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it8[12];
ap_reg_ppstg_t_V_63_reg_943_pp1_it9[13] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it8[13];
ap_reg_ppstg_t_V_63_reg_943_pp1_it9[14] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it8[14];
ap_reg_ppstg_t_V_63_reg_943_pp1_it9[15] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it8[15];
ap_reg_ppstg_t_V_63_reg_943_pp1_it9[16] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it8[16];
ap_reg_ppstg_t_V_63_reg_943_pp1_it9[17] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it8[17];
ap_reg_ppstg_t_V_63_reg_943_pp1_it9[18] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it8[18];
ap_reg_ppstg_t_V_63_reg_943_pp1_it9[19] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it8[19];
ap_reg_ppstg_t_V_63_reg_943_pp1_it9[20] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it8[20];
ap_reg_ppstg_t_V_63_reg_943_pp1_it9[21] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it8[21];
ap_reg_ppstg_t_V_63_reg_943_pp1_it9[22] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it8[22];
ap_reg_ppstg_t_V_63_reg_943_pp1_it9[23] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it8[23];
ap_reg_ppstg_t_V_63_reg_943_pp1_it9[24] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it8[24];
ap_reg_ppstg_t_V_63_reg_943_pp1_it9[25] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it8[25];
ap_reg_ppstg_t_V_63_reg_943_pp1_it9[26] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it8[26];
ap_reg_ppstg_t_V_63_reg_943_pp1_it9[27] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it8[27];
ap_reg_ppstg_t_V_63_reg_943_pp1_it9[28] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it8[28];
ap_reg_ppstg_t_V_63_reg_943_pp1_it9[29] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it8[29];
ap_reg_ppstg_t_V_63_reg_943_pp1_it9[30] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it8[30];
ap_reg_ppstg_t_V_63_reg_943_pp1_it9[31] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it8[31];
ap_reg_ppstg_t_V_63_reg_943_pp1_it9[32] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it8[32];
ap_reg_ppstg_t_V_63_reg_943_pp1_it9[33] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it8[33];
ap_reg_ppstg_t_V_63_reg_943_pp1_it9[34] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it8[34];
ap_reg_ppstg_t_V_63_reg_943_pp1_it9[35] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it8[35];
ap_reg_ppstg_t_V_63_reg_943_pp1_it9[36] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it8[36];
ap_reg_ppstg_t_V_63_reg_943_pp1_it9[37] <= ap_reg_ppstg_t_V_63_reg_943_pp1_it8[37];
        ap_reg_ppstg_tmp_131_reg_953_pp1_it2 <= tmp_131_reg_953;
        ap_reg_ppstg_tmp_131_reg_953_pp1_it3 <= ap_reg_ppstg_tmp_131_reg_953_pp1_it2;
        ap_reg_ppstg_tmp_131_reg_953_pp1_it4 <= ap_reg_ppstg_tmp_131_reg_953_pp1_it3;
        ap_reg_ppstg_tmp_131_reg_953_pp1_it5 <= ap_reg_ppstg_tmp_131_reg_953_pp1_it4;
        ap_reg_ppstg_tmp_131_reg_953_pp1_it6 <= ap_reg_ppstg_tmp_131_reg_953_pp1_it5;
        ap_reg_ppstg_tmp_4_reg_931_pp1_it1[0] <= tmp_4_reg_931[0];
ap_reg_ppstg_tmp_4_reg_931_pp1_it1[1] <= tmp_4_reg_931[1];
ap_reg_ppstg_tmp_4_reg_931_pp1_it1[2] <= tmp_4_reg_931[2];
ap_reg_ppstg_tmp_4_reg_931_pp1_it1[3] <= tmp_4_reg_931[3];
ap_reg_ppstg_tmp_4_reg_931_pp1_it1[4] <= tmp_4_reg_931[4];
ap_reg_ppstg_tmp_4_reg_931_pp1_it1[5] <= tmp_4_reg_931[5];
ap_reg_ppstg_tmp_4_reg_931_pp1_it1[6] <= tmp_4_reg_931[6];
ap_reg_ppstg_tmp_4_reg_931_pp1_it1[7] <= tmp_4_reg_931[7];
ap_reg_ppstg_tmp_4_reg_931_pp1_it1[8] <= tmp_4_reg_931[8];
ap_reg_ppstg_tmp_4_reg_931_pp1_it1[9] <= tmp_4_reg_931[9];
ap_reg_ppstg_tmp_4_reg_931_pp1_it1[10] <= tmp_4_reg_931[10];
        ap_reg_ppstg_tmp_4_reg_931_pp1_it10[0] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it9[0];
ap_reg_ppstg_tmp_4_reg_931_pp1_it10[1] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it9[1];
ap_reg_ppstg_tmp_4_reg_931_pp1_it10[2] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it9[2];
ap_reg_ppstg_tmp_4_reg_931_pp1_it10[3] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it9[3];
ap_reg_ppstg_tmp_4_reg_931_pp1_it10[4] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it9[4];
ap_reg_ppstg_tmp_4_reg_931_pp1_it10[5] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it9[5];
ap_reg_ppstg_tmp_4_reg_931_pp1_it10[6] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it9[6];
ap_reg_ppstg_tmp_4_reg_931_pp1_it10[7] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it9[7];
ap_reg_ppstg_tmp_4_reg_931_pp1_it10[8] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it9[8];
ap_reg_ppstg_tmp_4_reg_931_pp1_it10[9] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it9[9];
ap_reg_ppstg_tmp_4_reg_931_pp1_it10[10] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it9[10];
        ap_reg_ppstg_tmp_4_reg_931_pp1_it11[0] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it10[0];
ap_reg_ppstg_tmp_4_reg_931_pp1_it11[1] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it10[1];
ap_reg_ppstg_tmp_4_reg_931_pp1_it11[2] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it10[2];
ap_reg_ppstg_tmp_4_reg_931_pp1_it11[3] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it10[3];
ap_reg_ppstg_tmp_4_reg_931_pp1_it11[4] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it10[4];
ap_reg_ppstg_tmp_4_reg_931_pp1_it11[5] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it10[5];
ap_reg_ppstg_tmp_4_reg_931_pp1_it11[6] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it10[6];
ap_reg_ppstg_tmp_4_reg_931_pp1_it11[7] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it10[7];
ap_reg_ppstg_tmp_4_reg_931_pp1_it11[8] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it10[8];
ap_reg_ppstg_tmp_4_reg_931_pp1_it11[9] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it10[9];
ap_reg_ppstg_tmp_4_reg_931_pp1_it11[10] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it10[10];
        ap_reg_ppstg_tmp_4_reg_931_pp1_it12[0] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it11[0];
ap_reg_ppstg_tmp_4_reg_931_pp1_it12[1] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it11[1];
ap_reg_ppstg_tmp_4_reg_931_pp1_it12[2] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it11[2];
ap_reg_ppstg_tmp_4_reg_931_pp1_it12[3] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it11[3];
ap_reg_ppstg_tmp_4_reg_931_pp1_it12[4] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it11[4];
ap_reg_ppstg_tmp_4_reg_931_pp1_it12[5] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it11[5];
ap_reg_ppstg_tmp_4_reg_931_pp1_it12[6] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it11[6];
ap_reg_ppstg_tmp_4_reg_931_pp1_it12[7] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it11[7];
ap_reg_ppstg_tmp_4_reg_931_pp1_it12[8] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it11[8];
ap_reg_ppstg_tmp_4_reg_931_pp1_it12[9] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it11[9];
ap_reg_ppstg_tmp_4_reg_931_pp1_it12[10] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it11[10];
        ap_reg_ppstg_tmp_4_reg_931_pp1_it13[0] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it12[0];
ap_reg_ppstg_tmp_4_reg_931_pp1_it13[1] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it12[1];
ap_reg_ppstg_tmp_4_reg_931_pp1_it13[2] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it12[2];
ap_reg_ppstg_tmp_4_reg_931_pp1_it13[3] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it12[3];
ap_reg_ppstg_tmp_4_reg_931_pp1_it13[4] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it12[4];
ap_reg_ppstg_tmp_4_reg_931_pp1_it13[5] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it12[5];
ap_reg_ppstg_tmp_4_reg_931_pp1_it13[6] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it12[6];
ap_reg_ppstg_tmp_4_reg_931_pp1_it13[7] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it12[7];
ap_reg_ppstg_tmp_4_reg_931_pp1_it13[8] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it12[8];
ap_reg_ppstg_tmp_4_reg_931_pp1_it13[9] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it12[9];
ap_reg_ppstg_tmp_4_reg_931_pp1_it13[10] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it12[10];
        ap_reg_ppstg_tmp_4_reg_931_pp1_it14[0] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it13[0];
ap_reg_ppstg_tmp_4_reg_931_pp1_it14[1] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it13[1];
ap_reg_ppstg_tmp_4_reg_931_pp1_it14[2] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it13[2];
ap_reg_ppstg_tmp_4_reg_931_pp1_it14[3] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it13[3];
ap_reg_ppstg_tmp_4_reg_931_pp1_it14[4] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it13[4];
ap_reg_ppstg_tmp_4_reg_931_pp1_it14[5] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it13[5];
ap_reg_ppstg_tmp_4_reg_931_pp1_it14[6] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it13[6];
ap_reg_ppstg_tmp_4_reg_931_pp1_it14[7] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it13[7];
ap_reg_ppstg_tmp_4_reg_931_pp1_it14[8] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it13[8];
ap_reg_ppstg_tmp_4_reg_931_pp1_it14[9] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it13[9];
ap_reg_ppstg_tmp_4_reg_931_pp1_it14[10] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it13[10];
        ap_reg_ppstg_tmp_4_reg_931_pp1_it15[0] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it14[0];
ap_reg_ppstg_tmp_4_reg_931_pp1_it15[1] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it14[1];
ap_reg_ppstg_tmp_4_reg_931_pp1_it15[2] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it14[2];
ap_reg_ppstg_tmp_4_reg_931_pp1_it15[3] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it14[3];
ap_reg_ppstg_tmp_4_reg_931_pp1_it15[4] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it14[4];
ap_reg_ppstg_tmp_4_reg_931_pp1_it15[5] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it14[5];
ap_reg_ppstg_tmp_4_reg_931_pp1_it15[6] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it14[6];
ap_reg_ppstg_tmp_4_reg_931_pp1_it15[7] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it14[7];
ap_reg_ppstg_tmp_4_reg_931_pp1_it15[8] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it14[8];
ap_reg_ppstg_tmp_4_reg_931_pp1_it15[9] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it14[9];
ap_reg_ppstg_tmp_4_reg_931_pp1_it15[10] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it14[10];
        ap_reg_ppstg_tmp_4_reg_931_pp1_it16[0] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it15[0];
ap_reg_ppstg_tmp_4_reg_931_pp1_it16[1] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it15[1];
ap_reg_ppstg_tmp_4_reg_931_pp1_it16[2] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it15[2];
ap_reg_ppstg_tmp_4_reg_931_pp1_it16[3] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it15[3];
ap_reg_ppstg_tmp_4_reg_931_pp1_it16[4] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it15[4];
ap_reg_ppstg_tmp_4_reg_931_pp1_it16[5] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it15[5];
ap_reg_ppstg_tmp_4_reg_931_pp1_it16[6] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it15[6];
ap_reg_ppstg_tmp_4_reg_931_pp1_it16[7] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it15[7];
ap_reg_ppstg_tmp_4_reg_931_pp1_it16[8] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it15[8];
ap_reg_ppstg_tmp_4_reg_931_pp1_it16[9] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it15[9];
ap_reg_ppstg_tmp_4_reg_931_pp1_it16[10] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it15[10];
        ap_reg_ppstg_tmp_4_reg_931_pp1_it17[0] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it16[0];
ap_reg_ppstg_tmp_4_reg_931_pp1_it17[1] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it16[1];
ap_reg_ppstg_tmp_4_reg_931_pp1_it17[2] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it16[2];
ap_reg_ppstg_tmp_4_reg_931_pp1_it17[3] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it16[3];
ap_reg_ppstg_tmp_4_reg_931_pp1_it17[4] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it16[4];
ap_reg_ppstg_tmp_4_reg_931_pp1_it17[5] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it16[5];
ap_reg_ppstg_tmp_4_reg_931_pp1_it17[6] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it16[6];
ap_reg_ppstg_tmp_4_reg_931_pp1_it17[7] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it16[7];
ap_reg_ppstg_tmp_4_reg_931_pp1_it17[8] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it16[8];
ap_reg_ppstg_tmp_4_reg_931_pp1_it17[9] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it16[9];
ap_reg_ppstg_tmp_4_reg_931_pp1_it17[10] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it16[10];
        ap_reg_ppstg_tmp_4_reg_931_pp1_it18[0] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it17[0];
ap_reg_ppstg_tmp_4_reg_931_pp1_it18[1] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it17[1];
ap_reg_ppstg_tmp_4_reg_931_pp1_it18[2] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it17[2];
ap_reg_ppstg_tmp_4_reg_931_pp1_it18[3] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it17[3];
ap_reg_ppstg_tmp_4_reg_931_pp1_it18[4] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it17[4];
ap_reg_ppstg_tmp_4_reg_931_pp1_it18[5] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it17[5];
ap_reg_ppstg_tmp_4_reg_931_pp1_it18[6] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it17[6];
ap_reg_ppstg_tmp_4_reg_931_pp1_it18[7] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it17[7];
ap_reg_ppstg_tmp_4_reg_931_pp1_it18[8] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it17[8];
ap_reg_ppstg_tmp_4_reg_931_pp1_it18[9] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it17[9];
ap_reg_ppstg_tmp_4_reg_931_pp1_it18[10] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it17[10];
        ap_reg_ppstg_tmp_4_reg_931_pp1_it19[0] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it18[0];
ap_reg_ppstg_tmp_4_reg_931_pp1_it19[1] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it18[1];
ap_reg_ppstg_tmp_4_reg_931_pp1_it19[2] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it18[2];
ap_reg_ppstg_tmp_4_reg_931_pp1_it19[3] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it18[3];
ap_reg_ppstg_tmp_4_reg_931_pp1_it19[4] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it18[4];
ap_reg_ppstg_tmp_4_reg_931_pp1_it19[5] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it18[5];
ap_reg_ppstg_tmp_4_reg_931_pp1_it19[6] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it18[6];
ap_reg_ppstg_tmp_4_reg_931_pp1_it19[7] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it18[7];
ap_reg_ppstg_tmp_4_reg_931_pp1_it19[8] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it18[8];
ap_reg_ppstg_tmp_4_reg_931_pp1_it19[9] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it18[9];
ap_reg_ppstg_tmp_4_reg_931_pp1_it19[10] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it18[10];
        ap_reg_ppstg_tmp_4_reg_931_pp1_it2[0] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it1[0];
ap_reg_ppstg_tmp_4_reg_931_pp1_it2[1] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it1[1];
ap_reg_ppstg_tmp_4_reg_931_pp1_it2[2] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it1[2];
ap_reg_ppstg_tmp_4_reg_931_pp1_it2[3] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it1[3];
ap_reg_ppstg_tmp_4_reg_931_pp1_it2[4] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it1[4];
ap_reg_ppstg_tmp_4_reg_931_pp1_it2[5] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it1[5];
ap_reg_ppstg_tmp_4_reg_931_pp1_it2[6] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it1[6];
ap_reg_ppstg_tmp_4_reg_931_pp1_it2[7] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it1[7];
ap_reg_ppstg_tmp_4_reg_931_pp1_it2[8] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it1[8];
ap_reg_ppstg_tmp_4_reg_931_pp1_it2[9] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it1[9];
ap_reg_ppstg_tmp_4_reg_931_pp1_it2[10] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it1[10];
        ap_reg_ppstg_tmp_4_reg_931_pp1_it20[0] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it19[0];
ap_reg_ppstg_tmp_4_reg_931_pp1_it20[1] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it19[1];
ap_reg_ppstg_tmp_4_reg_931_pp1_it20[2] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it19[2];
ap_reg_ppstg_tmp_4_reg_931_pp1_it20[3] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it19[3];
ap_reg_ppstg_tmp_4_reg_931_pp1_it20[4] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it19[4];
ap_reg_ppstg_tmp_4_reg_931_pp1_it20[5] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it19[5];
ap_reg_ppstg_tmp_4_reg_931_pp1_it20[6] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it19[6];
ap_reg_ppstg_tmp_4_reg_931_pp1_it20[7] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it19[7];
ap_reg_ppstg_tmp_4_reg_931_pp1_it20[8] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it19[8];
ap_reg_ppstg_tmp_4_reg_931_pp1_it20[9] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it19[9];
ap_reg_ppstg_tmp_4_reg_931_pp1_it20[10] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it19[10];
        ap_reg_ppstg_tmp_4_reg_931_pp1_it21[0] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it20[0];
ap_reg_ppstg_tmp_4_reg_931_pp1_it21[1] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it20[1];
ap_reg_ppstg_tmp_4_reg_931_pp1_it21[2] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it20[2];
ap_reg_ppstg_tmp_4_reg_931_pp1_it21[3] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it20[3];
ap_reg_ppstg_tmp_4_reg_931_pp1_it21[4] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it20[4];
ap_reg_ppstg_tmp_4_reg_931_pp1_it21[5] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it20[5];
ap_reg_ppstg_tmp_4_reg_931_pp1_it21[6] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it20[6];
ap_reg_ppstg_tmp_4_reg_931_pp1_it21[7] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it20[7];
ap_reg_ppstg_tmp_4_reg_931_pp1_it21[8] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it20[8];
ap_reg_ppstg_tmp_4_reg_931_pp1_it21[9] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it20[9];
ap_reg_ppstg_tmp_4_reg_931_pp1_it21[10] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it20[10];
        ap_reg_ppstg_tmp_4_reg_931_pp1_it22[0] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it21[0];
ap_reg_ppstg_tmp_4_reg_931_pp1_it22[1] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it21[1];
ap_reg_ppstg_tmp_4_reg_931_pp1_it22[2] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it21[2];
ap_reg_ppstg_tmp_4_reg_931_pp1_it22[3] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it21[3];
ap_reg_ppstg_tmp_4_reg_931_pp1_it22[4] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it21[4];
ap_reg_ppstg_tmp_4_reg_931_pp1_it22[5] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it21[5];
ap_reg_ppstg_tmp_4_reg_931_pp1_it22[6] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it21[6];
ap_reg_ppstg_tmp_4_reg_931_pp1_it22[7] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it21[7];
ap_reg_ppstg_tmp_4_reg_931_pp1_it22[8] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it21[8];
ap_reg_ppstg_tmp_4_reg_931_pp1_it22[9] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it21[9];
ap_reg_ppstg_tmp_4_reg_931_pp1_it22[10] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it21[10];
        ap_reg_ppstg_tmp_4_reg_931_pp1_it23[0] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it22[0];
ap_reg_ppstg_tmp_4_reg_931_pp1_it23[1] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it22[1];
ap_reg_ppstg_tmp_4_reg_931_pp1_it23[2] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it22[2];
ap_reg_ppstg_tmp_4_reg_931_pp1_it23[3] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it22[3];
ap_reg_ppstg_tmp_4_reg_931_pp1_it23[4] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it22[4];
ap_reg_ppstg_tmp_4_reg_931_pp1_it23[5] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it22[5];
ap_reg_ppstg_tmp_4_reg_931_pp1_it23[6] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it22[6];
ap_reg_ppstg_tmp_4_reg_931_pp1_it23[7] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it22[7];
ap_reg_ppstg_tmp_4_reg_931_pp1_it23[8] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it22[8];
ap_reg_ppstg_tmp_4_reg_931_pp1_it23[9] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it22[9];
ap_reg_ppstg_tmp_4_reg_931_pp1_it23[10] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it22[10];
        ap_reg_ppstg_tmp_4_reg_931_pp1_it24[0] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it23[0];
ap_reg_ppstg_tmp_4_reg_931_pp1_it24[1] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it23[1];
ap_reg_ppstg_tmp_4_reg_931_pp1_it24[2] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it23[2];
ap_reg_ppstg_tmp_4_reg_931_pp1_it24[3] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it23[3];
ap_reg_ppstg_tmp_4_reg_931_pp1_it24[4] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it23[4];
ap_reg_ppstg_tmp_4_reg_931_pp1_it24[5] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it23[5];
ap_reg_ppstg_tmp_4_reg_931_pp1_it24[6] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it23[6];
ap_reg_ppstg_tmp_4_reg_931_pp1_it24[7] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it23[7];
ap_reg_ppstg_tmp_4_reg_931_pp1_it24[8] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it23[8];
ap_reg_ppstg_tmp_4_reg_931_pp1_it24[9] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it23[9];
ap_reg_ppstg_tmp_4_reg_931_pp1_it24[10] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it23[10];
        ap_reg_ppstg_tmp_4_reg_931_pp1_it25[0] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it24[0];
ap_reg_ppstg_tmp_4_reg_931_pp1_it25[1] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it24[1];
ap_reg_ppstg_tmp_4_reg_931_pp1_it25[2] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it24[2];
ap_reg_ppstg_tmp_4_reg_931_pp1_it25[3] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it24[3];
ap_reg_ppstg_tmp_4_reg_931_pp1_it25[4] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it24[4];
ap_reg_ppstg_tmp_4_reg_931_pp1_it25[5] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it24[5];
ap_reg_ppstg_tmp_4_reg_931_pp1_it25[6] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it24[6];
ap_reg_ppstg_tmp_4_reg_931_pp1_it25[7] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it24[7];
ap_reg_ppstg_tmp_4_reg_931_pp1_it25[8] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it24[8];
ap_reg_ppstg_tmp_4_reg_931_pp1_it25[9] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it24[9];
ap_reg_ppstg_tmp_4_reg_931_pp1_it25[10] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it24[10];
        ap_reg_ppstg_tmp_4_reg_931_pp1_it26[0] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it25[0];
ap_reg_ppstg_tmp_4_reg_931_pp1_it26[1] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it25[1];
ap_reg_ppstg_tmp_4_reg_931_pp1_it26[2] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it25[2];
ap_reg_ppstg_tmp_4_reg_931_pp1_it26[3] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it25[3];
ap_reg_ppstg_tmp_4_reg_931_pp1_it26[4] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it25[4];
ap_reg_ppstg_tmp_4_reg_931_pp1_it26[5] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it25[5];
ap_reg_ppstg_tmp_4_reg_931_pp1_it26[6] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it25[6];
ap_reg_ppstg_tmp_4_reg_931_pp1_it26[7] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it25[7];
ap_reg_ppstg_tmp_4_reg_931_pp1_it26[8] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it25[8];
ap_reg_ppstg_tmp_4_reg_931_pp1_it26[9] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it25[9];
ap_reg_ppstg_tmp_4_reg_931_pp1_it26[10] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it25[10];
        ap_reg_ppstg_tmp_4_reg_931_pp1_it27[0] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it26[0];
ap_reg_ppstg_tmp_4_reg_931_pp1_it27[1] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it26[1];
ap_reg_ppstg_tmp_4_reg_931_pp1_it27[2] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it26[2];
ap_reg_ppstg_tmp_4_reg_931_pp1_it27[3] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it26[3];
ap_reg_ppstg_tmp_4_reg_931_pp1_it27[4] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it26[4];
ap_reg_ppstg_tmp_4_reg_931_pp1_it27[5] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it26[5];
ap_reg_ppstg_tmp_4_reg_931_pp1_it27[6] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it26[6];
ap_reg_ppstg_tmp_4_reg_931_pp1_it27[7] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it26[7];
ap_reg_ppstg_tmp_4_reg_931_pp1_it27[8] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it26[8];
ap_reg_ppstg_tmp_4_reg_931_pp1_it27[9] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it26[9];
ap_reg_ppstg_tmp_4_reg_931_pp1_it27[10] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it26[10];
        ap_reg_ppstg_tmp_4_reg_931_pp1_it28[0] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it27[0];
ap_reg_ppstg_tmp_4_reg_931_pp1_it28[1] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it27[1];
ap_reg_ppstg_tmp_4_reg_931_pp1_it28[2] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it27[2];
ap_reg_ppstg_tmp_4_reg_931_pp1_it28[3] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it27[3];
ap_reg_ppstg_tmp_4_reg_931_pp1_it28[4] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it27[4];
ap_reg_ppstg_tmp_4_reg_931_pp1_it28[5] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it27[5];
ap_reg_ppstg_tmp_4_reg_931_pp1_it28[6] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it27[6];
ap_reg_ppstg_tmp_4_reg_931_pp1_it28[7] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it27[7];
ap_reg_ppstg_tmp_4_reg_931_pp1_it28[8] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it27[8];
ap_reg_ppstg_tmp_4_reg_931_pp1_it28[9] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it27[9];
ap_reg_ppstg_tmp_4_reg_931_pp1_it28[10] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it27[10];
        ap_reg_ppstg_tmp_4_reg_931_pp1_it29[0] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it28[0];
ap_reg_ppstg_tmp_4_reg_931_pp1_it29[1] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it28[1];
ap_reg_ppstg_tmp_4_reg_931_pp1_it29[2] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it28[2];
ap_reg_ppstg_tmp_4_reg_931_pp1_it29[3] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it28[3];
ap_reg_ppstg_tmp_4_reg_931_pp1_it29[4] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it28[4];
ap_reg_ppstg_tmp_4_reg_931_pp1_it29[5] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it28[5];
ap_reg_ppstg_tmp_4_reg_931_pp1_it29[6] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it28[6];
ap_reg_ppstg_tmp_4_reg_931_pp1_it29[7] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it28[7];
ap_reg_ppstg_tmp_4_reg_931_pp1_it29[8] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it28[8];
ap_reg_ppstg_tmp_4_reg_931_pp1_it29[9] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it28[9];
ap_reg_ppstg_tmp_4_reg_931_pp1_it29[10] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it28[10];
        ap_reg_ppstg_tmp_4_reg_931_pp1_it3[0] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it2[0];
ap_reg_ppstg_tmp_4_reg_931_pp1_it3[1] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it2[1];
ap_reg_ppstg_tmp_4_reg_931_pp1_it3[2] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it2[2];
ap_reg_ppstg_tmp_4_reg_931_pp1_it3[3] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it2[3];
ap_reg_ppstg_tmp_4_reg_931_pp1_it3[4] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it2[4];
ap_reg_ppstg_tmp_4_reg_931_pp1_it3[5] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it2[5];
ap_reg_ppstg_tmp_4_reg_931_pp1_it3[6] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it2[6];
ap_reg_ppstg_tmp_4_reg_931_pp1_it3[7] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it2[7];
ap_reg_ppstg_tmp_4_reg_931_pp1_it3[8] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it2[8];
ap_reg_ppstg_tmp_4_reg_931_pp1_it3[9] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it2[9];
ap_reg_ppstg_tmp_4_reg_931_pp1_it3[10] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it2[10];
        ap_reg_ppstg_tmp_4_reg_931_pp1_it30[0] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it29[0];
ap_reg_ppstg_tmp_4_reg_931_pp1_it30[1] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it29[1];
ap_reg_ppstg_tmp_4_reg_931_pp1_it30[2] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it29[2];
ap_reg_ppstg_tmp_4_reg_931_pp1_it30[3] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it29[3];
ap_reg_ppstg_tmp_4_reg_931_pp1_it30[4] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it29[4];
ap_reg_ppstg_tmp_4_reg_931_pp1_it30[5] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it29[5];
ap_reg_ppstg_tmp_4_reg_931_pp1_it30[6] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it29[6];
ap_reg_ppstg_tmp_4_reg_931_pp1_it30[7] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it29[7];
ap_reg_ppstg_tmp_4_reg_931_pp1_it30[8] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it29[8];
ap_reg_ppstg_tmp_4_reg_931_pp1_it30[9] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it29[9];
ap_reg_ppstg_tmp_4_reg_931_pp1_it30[10] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it29[10];
        ap_reg_ppstg_tmp_4_reg_931_pp1_it31[0] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it30[0];
ap_reg_ppstg_tmp_4_reg_931_pp1_it31[1] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it30[1];
ap_reg_ppstg_tmp_4_reg_931_pp1_it31[2] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it30[2];
ap_reg_ppstg_tmp_4_reg_931_pp1_it31[3] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it30[3];
ap_reg_ppstg_tmp_4_reg_931_pp1_it31[4] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it30[4];
ap_reg_ppstg_tmp_4_reg_931_pp1_it31[5] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it30[5];
ap_reg_ppstg_tmp_4_reg_931_pp1_it31[6] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it30[6];
ap_reg_ppstg_tmp_4_reg_931_pp1_it31[7] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it30[7];
ap_reg_ppstg_tmp_4_reg_931_pp1_it31[8] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it30[8];
ap_reg_ppstg_tmp_4_reg_931_pp1_it31[9] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it30[9];
ap_reg_ppstg_tmp_4_reg_931_pp1_it31[10] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it30[10];
        ap_reg_ppstg_tmp_4_reg_931_pp1_it32[0] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it31[0];
ap_reg_ppstg_tmp_4_reg_931_pp1_it32[1] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it31[1];
ap_reg_ppstg_tmp_4_reg_931_pp1_it32[2] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it31[2];
ap_reg_ppstg_tmp_4_reg_931_pp1_it32[3] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it31[3];
ap_reg_ppstg_tmp_4_reg_931_pp1_it32[4] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it31[4];
ap_reg_ppstg_tmp_4_reg_931_pp1_it32[5] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it31[5];
ap_reg_ppstg_tmp_4_reg_931_pp1_it32[6] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it31[6];
ap_reg_ppstg_tmp_4_reg_931_pp1_it32[7] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it31[7];
ap_reg_ppstg_tmp_4_reg_931_pp1_it32[8] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it31[8];
ap_reg_ppstg_tmp_4_reg_931_pp1_it32[9] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it31[9];
ap_reg_ppstg_tmp_4_reg_931_pp1_it32[10] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it31[10];
        ap_reg_ppstg_tmp_4_reg_931_pp1_it33[0] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it32[0];
ap_reg_ppstg_tmp_4_reg_931_pp1_it33[1] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it32[1];
ap_reg_ppstg_tmp_4_reg_931_pp1_it33[2] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it32[2];
ap_reg_ppstg_tmp_4_reg_931_pp1_it33[3] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it32[3];
ap_reg_ppstg_tmp_4_reg_931_pp1_it33[4] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it32[4];
ap_reg_ppstg_tmp_4_reg_931_pp1_it33[5] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it32[5];
ap_reg_ppstg_tmp_4_reg_931_pp1_it33[6] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it32[6];
ap_reg_ppstg_tmp_4_reg_931_pp1_it33[7] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it32[7];
ap_reg_ppstg_tmp_4_reg_931_pp1_it33[8] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it32[8];
ap_reg_ppstg_tmp_4_reg_931_pp1_it33[9] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it32[9];
ap_reg_ppstg_tmp_4_reg_931_pp1_it33[10] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it32[10];
        ap_reg_ppstg_tmp_4_reg_931_pp1_it34[0] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it33[0];
ap_reg_ppstg_tmp_4_reg_931_pp1_it34[1] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it33[1];
ap_reg_ppstg_tmp_4_reg_931_pp1_it34[2] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it33[2];
ap_reg_ppstg_tmp_4_reg_931_pp1_it34[3] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it33[3];
ap_reg_ppstg_tmp_4_reg_931_pp1_it34[4] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it33[4];
ap_reg_ppstg_tmp_4_reg_931_pp1_it34[5] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it33[5];
ap_reg_ppstg_tmp_4_reg_931_pp1_it34[6] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it33[6];
ap_reg_ppstg_tmp_4_reg_931_pp1_it34[7] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it33[7];
ap_reg_ppstg_tmp_4_reg_931_pp1_it34[8] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it33[8];
ap_reg_ppstg_tmp_4_reg_931_pp1_it34[9] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it33[9];
ap_reg_ppstg_tmp_4_reg_931_pp1_it34[10] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it33[10];
        ap_reg_ppstg_tmp_4_reg_931_pp1_it4[0] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it3[0];
ap_reg_ppstg_tmp_4_reg_931_pp1_it4[1] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it3[1];
ap_reg_ppstg_tmp_4_reg_931_pp1_it4[2] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it3[2];
ap_reg_ppstg_tmp_4_reg_931_pp1_it4[3] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it3[3];
ap_reg_ppstg_tmp_4_reg_931_pp1_it4[4] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it3[4];
ap_reg_ppstg_tmp_4_reg_931_pp1_it4[5] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it3[5];
ap_reg_ppstg_tmp_4_reg_931_pp1_it4[6] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it3[6];
ap_reg_ppstg_tmp_4_reg_931_pp1_it4[7] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it3[7];
ap_reg_ppstg_tmp_4_reg_931_pp1_it4[8] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it3[8];
ap_reg_ppstg_tmp_4_reg_931_pp1_it4[9] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it3[9];
ap_reg_ppstg_tmp_4_reg_931_pp1_it4[10] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it3[10];
        ap_reg_ppstg_tmp_4_reg_931_pp1_it5[0] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it4[0];
ap_reg_ppstg_tmp_4_reg_931_pp1_it5[1] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it4[1];
ap_reg_ppstg_tmp_4_reg_931_pp1_it5[2] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it4[2];
ap_reg_ppstg_tmp_4_reg_931_pp1_it5[3] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it4[3];
ap_reg_ppstg_tmp_4_reg_931_pp1_it5[4] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it4[4];
ap_reg_ppstg_tmp_4_reg_931_pp1_it5[5] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it4[5];
ap_reg_ppstg_tmp_4_reg_931_pp1_it5[6] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it4[6];
ap_reg_ppstg_tmp_4_reg_931_pp1_it5[7] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it4[7];
ap_reg_ppstg_tmp_4_reg_931_pp1_it5[8] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it4[8];
ap_reg_ppstg_tmp_4_reg_931_pp1_it5[9] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it4[9];
ap_reg_ppstg_tmp_4_reg_931_pp1_it5[10] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it4[10];
        ap_reg_ppstg_tmp_4_reg_931_pp1_it6[0] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it5[0];
ap_reg_ppstg_tmp_4_reg_931_pp1_it6[1] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it5[1];
ap_reg_ppstg_tmp_4_reg_931_pp1_it6[2] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it5[2];
ap_reg_ppstg_tmp_4_reg_931_pp1_it6[3] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it5[3];
ap_reg_ppstg_tmp_4_reg_931_pp1_it6[4] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it5[4];
ap_reg_ppstg_tmp_4_reg_931_pp1_it6[5] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it5[5];
ap_reg_ppstg_tmp_4_reg_931_pp1_it6[6] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it5[6];
ap_reg_ppstg_tmp_4_reg_931_pp1_it6[7] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it5[7];
ap_reg_ppstg_tmp_4_reg_931_pp1_it6[8] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it5[8];
ap_reg_ppstg_tmp_4_reg_931_pp1_it6[9] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it5[9];
ap_reg_ppstg_tmp_4_reg_931_pp1_it6[10] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it5[10];
        ap_reg_ppstg_tmp_4_reg_931_pp1_it7[0] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it6[0];
ap_reg_ppstg_tmp_4_reg_931_pp1_it7[1] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it6[1];
ap_reg_ppstg_tmp_4_reg_931_pp1_it7[2] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it6[2];
ap_reg_ppstg_tmp_4_reg_931_pp1_it7[3] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it6[3];
ap_reg_ppstg_tmp_4_reg_931_pp1_it7[4] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it6[4];
ap_reg_ppstg_tmp_4_reg_931_pp1_it7[5] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it6[5];
ap_reg_ppstg_tmp_4_reg_931_pp1_it7[6] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it6[6];
ap_reg_ppstg_tmp_4_reg_931_pp1_it7[7] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it6[7];
ap_reg_ppstg_tmp_4_reg_931_pp1_it7[8] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it6[8];
ap_reg_ppstg_tmp_4_reg_931_pp1_it7[9] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it6[9];
ap_reg_ppstg_tmp_4_reg_931_pp1_it7[10] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it6[10];
        ap_reg_ppstg_tmp_4_reg_931_pp1_it8[0] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it7[0];
ap_reg_ppstg_tmp_4_reg_931_pp1_it8[1] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it7[1];
ap_reg_ppstg_tmp_4_reg_931_pp1_it8[2] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it7[2];
ap_reg_ppstg_tmp_4_reg_931_pp1_it8[3] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it7[3];
ap_reg_ppstg_tmp_4_reg_931_pp1_it8[4] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it7[4];
ap_reg_ppstg_tmp_4_reg_931_pp1_it8[5] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it7[5];
ap_reg_ppstg_tmp_4_reg_931_pp1_it8[6] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it7[6];
ap_reg_ppstg_tmp_4_reg_931_pp1_it8[7] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it7[7];
ap_reg_ppstg_tmp_4_reg_931_pp1_it8[8] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it7[8];
ap_reg_ppstg_tmp_4_reg_931_pp1_it8[9] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it7[9];
ap_reg_ppstg_tmp_4_reg_931_pp1_it8[10] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it7[10];
        ap_reg_ppstg_tmp_4_reg_931_pp1_it9[0] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it8[0];
ap_reg_ppstg_tmp_4_reg_931_pp1_it9[1] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it8[1];
ap_reg_ppstg_tmp_4_reg_931_pp1_it9[2] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it8[2];
ap_reg_ppstg_tmp_4_reg_931_pp1_it9[3] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it8[3];
ap_reg_ppstg_tmp_4_reg_931_pp1_it9[4] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it8[4];
ap_reg_ppstg_tmp_4_reg_931_pp1_it9[5] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it8[5];
ap_reg_ppstg_tmp_4_reg_931_pp1_it9[6] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it8[6];
ap_reg_ppstg_tmp_4_reg_931_pp1_it9[7] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it8[7];
ap_reg_ppstg_tmp_4_reg_931_pp1_it9[8] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it8[8];
ap_reg_ppstg_tmp_4_reg_931_pp1_it9[9] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it8[9];
ap_reg_ppstg_tmp_4_reg_931_pp1_it9[10] <= ap_reg_ppstg_tmp_4_reg_931_pp1_it8[10];
        ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it13 <= tmp_61_i_reg_1016;
        ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it14 <= ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it13;
        ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it15 <= ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it14;
        ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it16 <= ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it15;
        ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it17 <= ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it16;
        ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it18 <= ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it17;
        ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it19 <= ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it18;
        ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it20 <= ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it19;
        ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it21 <= ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it20;
        ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it22 <= ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it21;
        ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it23 <= ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it22;
        ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it24 <= ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it23;
        ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it25 <= ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it24;
        ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it26 <= ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it25;
        ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it27 <= ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it26;
        ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it28 <= ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it27;
        ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it29 <= ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it28;
        ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it13 <= tmp_i_112_reg_1012;
        ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it14 <= ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it13;
        ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it15 <= ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it14;
        ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it16 <= ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it15;
        ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it17 <= ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it16;
        ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it18 <= ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it17;
        ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it19 <= ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it18;
        ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it20 <= ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it19;
        ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it21 <= ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it20;
        ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it22 <= ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it21;
        ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it23 <= ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it22;
        ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it24 <= ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it23;
        ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it25 <= ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it24;
        ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it26 <= ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it25;
        ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it27 <= ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it26;
        ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it28 <= ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it27;
        ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it29 <= ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it28;
        ap_reg_ppstg_tmp_i_reg_1008_pp1_it13 <= tmp_i_reg_1008;
        ap_reg_ppstg_tmp_i_reg_1008_pp1_it14 <= ap_reg_ppstg_tmp_i_reg_1008_pp1_it13;
        ap_reg_ppstg_tmp_i_reg_1008_pp1_it15 <= ap_reg_ppstg_tmp_i_reg_1008_pp1_it14;
        ap_reg_ppstg_tmp_i_reg_1008_pp1_it16 <= ap_reg_ppstg_tmp_i_reg_1008_pp1_it15;
        ap_reg_ppstg_tmp_i_reg_1008_pp1_it17 <= ap_reg_ppstg_tmp_i_reg_1008_pp1_it16;
        ap_reg_ppstg_tmp_i_reg_1008_pp1_it18 <= ap_reg_ppstg_tmp_i_reg_1008_pp1_it17;
        ap_reg_ppstg_tmp_i_reg_1008_pp1_it19 <= ap_reg_ppstg_tmp_i_reg_1008_pp1_it18;
        ap_reg_ppstg_tmp_i_reg_1008_pp1_it20 <= ap_reg_ppstg_tmp_i_reg_1008_pp1_it19;
        ap_reg_ppstg_tmp_i_reg_1008_pp1_it21 <= ap_reg_ppstg_tmp_i_reg_1008_pp1_it20;
        ap_reg_ppstg_tmp_i_reg_1008_pp1_it22 <= ap_reg_ppstg_tmp_i_reg_1008_pp1_it21;
        ap_reg_ppstg_tmp_i_reg_1008_pp1_it23 <= ap_reg_ppstg_tmp_i_reg_1008_pp1_it22;
        ap_reg_ppstg_tmp_i_reg_1008_pp1_it24 <= ap_reg_ppstg_tmp_i_reg_1008_pp1_it23;
        ap_reg_ppstg_tmp_i_reg_1008_pp1_it25 <= ap_reg_ppstg_tmp_i_reg_1008_pp1_it24;
        ap_reg_ppstg_tmp_i_reg_1008_pp1_it26 <= ap_reg_ppstg_tmp_i_reg_1008_pp1_it25;
        ap_reg_ppstg_tmp_i_reg_1008_pp1_it27 <= ap_reg_ppstg_tmp_i_reg_1008_pp1_it26;
        ap_reg_ppstg_tmp_i_reg_1008_pp1_it28 <= ap_reg_ppstg_tmp_i_reg_1008_pp1_it27;
        ap_reg_ppstg_tmp_i_reg_1008_pp1_it29 <= ap_reg_ppstg_tmp_i_reg_1008_pp1_it28;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
        ap_reg_ppstg_exitcond7_reg_850_pp0_it1 <= exitcond7_reg_850;
        ap_reg_ppstg_exitcond7_reg_850_pp0_it10 <= ap_reg_ppstg_exitcond7_reg_850_pp0_it9;
        ap_reg_ppstg_exitcond7_reg_850_pp0_it2 <= ap_reg_ppstg_exitcond7_reg_850_pp0_it1;
        ap_reg_ppstg_exitcond7_reg_850_pp0_it3 <= ap_reg_ppstg_exitcond7_reg_850_pp0_it2;
        ap_reg_ppstg_exitcond7_reg_850_pp0_it4 <= ap_reg_ppstg_exitcond7_reg_850_pp0_it3;
        ap_reg_ppstg_exitcond7_reg_850_pp0_it5 <= ap_reg_ppstg_exitcond7_reg_850_pp0_it4;
        ap_reg_ppstg_exitcond7_reg_850_pp0_it6 <= ap_reg_ppstg_exitcond7_reg_850_pp0_it5;
        ap_reg_ppstg_exitcond7_reg_850_pp0_it7 <= ap_reg_ppstg_exitcond7_reg_850_pp0_it6;
        ap_reg_ppstg_exitcond7_reg_850_pp0_it8 <= ap_reg_ppstg_exitcond7_reg_850_pp0_it7;
        ap_reg_ppstg_exitcond7_reg_850_pp0_it9 <= ap_reg_ppstg_exitcond7_reg_850_pp0_it8;
        ap_reg_ppstg_phaseCumulative_V_addr_1_reg_869_pp0_it1 <= phaseCumulative_V_addr_1_reg_869;
        ap_reg_ppstg_phaseCumulative_V_addr_1_reg_869_pp0_it10 <= ap_reg_ppstg_phaseCumulative_V_addr_1_reg_869_pp0_it9;
        ap_reg_ppstg_phaseCumulative_V_addr_1_reg_869_pp0_it2 <= ap_reg_ppstg_phaseCumulative_V_addr_1_reg_869_pp0_it1;
        ap_reg_ppstg_phaseCumulative_V_addr_1_reg_869_pp0_it3 <= ap_reg_ppstg_phaseCumulative_V_addr_1_reg_869_pp0_it2;
        ap_reg_ppstg_phaseCumulative_V_addr_1_reg_869_pp0_it4 <= ap_reg_ppstg_phaseCumulative_V_addr_1_reg_869_pp0_it3;
        ap_reg_ppstg_phaseCumulative_V_addr_1_reg_869_pp0_it5 <= ap_reg_ppstg_phaseCumulative_V_addr_1_reg_869_pp0_it4;
        ap_reg_ppstg_phaseCumulative_V_addr_1_reg_869_pp0_it6 <= ap_reg_ppstg_phaseCumulative_V_addr_1_reg_869_pp0_it5;
        ap_reg_ppstg_phaseCumulative_V_addr_1_reg_869_pp0_it7 <= ap_reg_ppstg_phaseCumulative_V_addr_1_reg_869_pp0_it6;
        ap_reg_ppstg_phaseCumulative_V_addr_1_reg_869_pp0_it8 <= ap_reg_ppstg_phaseCumulative_V_addr_1_reg_869_pp0_it7;
        ap_reg_ppstg_phaseCumulative_V_addr_1_reg_869_pp0_it9 <= ap_reg_ppstg_phaseCumulative_V_addr_1_reg_869_pp0_it8;
        ap_reg_ppstg_t_V_reg_875_pp0_it10[6] <= ap_reg_ppstg_t_V_reg_875_pp0_it9[6];
ap_reg_ppstg_t_V_reg_875_pp0_it10[7] <= ap_reg_ppstg_t_V_reg_875_pp0_it9[7];
ap_reg_ppstg_t_V_reg_875_pp0_it10[8] <= ap_reg_ppstg_t_V_reg_875_pp0_it9[8];
ap_reg_ppstg_t_V_reg_875_pp0_it10[9] <= ap_reg_ppstg_t_V_reg_875_pp0_it9[9];
ap_reg_ppstg_t_V_reg_875_pp0_it10[10] <= ap_reg_ppstg_t_V_reg_875_pp0_it9[10];
ap_reg_ppstg_t_V_reg_875_pp0_it10[11] <= ap_reg_ppstg_t_V_reg_875_pp0_it9[11];
ap_reg_ppstg_t_V_reg_875_pp0_it10[12] <= ap_reg_ppstg_t_V_reg_875_pp0_it9[12];
ap_reg_ppstg_t_V_reg_875_pp0_it10[13] <= ap_reg_ppstg_t_V_reg_875_pp0_it9[13];
ap_reg_ppstg_t_V_reg_875_pp0_it10[14] <= ap_reg_ppstg_t_V_reg_875_pp0_it9[14];
ap_reg_ppstg_t_V_reg_875_pp0_it10[15] <= ap_reg_ppstg_t_V_reg_875_pp0_it9[15];
ap_reg_ppstg_t_V_reg_875_pp0_it10[16] <= ap_reg_ppstg_t_V_reg_875_pp0_it9[16];
ap_reg_ppstg_t_V_reg_875_pp0_it10[17] <= ap_reg_ppstg_t_V_reg_875_pp0_it9[17];
ap_reg_ppstg_t_V_reg_875_pp0_it10[18] <= ap_reg_ppstg_t_V_reg_875_pp0_it9[18];
ap_reg_ppstg_t_V_reg_875_pp0_it10[19] <= ap_reg_ppstg_t_V_reg_875_pp0_it9[19];
ap_reg_ppstg_t_V_reg_875_pp0_it10[20] <= ap_reg_ppstg_t_V_reg_875_pp0_it9[20];
ap_reg_ppstg_t_V_reg_875_pp0_it10[21] <= ap_reg_ppstg_t_V_reg_875_pp0_it9[21];
ap_reg_ppstg_t_V_reg_875_pp0_it10[22] <= ap_reg_ppstg_t_V_reg_875_pp0_it9[22];
ap_reg_ppstg_t_V_reg_875_pp0_it10[23] <= ap_reg_ppstg_t_V_reg_875_pp0_it9[23];
ap_reg_ppstg_t_V_reg_875_pp0_it10[24] <= ap_reg_ppstg_t_V_reg_875_pp0_it9[24];
ap_reg_ppstg_t_V_reg_875_pp0_it10[25] <= ap_reg_ppstg_t_V_reg_875_pp0_it9[25];
ap_reg_ppstg_t_V_reg_875_pp0_it10[26] <= ap_reg_ppstg_t_V_reg_875_pp0_it9[26];
ap_reg_ppstg_t_V_reg_875_pp0_it10[27] <= ap_reg_ppstg_t_V_reg_875_pp0_it9[27];
ap_reg_ppstg_t_V_reg_875_pp0_it10[28] <= ap_reg_ppstg_t_V_reg_875_pp0_it9[28];
ap_reg_ppstg_t_V_reg_875_pp0_it10[29] <= ap_reg_ppstg_t_V_reg_875_pp0_it9[29];
ap_reg_ppstg_t_V_reg_875_pp0_it10[30] <= ap_reg_ppstg_t_V_reg_875_pp0_it9[30];
ap_reg_ppstg_t_V_reg_875_pp0_it10[31] <= ap_reg_ppstg_t_V_reg_875_pp0_it9[31];
ap_reg_ppstg_t_V_reg_875_pp0_it10[32] <= ap_reg_ppstg_t_V_reg_875_pp0_it9[32];
ap_reg_ppstg_t_V_reg_875_pp0_it10[33] <= ap_reg_ppstg_t_V_reg_875_pp0_it9[33];
ap_reg_ppstg_t_V_reg_875_pp0_it10[34] <= ap_reg_ppstg_t_V_reg_875_pp0_it9[34];
ap_reg_ppstg_t_V_reg_875_pp0_it10[35] <= ap_reg_ppstg_t_V_reg_875_pp0_it9[35];
ap_reg_ppstg_t_V_reg_875_pp0_it10[36] <= ap_reg_ppstg_t_V_reg_875_pp0_it9[36];
ap_reg_ppstg_t_V_reg_875_pp0_it10[37] <= ap_reg_ppstg_t_V_reg_875_pp0_it9[37];
        ap_reg_ppstg_t_V_reg_875_pp0_it2[6] <= t_V_reg_875[6];
ap_reg_ppstg_t_V_reg_875_pp0_it2[7] <= t_V_reg_875[7];
ap_reg_ppstg_t_V_reg_875_pp0_it2[8] <= t_V_reg_875[8];
ap_reg_ppstg_t_V_reg_875_pp0_it2[9] <= t_V_reg_875[9];
ap_reg_ppstg_t_V_reg_875_pp0_it2[10] <= t_V_reg_875[10];
ap_reg_ppstg_t_V_reg_875_pp0_it2[11] <= t_V_reg_875[11];
ap_reg_ppstg_t_V_reg_875_pp0_it2[12] <= t_V_reg_875[12];
ap_reg_ppstg_t_V_reg_875_pp0_it2[13] <= t_V_reg_875[13];
ap_reg_ppstg_t_V_reg_875_pp0_it2[14] <= t_V_reg_875[14];
ap_reg_ppstg_t_V_reg_875_pp0_it2[15] <= t_V_reg_875[15];
ap_reg_ppstg_t_V_reg_875_pp0_it2[16] <= t_V_reg_875[16];
ap_reg_ppstg_t_V_reg_875_pp0_it2[17] <= t_V_reg_875[17];
ap_reg_ppstg_t_V_reg_875_pp0_it2[18] <= t_V_reg_875[18];
ap_reg_ppstg_t_V_reg_875_pp0_it2[19] <= t_V_reg_875[19];
ap_reg_ppstg_t_V_reg_875_pp0_it2[20] <= t_V_reg_875[20];
ap_reg_ppstg_t_V_reg_875_pp0_it2[21] <= t_V_reg_875[21];
ap_reg_ppstg_t_V_reg_875_pp0_it2[22] <= t_V_reg_875[22];
ap_reg_ppstg_t_V_reg_875_pp0_it2[23] <= t_V_reg_875[23];
ap_reg_ppstg_t_V_reg_875_pp0_it2[24] <= t_V_reg_875[24];
ap_reg_ppstg_t_V_reg_875_pp0_it2[25] <= t_V_reg_875[25];
ap_reg_ppstg_t_V_reg_875_pp0_it2[26] <= t_V_reg_875[26];
ap_reg_ppstg_t_V_reg_875_pp0_it2[27] <= t_V_reg_875[27];
ap_reg_ppstg_t_V_reg_875_pp0_it2[28] <= t_V_reg_875[28];
ap_reg_ppstg_t_V_reg_875_pp0_it2[29] <= t_V_reg_875[29];
ap_reg_ppstg_t_V_reg_875_pp0_it2[30] <= t_V_reg_875[30];
ap_reg_ppstg_t_V_reg_875_pp0_it2[31] <= t_V_reg_875[31];
ap_reg_ppstg_t_V_reg_875_pp0_it2[32] <= t_V_reg_875[32];
ap_reg_ppstg_t_V_reg_875_pp0_it2[33] <= t_V_reg_875[33];
ap_reg_ppstg_t_V_reg_875_pp0_it2[34] <= t_V_reg_875[34];
ap_reg_ppstg_t_V_reg_875_pp0_it2[35] <= t_V_reg_875[35];
ap_reg_ppstg_t_V_reg_875_pp0_it2[36] <= t_V_reg_875[36];
ap_reg_ppstg_t_V_reg_875_pp0_it2[37] <= t_V_reg_875[37];
        ap_reg_ppstg_t_V_reg_875_pp0_it3[6] <= ap_reg_ppstg_t_V_reg_875_pp0_it2[6];
ap_reg_ppstg_t_V_reg_875_pp0_it3[7] <= ap_reg_ppstg_t_V_reg_875_pp0_it2[7];
ap_reg_ppstg_t_V_reg_875_pp0_it3[8] <= ap_reg_ppstg_t_V_reg_875_pp0_it2[8];
ap_reg_ppstg_t_V_reg_875_pp0_it3[9] <= ap_reg_ppstg_t_V_reg_875_pp0_it2[9];
ap_reg_ppstg_t_V_reg_875_pp0_it3[10] <= ap_reg_ppstg_t_V_reg_875_pp0_it2[10];
ap_reg_ppstg_t_V_reg_875_pp0_it3[11] <= ap_reg_ppstg_t_V_reg_875_pp0_it2[11];
ap_reg_ppstg_t_V_reg_875_pp0_it3[12] <= ap_reg_ppstg_t_V_reg_875_pp0_it2[12];
ap_reg_ppstg_t_V_reg_875_pp0_it3[13] <= ap_reg_ppstg_t_V_reg_875_pp0_it2[13];
ap_reg_ppstg_t_V_reg_875_pp0_it3[14] <= ap_reg_ppstg_t_V_reg_875_pp0_it2[14];
ap_reg_ppstg_t_V_reg_875_pp0_it3[15] <= ap_reg_ppstg_t_V_reg_875_pp0_it2[15];
ap_reg_ppstg_t_V_reg_875_pp0_it3[16] <= ap_reg_ppstg_t_V_reg_875_pp0_it2[16];
ap_reg_ppstg_t_V_reg_875_pp0_it3[17] <= ap_reg_ppstg_t_V_reg_875_pp0_it2[17];
ap_reg_ppstg_t_V_reg_875_pp0_it3[18] <= ap_reg_ppstg_t_V_reg_875_pp0_it2[18];
ap_reg_ppstg_t_V_reg_875_pp0_it3[19] <= ap_reg_ppstg_t_V_reg_875_pp0_it2[19];
ap_reg_ppstg_t_V_reg_875_pp0_it3[20] <= ap_reg_ppstg_t_V_reg_875_pp0_it2[20];
ap_reg_ppstg_t_V_reg_875_pp0_it3[21] <= ap_reg_ppstg_t_V_reg_875_pp0_it2[21];
ap_reg_ppstg_t_V_reg_875_pp0_it3[22] <= ap_reg_ppstg_t_V_reg_875_pp0_it2[22];
ap_reg_ppstg_t_V_reg_875_pp0_it3[23] <= ap_reg_ppstg_t_V_reg_875_pp0_it2[23];
ap_reg_ppstg_t_V_reg_875_pp0_it3[24] <= ap_reg_ppstg_t_V_reg_875_pp0_it2[24];
ap_reg_ppstg_t_V_reg_875_pp0_it3[25] <= ap_reg_ppstg_t_V_reg_875_pp0_it2[25];
ap_reg_ppstg_t_V_reg_875_pp0_it3[26] <= ap_reg_ppstg_t_V_reg_875_pp0_it2[26];
ap_reg_ppstg_t_V_reg_875_pp0_it3[27] <= ap_reg_ppstg_t_V_reg_875_pp0_it2[27];
ap_reg_ppstg_t_V_reg_875_pp0_it3[28] <= ap_reg_ppstg_t_V_reg_875_pp0_it2[28];
ap_reg_ppstg_t_V_reg_875_pp0_it3[29] <= ap_reg_ppstg_t_V_reg_875_pp0_it2[29];
ap_reg_ppstg_t_V_reg_875_pp0_it3[30] <= ap_reg_ppstg_t_V_reg_875_pp0_it2[30];
ap_reg_ppstg_t_V_reg_875_pp0_it3[31] <= ap_reg_ppstg_t_V_reg_875_pp0_it2[31];
ap_reg_ppstg_t_V_reg_875_pp0_it3[32] <= ap_reg_ppstg_t_V_reg_875_pp0_it2[32];
ap_reg_ppstg_t_V_reg_875_pp0_it3[33] <= ap_reg_ppstg_t_V_reg_875_pp0_it2[33];
ap_reg_ppstg_t_V_reg_875_pp0_it3[34] <= ap_reg_ppstg_t_V_reg_875_pp0_it2[34];
ap_reg_ppstg_t_V_reg_875_pp0_it3[35] <= ap_reg_ppstg_t_V_reg_875_pp0_it2[35];
ap_reg_ppstg_t_V_reg_875_pp0_it3[36] <= ap_reg_ppstg_t_V_reg_875_pp0_it2[36];
ap_reg_ppstg_t_V_reg_875_pp0_it3[37] <= ap_reg_ppstg_t_V_reg_875_pp0_it2[37];
        ap_reg_ppstg_t_V_reg_875_pp0_it4[6] <= ap_reg_ppstg_t_V_reg_875_pp0_it3[6];
ap_reg_ppstg_t_V_reg_875_pp0_it4[7] <= ap_reg_ppstg_t_V_reg_875_pp0_it3[7];
ap_reg_ppstg_t_V_reg_875_pp0_it4[8] <= ap_reg_ppstg_t_V_reg_875_pp0_it3[8];
ap_reg_ppstg_t_V_reg_875_pp0_it4[9] <= ap_reg_ppstg_t_V_reg_875_pp0_it3[9];
ap_reg_ppstg_t_V_reg_875_pp0_it4[10] <= ap_reg_ppstg_t_V_reg_875_pp0_it3[10];
ap_reg_ppstg_t_V_reg_875_pp0_it4[11] <= ap_reg_ppstg_t_V_reg_875_pp0_it3[11];
ap_reg_ppstg_t_V_reg_875_pp0_it4[12] <= ap_reg_ppstg_t_V_reg_875_pp0_it3[12];
ap_reg_ppstg_t_V_reg_875_pp0_it4[13] <= ap_reg_ppstg_t_V_reg_875_pp0_it3[13];
ap_reg_ppstg_t_V_reg_875_pp0_it4[14] <= ap_reg_ppstg_t_V_reg_875_pp0_it3[14];
ap_reg_ppstg_t_V_reg_875_pp0_it4[15] <= ap_reg_ppstg_t_V_reg_875_pp0_it3[15];
ap_reg_ppstg_t_V_reg_875_pp0_it4[16] <= ap_reg_ppstg_t_V_reg_875_pp0_it3[16];
ap_reg_ppstg_t_V_reg_875_pp0_it4[17] <= ap_reg_ppstg_t_V_reg_875_pp0_it3[17];
ap_reg_ppstg_t_V_reg_875_pp0_it4[18] <= ap_reg_ppstg_t_V_reg_875_pp0_it3[18];
ap_reg_ppstg_t_V_reg_875_pp0_it4[19] <= ap_reg_ppstg_t_V_reg_875_pp0_it3[19];
ap_reg_ppstg_t_V_reg_875_pp0_it4[20] <= ap_reg_ppstg_t_V_reg_875_pp0_it3[20];
ap_reg_ppstg_t_V_reg_875_pp0_it4[21] <= ap_reg_ppstg_t_V_reg_875_pp0_it3[21];
ap_reg_ppstg_t_V_reg_875_pp0_it4[22] <= ap_reg_ppstg_t_V_reg_875_pp0_it3[22];
ap_reg_ppstg_t_V_reg_875_pp0_it4[23] <= ap_reg_ppstg_t_V_reg_875_pp0_it3[23];
ap_reg_ppstg_t_V_reg_875_pp0_it4[24] <= ap_reg_ppstg_t_V_reg_875_pp0_it3[24];
ap_reg_ppstg_t_V_reg_875_pp0_it4[25] <= ap_reg_ppstg_t_V_reg_875_pp0_it3[25];
ap_reg_ppstg_t_V_reg_875_pp0_it4[26] <= ap_reg_ppstg_t_V_reg_875_pp0_it3[26];
ap_reg_ppstg_t_V_reg_875_pp0_it4[27] <= ap_reg_ppstg_t_V_reg_875_pp0_it3[27];
ap_reg_ppstg_t_V_reg_875_pp0_it4[28] <= ap_reg_ppstg_t_V_reg_875_pp0_it3[28];
ap_reg_ppstg_t_V_reg_875_pp0_it4[29] <= ap_reg_ppstg_t_V_reg_875_pp0_it3[29];
ap_reg_ppstg_t_V_reg_875_pp0_it4[30] <= ap_reg_ppstg_t_V_reg_875_pp0_it3[30];
ap_reg_ppstg_t_V_reg_875_pp0_it4[31] <= ap_reg_ppstg_t_V_reg_875_pp0_it3[31];
ap_reg_ppstg_t_V_reg_875_pp0_it4[32] <= ap_reg_ppstg_t_V_reg_875_pp0_it3[32];
ap_reg_ppstg_t_V_reg_875_pp0_it4[33] <= ap_reg_ppstg_t_V_reg_875_pp0_it3[33];
ap_reg_ppstg_t_V_reg_875_pp0_it4[34] <= ap_reg_ppstg_t_V_reg_875_pp0_it3[34];
ap_reg_ppstg_t_V_reg_875_pp0_it4[35] <= ap_reg_ppstg_t_V_reg_875_pp0_it3[35];
ap_reg_ppstg_t_V_reg_875_pp0_it4[36] <= ap_reg_ppstg_t_V_reg_875_pp0_it3[36];
ap_reg_ppstg_t_V_reg_875_pp0_it4[37] <= ap_reg_ppstg_t_V_reg_875_pp0_it3[37];
        ap_reg_ppstg_t_V_reg_875_pp0_it5[6] <= ap_reg_ppstg_t_V_reg_875_pp0_it4[6];
ap_reg_ppstg_t_V_reg_875_pp0_it5[7] <= ap_reg_ppstg_t_V_reg_875_pp0_it4[7];
ap_reg_ppstg_t_V_reg_875_pp0_it5[8] <= ap_reg_ppstg_t_V_reg_875_pp0_it4[8];
ap_reg_ppstg_t_V_reg_875_pp0_it5[9] <= ap_reg_ppstg_t_V_reg_875_pp0_it4[9];
ap_reg_ppstg_t_V_reg_875_pp0_it5[10] <= ap_reg_ppstg_t_V_reg_875_pp0_it4[10];
ap_reg_ppstg_t_V_reg_875_pp0_it5[11] <= ap_reg_ppstg_t_V_reg_875_pp0_it4[11];
ap_reg_ppstg_t_V_reg_875_pp0_it5[12] <= ap_reg_ppstg_t_V_reg_875_pp0_it4[12];
ap_reg_ppstg_t_V_reg_875_pp0_it5[13] <= ap_reg_ppstg_t_V_reg_875_pp0_it4[13];
ap_reg_ppstg_t_V_reg_875_pp0_it5[14] <= ap_reg_ppstg_t_V_reg_875_pp0_it4[14];
ap_reg_ppstg_t_V_reg_875_pp0_it5[15] <= ap_reg_ppstg_t_V_reg_875_pp0_it4[15];
ap_reg_ppstg_t_V_reg_875_pp0_it5[16] <= ap_reg_ppstg_t_V_reg_875_pp0_it4[16];
ap_reg_ppstg_t_V_reg_875_pp0_it5[17] <= ap_reg_ppstg_t_V_reg_875_pp0_it4[17];
ap_reg_ppstg_t_V_reg_875_pp0_it5[18] <= ap_reg_ppstg_t_V_reg_875_pp0_it4[18];
ap_reg_ppstg_t_V_reg_875_pp0_it5[19] <= ap_reg_ppstg_t_V_reg_875_pp0_it4[19];
ap_reg_ppstg_t_V_reg_875_pp0_it5[20] <= ap_reg_ppstg_t_V_reg_875_pp0_it4[20];
ap_reg_ppstg_t_V_reg_875_pp0_it5[21] <= ap_reg_ppstg_t_V_reg_875_pp0_it4[21];
ap_reg_ppstg_t_V_reg_875_pp0_it5[22] <= ap_reg_ppstg_t_V_reg_875_pp0_it4[22];
ap_reg_ppstg_t_V_reg_875_pp0_it5[23] <= ap_reg_ppstg_t_V_reg_875_pp0_it4[23];
ap_reg_ppstg_t_V_reg_875_pp0_it5[24] <= ap_reg_ppstg_t_V_reg_875_pp0_it4[24];
ap_reg_ppstg_t_V_reg_875_pp0_it5[25] <= ap_reg_ppstg_t_V_reg_875_pp0_it4[25];
ap_reg_ppstg_t_V_reg_875_pp0_it5[26] <= ap_reg_ppstg_t_V_reg_875_pp0_it4[26];
ap_reg_ppstg_t_V_reg_875_pp0_it5[27] <= ap_reg_ppstg_t_V_reg_875_pp0_it4[27];
ap_reg_ppstg_t_V_reg_875_pp0_it5[28] <= ap_reg_ppstg_t_V_reg_875_pp0_it4[28];
ap_reg_ppstg_t_V_reg_875_pp0_it5[29] <= ap_reg_ppstg_t_V_reg_875_pp0_it4[29];
ap_reg_ppstg_t_V_reg_875_pp0_it5[30] <= ap_reg_ppstg_t_V_reg_875_pp0_it4[30];
ap_reg_ppstg_t_V_reg_875_pp0_it5[31] <= ap_reg_ppstg_t_V_reg_875_pp0_it4[31];
ap_reg_ppstg_t_V_reg_875_pp0_it5[32] <= ap_reg_ppstg_t_V_reg_875_pp0_it4[32];
ap_reg_ppstg_t_V_reg_875_pp0_it5[33] <= ap_reg_ppstg_t_V_reg_875_pp0_it4[33];
ap_reg_ppstg_t_V_reg_875_pp0_it5[34] <= ap_reg_ppstg_t_V_reg_875_pp0_it4[34];
ap_reg_ppstg_t_V_reg_875_pp0_it5[35] <= ap_reg_ppstg_t_V_reg_875_pp0_it4[35];
ap_reg_ppstg_t_V_reg_875_pp0_it5[36] <= ap_reg_ppstg_t_V_reg_875_pp0_it4[36];
ap_reg_ppstg_t_V_reg_875_pp0_it5[37] <= ap_reg_ppstg_t_V_reg_875_pp0_it4[37];
        ap_reg_ppstg_t_V_reg_875_pp0_it6[6] <= ap_reg_ppstg_t_V_reg_875_pp0_it5[6];
ap_reg_ppstg_t_V_reg_875_pp0_it6[7] <= ap_reg_ppstg_t_V_reg_875_pp0_it5[7];
ap_reg_ppstg_t_V_reg_875_pp0_it6[8] <= ap_reg_ppstg_t_V_reg_875_pp0_it5[8];
ap_reg_ppstg_t_V_reg_875_pp0_it6[9] <= ap_reg_ppstg_t_V_reg_875_pp0_it5[9];
ap_reg_ppstg_t_V_reg_875_pp0_it6[10] <= ap_reg_ppstg_t_V_reg_875_pp0_it5[10];
ap_reg_ppstg_t_V_reg_875_pp0_it6[11] <= ap_reg_ppstg_t_V_reg_875_pp0_it5[11];
ap_reg_ppstg_t_V_reg_875_pp0_it6[12] <= ap_reg_ppstg_t_V_reg_875_pp0_it5[12];
ap_reg_ppstg_t_V_reg_875_pp0_it6[13] <= ap_reg_ppstg_t_V_reg_875_pp0_it5[13];
ap_reg_ppstg_t_V_reg_875_pp0_it6[14] <= ap_reg_ppstg_t_V_reg_875_pp0_it5[14];
ap_reg_ppstg_t_V_reg_875_pp0_it6[15] <= ap_reg_ppstg_t_V_reg_875_pp0_it5[15];
ap_reg_ppstg_t_V_reg_875_pp0_it6[16] <= ap_reg_ppstg_t_V_reg_875_pp0_it5[16];
ap_reg_ppstg_t_V_reg_875_pp0_it6[17] <= ap_reg_ppstg_t_V_reg_875_pp0_it5[17];
ap_reg_ppstg_t_V_reg_875_pp0_it6[18] <= ap_reg_ppstg_t_V_reg_875_pp0_it5[18];
ap_reg_ppstg_t_V_reg_875_pp0_it6[19] <= ap_reg_ppstg_t_V_reg_875_pp0_it5[19];
ap_reg_ppstg_t_V_reg_875_pp0_it6[20] <= ap_reg_ppstg_t_V_reg_875_pp0_it5[20];
ap_reg_ppstg_t_V_reg_875_pp0_it6[21] <= ap_reg_ppstg_t_V_reg_875_pp0_it5[21];
ap_reg_ppstg_t_V_reg_875_pp0_it6[22] <= ap_reg_ppstg_t_V_reg_875_pp0_it5[22];
ap_reg_ppstg_t_V_reg_875_pp0_it6[23] <= ap_reg_ppstg_t_V_reg_875_pp0_it5[23];
ap_reg_ppstg_t_V_reg_875_pp0_it6[24] <= ap_reg_ppstg_t_V_reg_875_pp0_it5[24];
ap_reg_ppstg_t_V_reg_875_pp0_it6[25] <= ap_reg_ppstg_t_V_reg_875_pp0_it5[25];
ap_reg_ppstg_t_V_reg_875_pp0_it6[26] <= ap_reg_ppstg_t_V_reg_875_pp0_it5[26];
ap_reg_ppstg_t_V_reg_875_pp0_it6[27] <= ap_reg_ppstg_t_V_reg_875_pp0_it5[27];
ap_reg_ppstg_t_V_reg_875_pp0_it6[28] <= ap_reg_ppstg_t_V_reg_875_pp0_it5[28];
ap_reg_ppstg_t_V_reg_875_pp0_it6[29] <= ap_reg_ppstg_t_V_reg_875_pp0_it5[29];
ap_reg_ppstg_t_V_reg_875_pp0_it6[30] <= ap_reg_ppstg_t_V_reg_875_pp0_it5[30];
ap_reg_ppstg_t_V_reg_875_pp0_it6[31] <= ap_reg_ppstg_t_V_reg_875_pp0_it5[31];
ap_reg_ppstg_t_V_reg_875_pp0_it6[32] <= ap_reg_ppstg_t_V_reg_875_pp0_it5[32];
ap_reg_ppstg_t_V_reg_875_pp0_it6[33] <= ap_reg_ppstg_t_V_reg_875_pp0_it5[33];
ap_reg_ppstg_t_V_reg_875_pp0_it6[34] <= ap_reg_ppstg_t_V_reg_875_pp0_it5[34];
ap_reg_ppstg_t_V_reg_875_pp0_it6[35] <= ap_reg_ppstg_t_V_reg_875_pp0_it5[35];
ap_reg_ppstg_t_V_reg_875_pp0_it6[36] <= ap_reg_ppstg_t_V_reg_875_pp0_it5[36];
ap_reg_ppstg_t_V_reg_875_pp0_it6[37] <= ap_reg_ppstg_t_V_reg_875_pp0_it5[37];
        ap_reg_ppstg_t_V_reg_875_pp0_it7[6] <= ap_reg_ppstg_t_V_reg_875_pp0_it6[6];
ap_reg_ppstg_t_V_reg_875_pp0_it7[7] <= ap_reg_ppstg_t_V_reg_875_pp0_it6[7];
ap_reg_ppstg_t_V_reg_875_pp0_it7[8] <= ap_reg_ppstg_t_V_reg_875_pp0_it6[8];
ap_reg_ppstg_t_V_reg_875_pp0_it7[9] <= ap_reg_ppstg_t_V_reg_875_pp0_it6[9];
ap_reg_ppstg_t_V_reg_875_pp0_it7[10] <= ap_reg_ppstg_t_V_reg_875_pp0_it6[10];
ap_reg_ppstg_t_V_reg_875_pp0_it7[11] <= ap_reg_ppstg_t_V_reg_875_pp0_it6[11];
ap_reg_ppstg_t_V_reg_875_pp0_it7[12] <= ap_reg_ppstg_t_V_reg_875_pp0_it6[12];
ap_reg_ppstg_t_V_reg_875_pp0_it7[13] <= ap_reg_ppstg_t_V_reg_875_pp0_it6[13];
ap_reg_ppstg_t_V_reg_875_pp0_it7[14] <= ap_reg_ppstg_t_V_reg_875_pp0_it6[14];
ap_reg_ppstg_t_V_reg_875_pp0_it7[15] <= ap_reg_ppstg_t_V_reg_875_pp0_it6[15];
ap_reg_ppstg_t_V_reg_875_pp0_it7[16] <= ap_reg_ppstg_t_V_reg_875_pp0_it6[16];
ap_reg_ppstg_t_V_reg_875_pp0_it7[17] <= ap_reg_ppstg_t_V_reg_875_pp0_it6[17];
ap_reg_ppstg_t_V_reg_875_pp0_it7[18] <= ap_reg_ppstg_t_V_reg_875_pp0_it6[18];
ap_reg_ppstg_t_V_reg_875_pp0_it7[19] <= ap_reg_ppstg_t_V_reg_875_pp0_it6[19];
ap_reg_ppstg_t_V_reg_875_pp0_it7[20] <= ap_reg_ppstg_t_V_reg_875_pp0_it6[20];
ap_reg_ppstg_t_V_reg_875_pp0_it7[21] <= ap_reg_ppstg_t_V_reg_875_pp0_it6[21];
ap_reg_ppstg_t_V_reg_875_pp0_it7[22] <= ap_reg_ppstg_t_V_reg_875_pp0_it6[22];
ap_reg_ppstg_t_V_reg_875_pp0_it7[23] <= ap_reg_ppstg_t_V_reg_875_pp0_it6[23];
ap_reg_ppstg_t_V_reg_875_pp0_it7[24] <= ap_reg_ppstg_t_V_reg_875_pp0_it6[24];
ap_reg_ppstg_t_V_reg_875_pp0_it7[25] <= ap_reg_ppstg_t_V_reg_875_pp0_it6[25];
ap_reg_ppstg_t_V_reg_875_pp0_it7[26] <= ap_reg_ppstg_t_V_reg_875_pp0_it6[26];
ap_reg_ppstg_t_V_reg_875_pp0_it7[27] <= ap_reg_ppstg_t_V_reg_875_pp0_it6[27];
ap_reg_ppstg_t_V_reg_875_pp0_it7[28] <= ap_reg_ppstg_t_V_reg_875_pp0_it6[28];
ap_reg_ppstg_t_V_reg_875_pp0_it7[29] <= ap_reg_ppstg_t_V_reg_875_pp0_it6[29];
ap_reg_ppstg_t_V_reg_875_pp0_it7[30] <= ap_reg_ppstg_t_V_reg_875_pp0_it6[30];
ap_reg_ppstg_t_V_reg_875_pp0_it7[31] <= ap_reg_ppstg_t_V_reg_875_pp0_it6[31];
ap_reg_ppstg_t_V_reg_875_pp0_it7[32] <= ap_reg_ppstg_t_V_reg_875_pp0_it6[32];
ap_reg_ppstg_t_V_reg_875_pp0_it7[33] <= ap_reg_ppstg_t_V_reg_875_pp0_it6[33];
ap_reg_ppstg_t_V_reg_875_pp0_it7[34] <= ap_reg_ppstg_t_V_reg_875_pp0_it6[34];
ap_reg_ppstg_t_V_reg_875_pp0_it7[35] <= ap_reg_ppstg_t_V_reg_875_pp0_it6[35];
ap_reg_ppstg_t_V_reg_875_pp0_it7[36] <= ap_reg_ppstg_t_V_reg_875_pp0_it6[36];
ap_reg_ppstg_t_V_reg_875_pp0_it7[37] <= ap_reg_ppstg_t_V_reg_875_pp0_it6[37];
        ap_reg_ppstg_t_V_reg_875_pp0_it8[6] <= ap_reg_ppstg_t_V_reg_875_pp0_it7[6];
ap_reg_ppstg_t_V_reg_875_pp0_it8[7] <= ap_reg_ppstg_t_V_reg_875_pp0_it7[7];
ap_reg_ppstg_t_V_reg_875_pp0_it8[8] <= ap_reg_ppstg_t_V_reg_875_pp0_it7[8];
ap_reg_ppstg_t_V_reg_875_pp0_it8[9] <= ap_reg_ppstg_t_V_reg_875_pp0_it7[9];
ap_reg_ppstg_t_V_reg_875_pp0_it8[10] <= ap_reg_ppstg_t_V_reg_875_pp0_it7[10];
ap_reg_ppstg_t_V_reg_875_pp0_it8[11] <= ap_reg_ppstg_t_V_reg_875_pp0_it7[11];
ap_reg_ppstg_t_V_reg_875_pp0_it8[12] <= ap_reg_ppstg_t_V_reg_875_pp0_it7[12];
ap_reg_ppstg_t_V_reg_875_pp0_it8[13] <= ap_reg_ppstg_t_V_reg_875_pp0_it7[13];
ap_reg_ppstg_t_V_reg_875_pp0_it8[14] <= ap_reg_ppstg_t_V_reg_875_pp0_it7[14];
ap_reg_ppstg_t_V_reg_875_pp0_it8[15] <= ap_reg_ppstg_t_V_reg_875_pp0_it7[15];
ap_reg_ppstg_t_V_reg_875_pp0_it8[16] <= ap_reg_ppstg_t_V_reg_875_pp0_it7[16];
ap_reg_ppstg_t_V_reg_875_pp0_it8[17] <= ap_reg_ppstg_t_V_reg_875_pp0_it7[17];
ap_reg_ppstg_t_V_reg_875_pp0_it8[18] <= ap_reg_ppstg_t_V_reg_875_pp0_it7[18];
ap_reg_ppstg_t_V_reg_875_pp0_it8[19] <= ap_reg_ppstg_t_V_reg_875_pp0_it7[19];
ap_reg_ppstg_t_V_reg_875_pp0_it8[20] <= ap_reg_ppstg_t_V_reg_875_pp0_it7[20];
ap_reg_ppstg_t_V_reg_875_pp0_it8[21] <= ap_reg_ppstg_t_V_reg_875_pp0_it7[21];
ap_reg_ppstg_t_V_reg_875_pp0_it8[22] <= ap_reg_ppstg_t_V_reg_875_pp0_it7[22];
ap_reg_ppstg_t_V_reg_875_pp0_it8[23] <= ap_reg_ppstg_t_V_reg_875_pp0_it7[23];
ap_reg_ppstg_t_V_reg_875_pp0_it8[24] <= ap_reg_ppstg_t_V_reg_875_pp0_it7[24];
ap_reg_ppstg_t_V_reg_875_pp0_it8[25] <= ap_reg_ppstg_t_V_reg_875_pp0_it7[25];
ap_reg_ppstg_t_V_reg_875_pp0_it8[26] <= ap_reg_ppstg_t_V_reg_875_pp0_it7[26];
ap_reg_ppstg_t_V_reg_875_pp0_it8[27] <= ap_reg_ppstg_t_V_reg_875_pp0_it7[27];
ap_reg_ppstg_t_V_reg_875_pp0_it8[28] <= ap_reg_ppstg_t_V_reg_875_pp0_it7[28];
ap_reg_ppstg_t_V_reg_875_pp0_it8[29] <= ap_reg_ppstg_t_V_reg_875_pp0_it7[29];
ap_reg_ppstg_t_V_reg_875_pp0_it8[30] <= ap_reg_ppstg_t_V_reg_875_pp0_it7[30];
ap_reg_ppstg_t_V_reg_875_pp0_it8[31] <= ap_reg_ppstg_t_V_reg_875_pp0_it7[31];
ap_reg_ppstg_t_V_reg_875_pp0_it8[32] <= ap_reg_ppstg_t_V_reg_875_pp0_it7[32];
ap_reg_ppstg_t_V_reg_875_pp0_it8[33] <= ap_reg_ppstg_t_V_reg_875_pp0_it7[33];
ap_reg_ppstg_t_V_reg_875_pp0_it8[34] <= ap_reg_ppstg_t_V_reg_875_pp0_it7[34];
ap_reg_ppstg_t_V_reg_875_pp0_it8[35] <= ap_reg_ppstg_t_V_reg_875_pp0_it7[35];
ap_reg_ppstg_t_V_reg_875_pp0_it8[36] <= ap_reg_ppstg_t_V_reg_875_pp0_it7[36];
ap_reg_ppstg_t_V_reg_875_pp0_it8[37] <= ap_reg_ppstg_t_V_reg_875_pp0_it7[37];
        ap_reg_ppstg_t_V_reg_875_pp0_it9[6] <= ap_reg_ppstg_t_V_reg_875_pp0_it8[6];
ap_reg_ppstg_t_V_reg_875_pp0_it9[7] <= ap_reg_ppstg_t_V_reg_875_pp0_it8[7];
ap_reg_ppstg_t_V_reg_875_pp0_it9[8] <= ap_reg_ppstg_t_V_reg_875_pp0_it8[8];
ap_reg_ppstg_t_V_reg_875_pp0_it9[9] <= ap_reg_ppstg_t_V_reg_875_pp0_it8[9];
ap_reg_ppstg_t_V_reg_875_pp0_it9[10] <= ap_reg_ppstg_t_V_reg_875_pp0_it8[10];
ap_reg_ppstg_t_V_reg_875_pp0_it9[11] <= ap_reg_ppstg_t_V_reg_875_pp0_it8[11];
ap_reg_ppstg_t_V_reg_875_pp0_it9[12] <= ap_reg_ppstg_t_V_reg_875_pp0_it8[12];
ap_reg_ppstg_t_V_reg_875_pp0_it9[13] <= ap_reg_ppstg_t_V_reg_875_pp0_it8[13];
ap_reg_ppstg_t_V_reg_875_pp0_it9[14] <= ap_reg_ppstg_t_V_reg_875_pp0_it8[14];
ap_reg_ppstg_t_V_reg_875_pp0_it9[15] <= ap_reg_ppstg_t_V_reg_875_pp0_it8[15];
ap_reg_ppstg_t_V_reg_875_pp0_it9[16] <= ap_reg_ppstg_t_V_reg_875_pp0_it8[16];
ap_reg_ppstg_t_V_reg_875_pp0_it9[17] <= ap_reg_ppstg_t_V_reg_875_pp0_it8[17];
ap_reg_ppstg_t_V_reg_875_pp0_it9[18] <= ap_reg_ppstg_t_V_reg_875_pp0_it8[18];
ap_reg_ppstg_t_V_reg_875_pp0_it9[19] <= ap_reg_ppstg_t_V_reg_875_pp0_it8[19];
ap_reg_ppstg_t_V_reg_875_pp0_it9[20] <= ap_reg_ppstg_t_V_reg_875_pp0_it8[20];
ap_reg_ppstg_t_V_reg_875_pp0_it9[21] <= ap_reg_ppstg_t_V_reg_875_pp0_it8[21];
ap_reg_ppstg_t_V_reg_875_pp0_it9[22] <= ap_reg_ppstg_t_V_reg_875_pp0_it8[22];
ap_reg_ppstg_t_V_reg_875_pp0_it9[23] <= ap_reg_ppstg_t_V_reg_875_pp0_it8[23];
ap_reg_ppstg_t_V_reg_875_pp0_it9[24] <= ap_reg_ppstg_t_V_reg_875_pp0_it8[24];
ap_reg_ppstg_t_V_reg_875_pp0_it9[25] <= ap_reg_ppstg_t_V_reg_875_pp0_it8[25];
ap_reg_ppstg_t_V_reg_875_pp0_it9[26] <= ap_reg_ppstg_t_V_reg_875_pp0_it8[26];
ap_reg_ppstg_t_V_reg_875_pp0_it9[27] <= ap_reg_ppstg_t_V_reg_875_pp0_it8[27];
ap_reg_ppstg_t_V_reg_875_pp0_it9[28] <= ap_reg_ppstg_t_V_reg_875_pp0_it8[28];
ap_reg_ppstg_t_V_reg_875_pp0_it9[29] <= ap_reg_ppstg_t_V_reg_875_pp0_it8[29];
ap_reg_ppstg_t_V_reg_875_pp0_it9[30] <= ap_reg_ppstg_t_V_reg_875_pp0_it8[30];
ap_reg_ppstg_t_V_reg_875_pp0_it9[31] <= ap_reg_ppstg_t_V_reg_875_pp0_it8[31];
ap_reg_ppstg_t_V_reg_875_pp0_it9[32] <= ap_reg_ppstg_t_V_reg_875_pp0_it8[32];
ap_reg_ppstg_t_V_reg_875_pp0_it9[33] <= ap_reg_ppstg_t_V_reg_875_pp0_it8[33];
ap_reg_ppstg_t_V_reg_875_pp0_it9[34] <= ap_reg_ppstg_t_V_reg_875_pp0_it8[34];
ap_reg_ppstg_t_V_reg_875_pp0_it9[35] <= ap_reg_ppstg_t_V_reg_875_pp0_it8[35];
ap_reg_ppstg_t_V_reg_875_pp0_it9[36] <= ap_reg_ppstg_t_V_reg_875_pp0_it8[36];
ap_reg_ppstg_t_V_reg_875_pp0_it9[37] <= ap_reg_ppstg_t_V_reg_875_pp0_it8[37];
        ap_reg_ppstg_tmp_125_reg_885_pp0_it2 <= tmp_125_reg_885;
        ap_reg_ppstg_tmp_125_reg_885_pp0_it3 <= ap_reg_ppstg_tmp_125_reg_885_pp0_it2;
        ap_reg_ppstg_tmp_125_reg_885_pp0_it4 <= ap_reg_ppstg_tmp_125_reg_885_pp0_it3;
        ap_reg_ppstg_tmp_125_reg_885_pp0_it5 <= ap_reg_ppstg_tmp_125_reg_885_pp0_it4;
        ap_reg_ppstg_tmp_125_reg_885_pp0_it6 <= ap_reg_ppstg_tmp_125_reg_885_pp0_it5;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp2_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it0))) begin
        exitcond5_reg_1041 <= exitcond5_fu_798_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0))) begin
        exitcond6_reg_922 <= exitcond6_fu_514_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        exitcond7_reg_850 <= exitcond7_fu_353_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it5) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it4))) begin
        mul_i1_reg_959 <= grp_fu_543_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it5) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond7_reg_850_pp0_it4))) begin
        mul_i_reg_891 <= grp_fu_388_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it6) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it5) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_131_reg_953_pp1_it5))) begin
        neg_ti_i1_reg_970 <= neg_ti_i1_fu_574_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond7_reg_850_pp0_it5) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_125_reg_885_pp0_it5))) begin
        neg_ti_i_reg_902 <= neg_ti_i_fu_419_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp2_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it3) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_1041_pp2_it2))) begin
        r_V_reg_1075 <= grp_fu_824_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it29) & (ap_reg_ppstg_exitcond6_reg_922_pp1_it28 == ap_const_lv1_0) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it28) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it28) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it28)) | ((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it29) & (ap_reg_ppstg_exitcond6_reg_922_pp1_it28 == ap_const_lv1_0) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it28)))) begin
        reg_329 <= grp_cordic_fu_290_ap_return_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it29) & (ap_reg_ppstg_exitcond6_reg_922_pp1_it28 == ap_const_lv1_0) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it28) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it28) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it28)) | ((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it29) & (ap_reg_ppstg_exitcond6_reg_922_pp1_it28 == ap_const_lv1_0) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it28) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it28) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it28)))) begin
        reg_335 <= grp_fu_317_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it29) & (ap_reg_ppstg_exitcond6_reg_922_pp1_it28 == ap_const_lv1_0) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it28) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it28) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it28)) | ((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it29) & (ap_reg_ppstg_exitcond6_reg_922_pp1_it28 == ap_const_lv1_0) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it28) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it28)))) begin
        reg_341 <= grp_fu_323_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it29) & (ap_reg_ppstg_exitcond6_reg_922_pp1_it28 == ap_const_lv1_0) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it28)) | ((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it29) & (ap_reg_ppstg_exitcond6_reg_922_pp1_it28 == ap_const_lv1_0) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it28) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it28)))) begin
        reg_347 <= grp_cordic_fu_290_ap_return_1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it7) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it6))) begin
        result_1_reg_975 <= result_1_fu_631_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it7) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond7_reg_850_pp0_it6))) begin
        result_reg_907 <= result_fu_476_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it10) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond7_reg_850_pp0_it9))) begin
        rhs_V3_i56_cast_reg_917 <= grp_fu_493_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it10) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it9))) begin
        rhs_V3_i83_cast_reg_985 <= grp_fu_648_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (exitcond6_reg_922 == ap_const_lv1_0))) begin
        t_V_63_reg_943[6] <= t_V_63_fu_531_p3[6];
t_V_63_reg_943[7] <= t_V_63_fu_531_p3[7];
t_V_63_reg_943[8] <= t_V_63_fu_531_p3[8];
t_V_63_reg_943[9] <= t_V_63_fu_531_p3[9];
t_V_63_reg_943[10] <= t_V_63_fu_531_p3[10];
t_V_63_reg_943[11] <= t_V_63_fu_531_p3[11];
t_V_63_reg_943[12] <= t_V_63_fu_531_p3[12];
t_V_63_reg_943[13] <= t_V_63_fu_531_p3[13];
t_V_63_reg_943[14] <= t_V_63_fu_531_p3[14];
t_V_63_reg_943[15] <= t_V_63_fu_531_p3[15];
t_V_63_reg_943[16] <= t_V_63_fu_531_p3[16];
t_V_63_reg_943[17] <= t_V_63_fu_531_p3[17];
t_V_63_reg_943[18] <= t_V_63_fu_531_p3[18];
t_V_63_reg_943[19] <= t_V_63_fu_531_p3[19];
t_V_63_reg_943[20] <= t_V_63_fu_531_p3[20];
t_V_63_reg_943[21] <= t_V_63_fu_531_p3[21];
t_V_63_reg_943[22] <= t_V_63_fu_531_p3[22];
t_V_63_reg_943[23] <= t_V_63_fu_531_p3[23];
t_V_63_reg_943[24] <= t_V_63_fu_531_p3[24];
t_V_63_reg_943[25] <= t_V_63_fu_531_p3[25];
t_V_63_reg_943[26] <= t_V_63_fu_531_p3[26];
t_V_63_reg_943[27] <= t_V_63_fu_531_p3[27];
t_V_63_reg_943[28] <= t_V_63_fu_531_p3[28];
t_V_63_reg_943[29] <= t_V_63_fu_531_p3[29];
t_V_63_reg_943[30] <= t_V_63_fu_531_p3[30];
t_V_63_reg_943[31] <= t_V_63_fu_531_p3[31];
t_V_63_reg_943[32] <= t_V_63_fu_531_p3[32];
t_V_63_reg_943[33] <= t_V_63_fu_531_p3[33];
t_V_63_reg_943[34] <= t_V_63_fu_531_p3[34];
t_V_63_reg_943[35] <= t_V_63_fu_531_p3[35];
t_V_63_reg_943[36] <= t_V_63_fu_531_p3[36];
t_V_63_reg_943[37] <= t_V_63_fu_531_p3[37];
        tmp_131_reg_953 <= phaseCumulative_V_q0[ap_const_lv32_1F];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == exitcond7_reg_850))) begin
        t_V_reg_875[6] <= t_V_fu_376_p3[6];
t_V_reg_875[7] <= t_V_fu_376_p3[7];
t_V_reg_875[8] <= t_V_fu_376_p3[8];
t_V_reg_875[9] <= t_V_fu_376_p3[9];
t_V_reg_875[10] <= t_V_fu_376_p3[10];
t_V_reg_875[11] <= t_V_fu_376_p3[11];
t_V_reg_875[12] <= t_V_fu_376_p3[12];
t_V_reg_875[13] <= t_V_fu_376_p3[13];
t_V_reg_875[14] <= t_V_fu_376_p3[14];
t_V_reg_875[15] <= t_V_fu_376_p3[15];
t_V_reg_875[16] <= t_V_fu_376_p3[16];
t_V_reg_875[17] <= t_V_fu_376_p3[17];
t_V_reg_875[18] <= t_V_fu_376_p3[18];
t_V_reg_875[19] <= t_V_fu_376_p3[19];
t_V_reg_875[20] <= t_V_fu_376_p3[20];
t_V_reg_875[21] <= t_V_fu_376_p3[21];
t_V_reg_875[22] <= t_V_fu_376_p3[22];
t_V_reg_875[23] <= t_V_fu_376_p3[23];
t_V_reg_875[24] <= t_V_fu_376_p3[24];
t_V_reg_875[25] <= t_V_fu_376_p3[25];
t_V_reg_875[26] <= t_V_fu_376_p3[26];
t_V_reg_875[27] <= t_V_fu_376_p3[27];
t_V_reg_875[28] <= t_V_fu_376_p3[28];
t_V_reg_875[29] <= t_V_fu_376_p3[29];
t_V_reg_875[30] <= t_V_fu_376_p3[30];
t_V_reg_875[31] <= t_V_fu_376_p3[31];
t_V_reg_875[32] <= t_V_fu_376_p3[32];
t_V_reg_875[33] <= t_V_fu_376_p3[33];
t_V_reg_875[34] <= t_V_fu_376_p3[34];
t_V_reg_875[35] <= t_V_fu_376_p3[35];
t_V_reg_875[36] <= t_V_fu_376_p3[36];
t_V_reg_875[37] <= t_V_fu_376_p3[37];
        tmp_125_reg_885 <= phaseCumulative_V_q0[ap_const_lv32_1F];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_lv1_0 == exitcond6_fu_514_p2))) begin
        tmp_4_reg_931[0] <= tmp_4_fu_526_p1[0];
tmp_4_reg_931[1] <= tmp_4_fu_526_p1[1];
tmp_4_reg_931[2] <= tmp_4_fu_526_p1[2];
tmp_4_reg_931[3] <= tmp_4_fu_526_p1[3];
tmp_4_reg_931[4] <= tmp_4_fu_526_p1[4];
tmp_4_reg_931[5] <= tmp_4_fu_526_p1[5];
tmp_4_reg_931[6] <= tmp_4_fu_526_p1[6];
tmp_4_reg_931[7] <= tmp_4_fu_526_p1[7];
tmp_4_reg_931[8] <= tmp_4_fu_526_p1[8];
tmp_4_reg_931[9] <= tmp_4_fu_526_p1[9];
tmp_4_reg_931[10] <= tmp_4_fu_526_p1[10];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it12) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it11) & (ap_const_lv1_0 == tmp_i_fu_688_p2) & (ap_const_lv1_0 == tmp_i_112_fu_693_p2))) begin
        tmp_61_i_reg_1016 <= tmp_61_i_fu_705_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it12) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it11) & (ap_const_lv1_0 == tmp_i_fu_688_p2))) begin
        tmp_i_112_reg_1012 <= tmp_i_112_fu_693_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it12) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it11))) begin
        tmp_i_reg_1008 <= tmp_i_fu_688_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp2_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it0) & (ap_const_lv1_0 == exitcond5_fu_798_p2))) begin
        tmp_reg_1050[0] <= tmp_fu_810_p1[0];
tmp_reg_1050[1] <= tmp_fu_810_p1[1];
tmp_reg_1050[2] <= tmp_fu_810_p1[2];
tmp_reg_1050[3] <= tmp_fu_810_p1[3];
tmp_reg_1050[4] <= tmp_fu_810_p1[4];
tmp_reg_1050[5] <= tmp_fu_810_p1[5];
tmp_reg_1050[6] <= tmp_fu_810_p1[6];
tmp_reg_1050[7] <= tmp_fu_810_p1[7];
tmp_reg_1050[8] <= tmp_fu_810_p1[8];
tmp_reg_1050[9] <= tmp_fu_810_p1[9];
tmp_reg_1050[10] <= tmp_fu_810_p1[10];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it6) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it5))) begin
        trunc_i1_cast_reg_965 <= trunc_i1_cast_fu_570_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond7_reg_850_pp0_it5))) begin
        trunc_i_cast_reg_897 <= trunc_i_cast_fu_415_p1;
    end
end

/// amplitude_V_ce0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp1_it29 or ap_reg_ppstg_exitcond6_reg_922_pp1_it28)
begin
    if (((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it29) & (ap_reg_ppstg_exitcond6_reg_922_pp1_it28 == ap_const_lv1_0))) begin
        amplitude_V_ce0 = ap_const_logic_1;
    end else begin
        amplitude_V_ce0 = ap_const_logic_0;
    end
end

/// angle_V_ce0 assign process. ///
always @ (ap_CS_fsm or exitcond7_fu_353_p2 or ap_reg_ppiten_pp0_it0)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_lv1_0 == exitcond7_fu_353_p2))) begin
        angle_V_ce0 = ap_const_logic_1;
    end else begin
        angle_V_ce0 = ap_const_logic_0;
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm)) | (ap_ST_st59_fsm_6 == ap_CS_fsm))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st59_fsm_6 == ap_CS_fsm)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// cos_value_V_phi_fu_268_p8 assign process. ///
always @ (reg_329 or reg_335 or reg_341 or ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it29 or ap_reg_phiprechg_cos_value_V_reg_265pp1_it30 or ap_sig_bdd_1416 or ap_sig_bdd_1418 or ap_sig_bdd_1415)
begin
    if (ap_sig_bdd_1415) begin
        if (~(ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it29)) begin
            cos_value_V_phi_fu_268_p8 = reg_341;
        end else if (ap_sig_bdd_1418) begin
            cos_value_V_phi_fu_268_p8 = reg_335;
        end else if (ap_sig_bdd_1416) begin
            cos_value_V_phi_fu_268_p8 = reg_329;
        end else begin
            cos_value_V_phi_fu_268_p8 = ap_reg_phiprechg_cos_value_V_reg_265pp1_it30;
        end
    end else begin
        cos_value_V_phi_fu_268_p8 = ap_reg_phiprechg_cos_value_V_reg_265pp1_it30;
    end
end

/// grp_cordic_fu_290_ap_ce assign process. ///
always @ (ap_CS_fsm or ap_reg_ppstg_exitcond6_reg_922_pp1_it28 or tmp_i_reg_1008 or ap_reg_ppstg_tmp_i_reg_1008_pp1_it28 or tmp_i_112_reg_1012 or ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it28 or tmp_61_i_reg_1016 or ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it28 or ap_reg_ppstg_exitcond6_reg_922_pp1_it11 or ap_reg_ppstg_exitcond6_reg_922_pp1_it12 or ap_reg_ppstg_exitcond6_reg_922_pp1_it13 or ap_reg_ppstg_exitcond6_reg_922_pp1_it14 or ap_reg_ppstg_exitcond6_reg_922_pp1_it15 or ap_reg_ppstg_exitcond6_reg_922_pp1_it16 or ap_reg_ppstg_exitcond6_reg_922_pp1_it17 or ap_reg_ppstg_exitcond6_reg_922_pp1_it18 or ap_reg_ppstg_exitcond6_reg_922_pp1_it19 or ap_reg_ppstg_exitcond6_reg_922_pp1_it20 or ap_reg_ppstg_exitcond6_reg_922_pp1_it21 or ap_reg_ppstg_exitcond6_reg_922_pp1_it22 or ap_reg_ppstg_exitcond6_reg_922_pp1_it23 or ap_reg_ppstg_exitcond6_reg_922_pp1_it24 or ap_reg_ppstg_exitcond6_reg_922_pp1_it25 or ap_reg_ppstg_exitcond6_reg_922_pp1_it26 or ap_reg_ppstg_exitcond6_reg_922_pp1_it27 or tmp_i_fu_688_p2 or ap_reg_ppstg_tmp_i_reg_1008_pp1_it13 or ap_reg_ppstg_tmp_i_reg_1008_pp1_it14 or ap_reg_ppstg_tmp_i_reg_1008_pp1_it15 or ap_reg_ppstg_tmp_i_reg_1008_pp1_it16 or ap_reg_ppstg_tmp_i_reg_1008_pp1_it17 or ap_reg_ppstg_tmp_i_reg_1008_pp1_it18 or ap_reg_ppstg_tmp_i_reg_1008_pp1_it19 or ap_reg_ppstg_tmp_i_reg_1008_pp1_it20 or ap_reg_ppstg_tmp_i_reg_1008_pp1_it21 or ap_reg_ppstg_tmp_i_reg_1008_pp1_it22 or ap_reg_ppstg_tmp_i_reg_1008_pp1_it23 or ap_reg_ppstg_tmp_i_reg_1008_pp1_it24 or ap_reg_ppstg_tmp_i_reg_1008_pp1_it25 or ap_reg_ppstg_tmp_i_reg_1008_pp1_it26 or ap_reg_ppstg_tmp_i_reg_1008_pp1_it27 or tmp_i_112_fu_693_p2 or ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it13 or ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it14 or ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it15 or ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it16 or ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it17 or ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it18 or ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it19 or ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it20 or ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it21 or ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it22 or ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it23 or ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it24 or ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it25 or ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it26 or ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it27 or tmp_61_i_fu_705_p2 or ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it13 or ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it14 or ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it15 or ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it16 or ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it17 or ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it18 or ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it19 or ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it20 or ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it21 or ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it22 or ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it23 or ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it24 or ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it25 or ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it26 or ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it27)
begin
    if (((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm) & (((ap_reg_ppstg_exitcond6_reg_922_pp1_it28 == ap_const_lv1_0) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it28) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it28) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it28)) | ((ap_reg_ppstg_exitcond6_reg_922_pp1_it28 == ap_const_lv1_0) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it28)) | ((ap_reg_ppstg_exitcond6_reg_922_pp1_it28 == ap_const_lv1_0) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it28) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it28) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it28)) | ((ap_reg_ppstg_exitcond6_reg_922_pp1_it28 == ap_const_lv1_0) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it28) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it28)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it11) & (ap_const_lv1_0 == tmp_i_fu_688_p2) & (ap_const_lv1_0 == tmp_i_112_fu_693_p2) & (ap_const_lv1_0 == tmp_61_i_fu_705_p2)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it12) & (ap_const_lv1_0 == tmp_i_reg_1008) & (ap_const_lv1_0 == tmp_i_112_reg_1012) & (ap_const_lv1_0 == tmp_61_i_reg_1016)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it13) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it13) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it13) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it13)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it14) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it14) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it14) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it14)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it15) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it15) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it15) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it15)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it16) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it16) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it16) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it16)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it17) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it17) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it17) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it17)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it18) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it18) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it18) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it18)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it19) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it19) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it19) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it19)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it20) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it20) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it20) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it20)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it21) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it21) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it21) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it21)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it22) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it22) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it22) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it22)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it23) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it23) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it23) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it23)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it24) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it24) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it24) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it24)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it25) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it25) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it25) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it25)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it26) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it26) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it26) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it26)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it27) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it27) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it27) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it27)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it11) & (ap_const_lv1_0 == tmp_i_fu_688_p2) & (ap_const_lv1_0 == tmp_i_112_fu_693_p2) & ~(ap_const_lv1_0 == tmp_61_i_fu_705_p2)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it12) & (ap_const_lv1_0 == tmp_i_reg_1008) & (ap_const_lv1_0 == tmp_i_112_reg_1012) & ~(ap_const_lv1_0 == tmp_61_i_reg_1016)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it13) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it13) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it13) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it13)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it14) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it14) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it14) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it14)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it15) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it15) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it15) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it15)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it16) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it16) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it16) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it16)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it17) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it17) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it17) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it17)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it18) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it18) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it18) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it18)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it19) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it19) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it19) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it19)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it20) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it20) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it20) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it20)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it21) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it21) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it21) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it21)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it22) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it22) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it22) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it22)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it23) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it23) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it23) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it23)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it24) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it24) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it24) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it24)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it25) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it25) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it25) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it25)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it26) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it26) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it26) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it26)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it27) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it27) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it27) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it27)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it11) & (ap_const_lv1_0 == tmp_i_fu_688_p2) & ~(ap_const_lv1_0 == tmp_i_112_fu_693_p2)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it12) & (ap_const_lv1_0 == tmp_i_reg_1008) & ~(ap_const_lv1_0 == tmp_i_112_reg_1012)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it13) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it13) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it13)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it14) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it14) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it14)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it15) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it15) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it15)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it16) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it16) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it16)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it17) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it17) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it17)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it18) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it18) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it18)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it19) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it19) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it19)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it20) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it20) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it20)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it21) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it21) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it21)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it22) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it22) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it22)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it23) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it23) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it23)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it24) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it24) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it24)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it25) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it25) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it25)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it26) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it26) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it26)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it27) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it27) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it27)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it11) & ~(ap_const_lv1_0 == tmp_i_fu_688_p2)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it12) & ~(ap_const_lv1_0 == tmp_i_reg_1008)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it13) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it13)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it14) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it14)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it15) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it15)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it16) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it16)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it17) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it17)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it18) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it18)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it19) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it19)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it20) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it20)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it21) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it21)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it22) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it22)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it23) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it23)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it24) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it24)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it25) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it25)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it26) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it26)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it27) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it27))))) begin
        grp_cordic_fu_290_ap_ce = ap_const_logic_1;
    end else begin
        grp_cordic_fu_290_ap_ce = ap_const_logic_0;
    end
end

/// grp_cordic_fu_290_theta_V assign process. ///
always @ (real_angle_V_reg_990 or tmp_i_fu_688_p2 or this_addr_i12_0_0_i_fu_727_p1 or r_V_68_i_cast_fu_737_p1 or r_V_i_cast_fu_747_p1 or ap_sig_bdd_1422 or ap_sig_bdd_1424 or ap_sig_bdd_1426 or ap_sig_bdd_468)
begin
    if (ap_sig_bdd_468) begin
        if (~(ap_const_lv1_0 == tmp_i_fu_688_p2)) begin
            grp_cordic_fu_290_theta_V = real_angle_V_reg_990;
        end else if (ap_sig_bdd_1426) begin
            grp_cordic_fu_290_theta_V = r_V_i_cast_fu_747_p1;
        end else if (ap_sig_bdd_1424) begin
            grp_cordic_fu_290_theta_V = r_V_68_i_cast_fu_737_p1;
        end else if (ap_sig_bdd_1422) begin
            grp_cordic_fu_290_theta_V = this_addr_i12_0_0_i_fu_727_p1;
        end else begin
            grp_cordic_fu_290_theta_V = r_V_i_cast_fu_747_p1;
        end
    end else begin
        grp_cordic_fu_290_theta_V = r_V_i_cast_fu_747_p1;
    end
end

/// imag_V_address0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp1_it35 or ap_reg_ppstg_tmp_4_reg_931_pp1_it34 or grp_IFFT_fu_295_ximag_V_address0)
begin
    if (((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it35))) begin
        imag_V_address0 = ap_reg_ppstg_tmp_4_reg_931_pp1_it34;
    end else if ((ap_ST_st51_fsm_4 == ap_CS_fsm)) begin
        imag_V_address0 = grp_IFFT_fu_295_ximag_V_address0;
    end else begin
        imag_V_address0 = ap_reg_ppstg_tmp_4_reg_931_pp1_it34;
    end
end

/// imag_V_ce0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp1_it35 or ap_reg_ppstg_exitcond6_reg_922_pp1_it34 or grp_IFFT_fu_295_ximag_V_ce0)
begin
    if (((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it35) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it34))) begin
        imag_V_ce0 = ap_const_logic_1;
    end else if ((ap_ST_st51_fsm_4 == ap_CS_fsm)) begin
        imag_V_ce0 = grp_IFFT_fu_295_ximag_V_ce0;
    end else begin
        imag_V_ce0 = ap_const_logic_0;
    end
end

/// imag_V_ce1 assign process. ///
always @ (ap_CS_fsm or grp_IFFT_fu_295_ximag_V_ce1)
begin
    if ((ap_ST_st51_fsm_4 == ap_CS_fsm)) begin
        imag_V_ce1 = grp_IFFT_fu_295_ximag_V_ce1;
    end else begin
        imag_V_ce1 = ap_const_logic_0;
    end
end

/// imag_V_d0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp1_it35 or grp_IFFT_fu_295_ximag_V_d0 or grp_fu_770_p2)
begin
    if (((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it35))) begin
        imag_V_d0 = {{grp_fu_770_p2[ap_const_lv32_25 : ap_const_lv32_6]}};
    end else if ((ap_ST_st51_fsm_4 == ap_CS_fsm)) begin
        imag_V_d0 = grp_IFFT_fu_295_ximag_V_d0;
    end else begin
        imag_V_d0 = {{grp_fu_770_p2[ap_const_lv32_25 : ap_const_lv32_6]}};
    end
end

/// imag_V_we0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp1_it35 or ap_reg_ppstg_exitcond6_reg_922_pp1_it34 or grp_IFFT_fu_295_ximag_V_we0)
begin
    if (((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it35) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it34))) begin
        imag_V_we0 = ap_const_logic_1;
    end else if ((ap_ST_st51_fsm_4 == ap_CS_fsm)) begin
        imag_V_we0 = grp_IFFT_fu_295_ximag_V_we0;
    end else begin
        imag_V_we0 = ap_const_logic_0;
    end
end

/// output_array_V_ce0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp2_it6 or ap_reg_ppstg_exitcond5_reg_1041_pp2_it5)
begin
    if (((ap_ST_pp2_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it6) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_1041_pp2_it5))) begin
        output_array_V_ce0 = ap_const_logic_1;
    end else begin
        output_array_V_ce0 = ap_const_logic_0;
    end
end

/// output_array_V_we0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp2_it6 or ap_reg_ppstg_exitcond5_reg_1041_pp2_it5)
begin
    if (((ap_ST_pp2_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it6) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_1041_pp2_it5))) begin
        output_array_V_we0 = ap_const_logic_1;
    end else begin
        output_array_V_we0 = ap_const_logic_0;
    end
end

/// phaseCumulative_V_address0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp1_it0 or ap_reg_ppiten_pp0_it0 or OP2_V_fu_365_p1 or tmp_4_fu_526_p1)
begin
    if (((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0))) begin
        phaseCumulative_V_address0 = tmp_4_fu_526_p1;
    end else if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        phaseCumulative_V_address0 = OP2_V_fu_365_p1;
    end else begin
        phaseCumulative_V_address0 = tmp_4_fu_526_p1;
    end
end

/// phaseCumulative_V_ce0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp1_it0 or exitcond7_fu_353_p2 or ap_reg_ppiten_pp0_it0 or exitcond6_fu_514_p2)
begin
    if ((((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_lv1_0 == exitcond7_fu_353_p2)) | ((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_lv1_0 == exitcond6_fu_514_p2)))) begin
        phaseCumulative_V_ce0 = ap_const_logic_1;
    end else begin
        phaseCumulative_V_ce0 = ap_const_logic_0;
    end
end

/// phaseCumulative_V_ce1 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it11 or ap_reg_ppstg_exitcond7_reg_850_pp0_it10)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it11) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond7_reg_850_pp0_it10))) begin
        phaseCumulative_V_ce1 = ap_const_logic_1;
    end else begin
        phaseCumulative_V_ce1 = ap_const_logic_0;
    end
end

/// phaseCumulative_V_we1 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it11 or ap_reg_ppstg_exitcond7_reg_850_pp0_it10)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it11) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond7_reg_850_pp0_it10))) begin
        phaseCumulative_V_we1 = ap_const_logic_1;
    end else begin
        phaseCumulative_V_we1 = ap_const_logic_0;
    end
end

/// previousPhase_V_ce0 assign process. ///
always @ (ap_CS_fsm or exitcond7_reg_850 or ap_reg_ppiten_pp0_it1)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == exitcond7_reg_850))) begin
        previousPhase_V_ce0 = ap_const_logic_1;
    end else begin
        previousPhase_V_ce0 = ap_const_logic_0;
    end
end

/// previousPhase_V_we0 assign process. ///
always @ (ap_CS_fsm or exitcond7_reg_850 or ap_reg_ppiten_pp0_it1)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == exitcond7_reg_850))) begin
        previousPhase_V_we0 = ap_const_logic_1;
    end else begin
        previousPhase_V_we0 = ap_const_logic_0;
    end
end

/// real_V_address0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp1_it35 or ap_reg_ppstg_tmp_4_reg_931_pp1_it34 or ap_reg_ppiten_pp2_it0 or tmp_fu_810_p1 or grp_IFFT_fu_295_xreal_V_address0)
begin
    if (((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it35))) begin
        real_V_address0 = ap_reg_ppstg_tmp_4_reg_931_pp1_it34;
    end else if (((ap_ST_pp2_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it0))) begin
        real_V_address0 = tmp_fu_810_p1;
    end else if ((ap_ST_st51_fsm_4 == ap_CS_fsm)) begin
        real_V_address0 = grp_IFFT_fu_295_xreal_V_address0;
    end else begin
        real_V_address0 = ap_reg_ppstg_tmp_4_reg_931_pp1_it34;
    end
end

/// real_V_ce0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp1_it35 or ap_reg_ppstg_exitcond6_reg_922_pp1_it34 or exitcond5_fu_798_p2 or ap_reg_ppiten_pp2_it0 or grp_IFFT_fu_295_xreal_V_ce0)
begin
    if ((((ap_ST_pp2_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it0) & (ap_const_lv1_0 == exitcond5_fu_798_p2)) | ((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it35) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it34)))) begin
        real_V_ce0 = ap_const_logic_1;
    end else if ((ap_ST_st51_fsm_4 == ap_CS_fsm)) begin
        real_V_ce0 = grp_IFFT_fu_295_xreal_V_ce0;
    end else begin
        real_V_ce0 = ap_const_logic_0;
    end
end

/// real_V_ce1 assign process. ///
always @ (ap_CS_fsm or grp_IFFT_fu_295_xreal_V_ce1)
begin
    if ((ap_ST_st51_fsm_4 == ap_CS_fsm)) begin
        real_V_ce1 = grp_IFFT_fu_295_xreal_V_ce1;
    end else begin
        real_V_ce1 = ap_const_logic_0;
    end
end

/// real_V_d0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp1_it35 or grp_IFFT_fu_295_xreal_V_d0 or grp_fu_760_p2)
begin
    if (((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it35))) begin
        real_V_d0 = {{grp_fu_760_p2[ap_const_lv32_25 : ap_const_lv32_6]}};
    end else if ((ap_ST_st51_fsm_4 == ap_CS_fsm)) begin
        real_V_d0 = grp_IFFT_fu_295_xreal_V_d0;
    end else begin
        real_V_d0 = {{grp_fu_760_p2[ap_const_lv32_25 : ap_const_lv32_6]}};
    end
end

/// real_V_we0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp1_it35 or ap_reg_ppstg_exitcond6_reg_922_pp1_it34 or grp_IFFT_fu_295_xreal_V_we0)
begin
    if (((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it35) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it34))) begin
        real_V_we0 = ap_const_logic_1;
    end else if ((ap_ST_st51_fsm_4 == ap_CS_fsm)) begin
        real_V_we0 = grp_IFFT_fu_295_xreal_V_we0;
    end else begin
        real_V_we0 = ap_const_logic_0;
    end
end

/// sin_value_V_phi_fu_255_p8 assign process. ///
always @ (reg_335 or reg_341 or reg_347 or ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it29 or ap_reg_phiprechg_sin_value_V_reg_252pp1_it30 or ap_sig_bdd_1416 or ap_sig_bdd_1418 or ap_sig_bdd_1415)
begin
    if (ap_sig_bdd_1415) begin
        if (~(ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it29)) begin
            sin_value_V_phi_fu_255_p8 = reg_347;
        end else if (ap_sig_bdd_1418) begin
            sin_value_V_phi_fu_255_p8 = reg_341;
        end else if (ap_sig_bdd_1416) begin
            sin_value_V_phi_fu_255_p8 = reg_335;
        end else begin
            sin_value_V_phi_fu_255_p8 = ap_reg_phiprechg_sin_value_V_reg_252pp1_it30;
        end
    end else begin
        sin_value_V_phi_fu_255_p8 = ap_reg_phiprechg_sin_value_V_reg_252pp1_it30;
    end
end

/// wn_V_ce0 assign process. ///
always @ (ap_CS_fsm or exitcond5_fu_798_p2 or ap_reg_ppiten_pp2_it0)
begin
    if (((ap_ST_pp2_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it0) & (ap_const_lv1_0 == exitcond5_fu_798_p2))) begin
        wn_V_ce0 = ap_const_logic_1;
    end else begin
        wn_V_ce0 = ap_const_logic_0;
    end
end
always @ (ap_start or ap_CS_fsm or ap_reg_ppiten_pp1_it0 or ap_reg_ppiten_pp1_it1 or ap_reg_ppiten_pp1_it34 or ap_reg_ppiten_pp1_it35 or exitcond7_fu_353_p2 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it10 or ap_reg_ppiten_pp0_it11 or exitcond6_fu_514_p2 or exitcond5_fu_798_p2 or ap_reg_ppiten_pp2_it0 or ap_reg_ppiten_pp2_it1 or ap_reg_ppiten_pp2_it5 or ap_reg_ppiten_pp2_it6 or grp_IFFT_fu_295_ap_done)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        ap_ST_pp0_stg0_fsm_1 : 
            if ((~((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it11) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it10)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond7_fu_353_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond7_fu_353_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_2;
            end
        ap_ST_pp1_stg0_fsm_2 : 
            if ((~((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it35) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it34)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_const_lv1_0 == exitcond6_fu_514_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_2;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_const_lv1_0 == exitcond6_fu_514_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it1))) begin
                ap_NS_fsm = ap_ST_st50_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st50_fsm_3;
            end
        ap_ST_st50_fsm_3 : 
            ap_NS_fsm = ap_ST_st51_fsm_4;
        ap_ST_st51_fsm_4 : 
            if (~(ap_const_logic_0 == grp_IFFT_fu_295_ap_done)) begin
                ap_NS_fsm = ap_ST_pp2_stg0_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st51_fsm_4;
            end
        ap_ST_pp2_stg0_fsm_5 : 
            if ((~((ap_ST_pp2_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it6) & ~(ap_const_logic_1 == ap_reg_ppiten_pp2_it5)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp2_it0) & ~(ap_const_lv1_0 == exitcond5_fu_798_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp2_it1)))) begin
                ap_NS_fsm = ap_ST_pp2_stg0_fsm_5;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it0) & ~(ap_const_lv1_0 == exitcond5_fu_798_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp2_it1))) begin
                ap_NS_fsm = ap_ST_st59_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_st59_fsm_6;
            end
        ap_ST_st59_fsm_6 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
        default : 
            ap_NS_fsm = 'bx;
    endcase
end
assign OP1_V_cast_fu_752_p1 = $signed(amplitude_V_q0);
assign OP2_V_fu_365_p1 = $unsigned(i_6_reg_230);
assign amplitude_V_address0 = ap_reg_ppstg_tmp_4_reg_931_pp1_it28;
assign angle_V_address0 = OP2_V_fu_365_p1;
assign ap_reg_phiprechg_cos_value_V_reg_265pp1_it29 = ap_const_lv32_1;
assign ap_reg_phiprechg_sin_value_V_reg_252pp1_it29 = ap_const_lv32_1;

/// ap_sig_bdd_1415 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp1_it30 or ap_reg_ppstg_exitcond6_reg_922_pp1_it29 or ap_reg_ppstg_tmp_i_reg_1008_pp1_it29)
begin
    ap_sig_bdd_1415 = ((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it30) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it29) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it29));
end

/// ap_sig_bdd_1416 assign process. ///
always @ (ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it29 or ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it29)
begin
    ap_sig_bdd_1416 = ((ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it29) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it29));
end

/// ap_sig_bdd_1418 assign process. ///
always @ (ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it29 or ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it29)
begin
    ap_sig_bdd_1418 = ((ap_const_lv1_0 == ap_reg_ppstg_tmp_i_112_reg_1012_pp1_it29) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_61_i_reg_1016_pp1_it29));
end

/// ap_sig_bdd_1422 assign process. ///
always @ (tmp_i_fu_688_p2 or tmp_i_112_fu_693_p2 or tmp_61_i_fu_705_p2)
begin
    ap_sig_bdd_1422 = ((ap_const_lv1_0 == tmp_i_fu_688_p2) & (ap_const_lv1_0 == tmp_i_112_fu_693_p2) & (ap_const_lv1_0 == tmp_61_i_fu_705_p2));
end

/// ap_sig_bdd_1424 assign process. ///
always @ (tmp_i_fu_688_p2 or tmp_i_112_fu_693_p2 or tmp_61_i_fu_705_p2)
begin
    ap_sig_bdd_1424 = ((ap_const_lv1_0 == tmp_i_fu_688_p2) & (ap_const_lv1_0 == tmp_i_112_fu_693_p2) & ~(ap_const_lv1_0 == tmp_61_i_fu_705_p2));
end

/// ap_sig_bdd_1426 assign process. ///
always @ (tmp_i_fu_688_p2 or tmp_i_112_fu_693_p2)
begin
    ap_sig_bdd_1426 = ((ap_const_lv1_0 == tmp_i_fu_688_p2) & ~(ap_const_lv1_0 == tmp_i_112_fu_693_p2));
end

/// ap_sig_bdd_176 assign process. ///
always @ (ap_reg_ppstg_exitcond6_reg_922_pp1_it28 or ap_reg_ppstg_tmp_i_reg_1008_pp1_it28)
begin
    ap_sig_bdd_176 = ((ap_reg_ppstg_exitcond6_reg_922_pp1_it28 == ap_const_lv1_0) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_1008_pp1_it28));
end

/// ap_sig_bdd_468 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp1_it12 or ap_reg_ppstg_exitcond6_reg_922_pp1_it11)
begin
    ap_sig_bdd_468 = ((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it12) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_922_pp1_it11));
end

/// ap_sig_bdd_87 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp1_it29)
begin
    ap_sig_bdd_87 = ((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it29));
end
assign exitcond5_fu_798_p2 = (m_reg_278 == ap_const_lv11_400? 1'b1: 1'b0);
assign exitcond6_fu_514_p2 = (j_reg_241 == ap_const_lv11_400? 1'b1: 1'b0);
assign exitcond7_fu_353_p2 = (i_6_reg_230 == ap_const_lv11_400? 1'b1: 1'b0);
assign grp_IFFT_fu_295_ap_start = grp_IFFT_fu_295_ap_start_ap_start_reg;
assign grp_IFFT_fu_295_ximag_V_q0 = imag_V_q0;
assign grp_IFFT_fu_295_ximag_V_q1 = imag_V_q1;
assign grp_IFFT_fu_295_xreal_V_q0 = real_V_q0;
assign grp_IFFT_fu_295_xreal_V_q1 = real_V_q1;
assign grp_fu_317_p2 = (ap_const_lv32_0 - grp_cordic_fu_290_ap_return_1);
assign grp_fu_323_p2 = (ap_const_lv32_0 - grp_cordic_fu_290_ap_return_0);
assign grp_fu_388_ce = ap_const_logic_1;
assign grp_fu_388_p0 = t_V_fu_376_p3;
assign grp_fu_388_p1 = ap_const_lv77_51832F1FD8;
assign grp_fu_493_ce = ap_const_logic_1;
assign grp_fu_493_p0 = tmp_130_fu_484_p2;
assign grp_fu_493_p1 = ap_const_lv38_192;
assign grp_fu_543_ce = ap_const_logic_1;
assign grp_fu_543_p0 = t_V_63_fu_531_p3;
assign grp_fu_543_p1 = ap_const_lv77_51832F1FD8;
assign grp_fu_648_ce = ap_const_logic_1;
assign grp_fu_648_p0 = tmp_136_fu_639_p2;
assign grp_fu_648_p1 = ap_const_lv38_192;
assign grp_fu_760_ce = ap_const_logic_1;
assign grp_fu_760_p0 = cos_value_V_phi_fu_268_p8;
assign grp_fu_760_p1 = OP1_V_cast_fu_752_p1;
assign grp_fu_770_ce = ap_const_logic_1;
assign grp_fu_770_p0 = sin_value_V_phi_fu_255_p8;
assign grp_fu_770_p1 = OP1_V_cast_fu_752_p1;
assign grp_fu_824_ce = ap_const_logic_1;
assign grp_fu_824_p0 = grp_fu_824_p00;
assign grp_fu_824_p00 = $unsigned(wn_V_q0);
assign grp_fu_824_p1 = real_V_q0;
assign grp_fu_833_ce = ap_const_logic_1;
assign grp_fu_833_p0 = r_V_reg_1075;
assign grp_fu_833_p1 = ap_const_lv44_2D;
assign i_fu_359_p2 = (i_6_reg_230 + ap_const_lv11_1);
assign imag_V_address1 = grp_IFFT_fu_295_ximag_V_address1;
assign j_1_fu_520_p2 = (j_reg_241 + ap_const_lv11_1);
assign lhs_V_64_fu_698_p3 = {{agg_result_V_i86_cast1_reg_997}, {ap_const_lv6_0}};
assign m_1_fu_804_p2 = (m_reg_278 + ap_const_lv11_1);
assign neg_mul_i1_fu_549_p2 = (ap_const_lv77_0 - mul_i1_reg_959);
assign neg_mul_i_fu_394_p2 = (ap_const_lv77_0 - mul_i_reg_891);
assign neg_ti_i1_fu_574_p1 = $signed(tmp_132_fu_560_p4);
assign neg_ti_i1_fu_574_p2 = (ap_const_lv31_0 - neg_ti_i1_fu_574_p1);
assign neg_ti_i_fu_419_p1 = $signed(tmp_126_fu_405_p4);
assign neg_ti_i_fu_419_p2 = (ap_const_lv31_0 - neg_ti_i_fu_419_p1);
assign output_array_V_address0 = ap_reg_ppstg_tmp_reg_1050_pp2_it5;
assign output_array_V_d0 = {{grp_fu_833_p2[ap_const_lv32_2B : ap_const_lv32_C]}};
assign p_i1_fu_623_p1 = tmp_i2_111_fu_595_p1;
assign p_i1_fu_623_p3 = ((tmp_1_i1_fu_617_p2)? p_i1_fu_623_p1: ret_V_1_i1_fu_611_p2);
assign p_i_fu_468_p1 = tmp_i1_108_fu_440_p1;
assign p_i_fu_468_p3 = ((tmp_1_i_fu_462_p2)? p_i_fu_468_p1: ret_V_1_i_fu_456_p2);
assign phaseCumulative_V_address1 = ap_reg_ppstg_phaseCumulative_V_addr_1_reg_869_pp0_it10;
assign phaseCumulative_V_d1 = {{r_V_146_fu_499_p2[ap_const_lv32_25 : ap_const_lv32_6]}};
assign previousPhase_V_address0 = OP2_V_reg_859;
assign previousPhase_V_d0 = $signed(angle_V_q0);
assign r_V_146_fu_499_p2 = (ap_reg_ppstg_t_V_reg_875_pp0_it10 - rhs_V3_i56_cast_reg_917);
assign r_V_147_fu_654_p2 = (ap_reg_ppstg_t_V_63_reg_943_pp1_it10 - rhs_V3_i83_cast_reg_985);
assign r_V_148_fu_711_p2 = (lhs_V_64_fu_698_p3 + ap_const_lv37_1FFFFFB4A0);
assign r_V_68_i_cast_fu_737_p1 = $unsigned(r_V_68_i_fu_732_p2);
assign r_V_68_i_fu_732_p2 = (agg_result_V_i86_cast1_reg_997 + ap_const_lv31_7FFFFF37);
assign r_V_i_cast_fu_747_p1 = $unsigned(r_V_i_fu_742_p2);
assign r_V_i_fu_742_p2 = (agg_result_V_i86_cast_reg_1003 + ap_const_lv7_1C);
assign real_V_address1 = grp_IFFT_fu_295_xreal_V_address1;
assign result_1_fu_631_p2 = tmp_i2_111_fu_595_p1;
assign result_1_fu_631_p3 = ((tmp_134_fu_599_p3)? p_i1_fu_623_p3: result_1_fu_631_p2);
assign result_fu_476_p2 = tmp_i1_108_fu_440_p1;
assign result_fu_476_p3 = ((tmp_128_fu_444_p3)? p_i_fu_468_p3: result_fu_476_p2);
assign ret_V_1_i1_fu_611_p0 = tmp_i2_111_fu_595_p1;
assign ret_V_1_i1_fu_611_p2 = (ret_V_1_i1_fu_611_p0 + ap_const_lv32_1);
assign ret_V_1_i_fu_456_p0 = tmp_i1_108_fu_440_p1;
assign ret_V_1_i_fu_456_p2 = (ret_V_1_i_fu_456_p0 + ap_const_lv32_1);
assign sel_i1_fu_554_p3 = ((ap_reg_ppstg_tmp_131_reg_953_pp1_it5)? neg_mul_i1_fu_549_p2: mul_i1_reg_959);
assign sel_i_fu_399_p3 = ((ap_reg_ppstg_tmp_125_reg_885_pp0_it5)? neg_mul_i_fu_394_p2: mul_i_reg_891);
assign t_V_63_fu_531_p3 = {{phaseCumulative_V_q0}, {ap_const_lv6_0}};
assign t_V_fu_376_p3 = {{phaseCumulative_V_q0}, {ap_const_lv6_0}};
assign this_addr_i12_0_0_i_fu_727_p1 = $unsigned(tmp_137_fu_717_p4);
assign tmp_126_fu_405_p4 = {{sel_i_fu_399_p3[ap_const_lv32_4C : ap_const_lv32_2F]}};
assign tmp_127_fu_430_p4 = {{tmp_i1_fu_425_p3[ap_const_lv32_1E : ap_const_lv32_6]}};
assign tmp_128_fu_444_p3 = tmp_i1_fu_425_p3[ap_const_lv32_1E];
assign tmp_129_fu_452_p1 = tmp_i1_fu_425_p3[5:0];
assign tmp_130_fu_484_p2 = result_reg_907 << ap_const_lv32_6;
assign tmp_132_fu_560_p4 = {{sel_i1_fu_554_p3[ap_const_lv32_4C : ap_const_lv32_2F]}};
assign tmp_133_fu_585_p4 = {{tmp_i2_fu_580_p3[ap_const_lv32_1E : ap_const_lv32_6]}};
assign tmp_134_fu_599_p3 = tmp_i2_fu_580_p3[ap_const_lv32_1E];
assign tmp_135_fu_607_p1 = tmp_i2_fu_580_p3[5:0];
assign tmp_136_fu_639_p2 = result_1_reg_975 << ap_const_lv32_6;
assign tmp_137_fu_717_p4 = {{r_V_148_fu_711_p2[ap_const_lv32_24 : ap_const_lv32_6]}};
assign tmp_1_i1_fu_617_p2 = (tmp_135_fu_607_p1 == ap_const_lv6_0? 1'b1: 1'b0);
assign tmp_1_i_fu_462_p2 = (tmp_129_fu_452_p1 == ap_const_lv6_0? 1'b1: 1'b0);
assign tmp_4_fu_526_p1 = $unsigned(j_reg_241);
assign tmp_61_i_fu_705_p2 = (lhs_V_64_fu_698_p3 < ap_const_lv37_4B60? 1'b1: 1'b0);
assign tmp_fu_810_p1 = $unsigned(m_reg_278);
assign tmp_i1_108_fu_440_p1 = $signed(tmp_127_fu_430_p4);
assign tmp_i1_fu_425_p3 = ((ap_reg_ppstg_tmp_125_reg_885_pp0_it6)? neg_ti_i_reg_902: trunc_i_cast_reg_897);
assign tmp_i2_111_fu_595_p1 = $signed(tmp_133_fu_585_p4);
assign tmp_i2_fu_580_p3 = ((ap_reg_ppstg_tmp_131_reg_953_pp1_it6)? neg_ti_i1_reg_970: trunc_i1_cast_reg_965);
assign tmp_i_112_fu_693_p2 = ($signed(real_angle_V_reg_990) < $signed(32'b11001001)? 1'b1: 1'b0);
assign tmp_i_fu_688_p2 = ($signed(real_angle_V_reg_990) < $signed(32'b1100100)? 1'b1: 1'b0);
assign trunc_i1_cast_fu_570_p1 = $signed(tmp_132_fu_560_p4);
assign trunc_i_cast_fu_415_p1 = $signed(tmp_126_fu_405_p4);
assign wn_V_address0 = tmp_fu_810_p1;
always @ (posedge ap_clk)
begin
    OP2_V_reg_859[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    t_V_reg_875[5:0] <= 6'b000000;
    ap_reg_ppstg_t_V_reg_875_pp0_it2[5:0] <= 6'b000000;
    ap_reg_ppstg_t_V_reg_875_pp0_it3[5:0] <= 6'b000000;
    ap_reg_ppstg_t_V_reg_875_pp0_it4[5:0] <= 6'b000000;
    ap_reg_ppstg_t_V_reg_875_pp0_it5[5:0] <= 6'b000000;
    ap_reg_ppstg_t_V_reg_875_pp0_it6[5:0] <= 6'b000000;
    ap_reg_ppstg_t_V_reg_875_pp0_it7[5:0] <= 6'b000000;
    ap_reg_ppstg_t_V_reg_875_pp0_it8[5:0] <= 6'b000000;
    ap_reg_ppstg_t_V_reg_875_pp0_it9[5:0] <= 6'b000000;
    ap_reg_ppstg_t_V_reg_875_pp0_it10[5:0] <= 6'b000000;
    tmp_4_reg_931[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_4_reg_931_pp1_it1[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_4_reg_931_pp1_it2[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_4_reg_931_pp1_it3[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_4_reg_931_pp1_it4[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_4_reg_931_pp1_it5[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_4_reg_931_pp1_it6[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_4_reg_931_pp1_it7[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_4_reg_931_pp1_it8[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_4_reg_931_pp1_it9[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_4_reg_931_pp1_it10[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_4_reg_931_pp1_it11[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_4_reg_931_pp1_it12[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_4_reg_931_pp1_it13[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_4_reg_931_pp1_it14[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_4_reg_931_pp1_it15[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_4_reg_931_pp1_it16[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_4_reg_931_pp1_it17[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_4_reg_931_pp1_it18[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_4_reg_931_pp1_it19[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_4_reg_931_pp1_it20[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_4_reg_931_pp1_it21[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_4_reg_931_pp1_it22[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_4_reg_931_pp1_it23[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_4_reg_931_pp1_it24[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_4_reg_931_pp1_it25[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_4_reg_931_pp1_it26[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_4_reg_931_pp1_it27[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_4_reg_931_pp1_it28[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_4_reg_931_pp1_it29[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_4_reg_931_pp1_it30[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_4_reg_931_pp1_it31[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_4_reg_931_pp1_it32[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_4_reg_931_pp1_it33[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_4_reg_931_pp1_it34[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    t_V_63_reg_943[5:0] <= 6'b000000;
    ap_reg_ppstg_t_V_63_reg_943_pp1_it2[5:0] <= 6'b000000;
    ap_reg_ppstg_t_V_63_reg_943_pp1_it3[5:0] <= 6'b000000;
    ap_reg_ppstg_t_V_63_reg_943_pp1_it4[5:0] <= 6'b000000;
    ap_reg_ppstg_t_V_63_reg_943_pp1_it5[5:0] <= 6'b000000;
    ap_reg_ppstg_t_V_63_reg_943_pp1_it6[5:0] <= 6'b000000;
    ap_reg_ppstg_t_V_63_reg_943_pp1_it7[5:0] <= 6'b000000;
    ap_reg_ppstg_t_V_63_reg_943_pp1_it8[5:0] <= 6'b000000;
    ap_reg_ppstg_t_V_63_reg_943_pp1_it9[5:0] <= 6'b000000;
    ap_reg_ppstg_t_V_63_reg_943_pp1_it10[5:0] <= 6'b000000;
    tmp_reg_1050[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_1050_pp2_it1[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_1050_pp2_it2[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_1050_pp2_it3[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_1050_pp2_it4[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_1050_pp2_it5[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
end



endmodule //pitchshifting

