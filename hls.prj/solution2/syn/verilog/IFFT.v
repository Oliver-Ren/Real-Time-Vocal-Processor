// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.2
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module IFFT (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        xreal_V_address0,
        xreal_V_ce0,
        xreal_V_we0,
        xreal_V_d0,
        xreal_V_q0,
        xreal_V_address1,
        xreal_V_ce1,
        xreal_V_q1,
        ximag_V_address0,
        ximag_V_ce0,
        ximag_V_we0,
        ximag_V_d0,
        ximag_V_q0,
        ximag_V_address1,
        ximag_V_ce1,
        ximag_V_q1
);

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] xreal_V_address0;
output   xreal_V_ce0;
output   xreal_V_we0;
output  [31:0] xreal_V_d0;
input  [31:0] xreal_V_q0;
output  [9:0] xreal_V_address1;
output   xreal_V_ce1;
input  [31:0] xreal_V_q1;
output  [9:0] ximag_V_address0;
output   ximag_V_ce0;
output   ximag_V_we0;
output  [31:0] ximag_V_d0;
input  [31:0] ximag_V_q0;
output  [9:0] ximag_V_address1;
output   ximag_V_ce1;
input  [31:0] ximag_V_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] xreal_V_address0;
reg xreal_V_ce0;
reg xreal_V_we0;
reg[31:0] xreal_V_d0;
reg xreal_V_ce1;
reg[9:0] ximag_V_address0;
reg ximag_V_ce0;
reg ximag_V_we0;
reg[31:0] ximag_V_d0;
reg ximag_V_ce1;
reg   [5:0] ap_CS_fsm = 6'b000000;
wire   [8:0] j_fu_285_p2;
reg   [8:0] j_reg_627;
wire   [0:0] exitcond8_fu_291_p2;
wire   [3:0] indvar_next1_fu_372_p2;
reg   [3:0] indvar_next1_reg_649;
wire   [31:0] tmp_26_fu_388_p1;
reg   [31:0] tmp_26_reg_654;
wire   [0:0] exitcond7_fu_366_p2;
wire   [29:0] smax7_fu_408_p3;
reg   [29:0] smax7_reg_659;
wire   [31:0] indvar_next_fu_422_p2;
reg   [31:0] indvar_next_reg_664;
wire   [31:0] grp_fu_416_p2;
reg   [31:0] k_reg_669;
wire   [31:0] m_1_fu_444_p2;
wire   [0:0] icmp_fu_438_p2;
wire   [31:0] tmp11_fu_450_p2;
reg   [31:0] tmp11_reg_683;
wire   [29:0] j_4_fu_473_p2;
reg   [29:0] j_4_reg_691;
wire   [0:0] exitcond6_fu_468_p2;
reg   [9:0] ximag_V_addr_1_reg_701;
reg   [9:0] xreal_V_addr_1_reg_706;
reg   [9:0] xreal_V_addr_2_reg_711;
reg   [9:0] ximag_V_addr_2_reg_716;
wire   [37:0] tmp_53_fu_515_p1;
wire   [37:0] tmp_54_fu_519_p1;
wire   [37:0] tmp_55_fu_523_p1;
wire   [37:0] tmp_56_fu_527_p1;
wire   [37:0] grp_fu_531_p2;
reg   [37:0] lhs_V_cast_reg_755;
wire   [37:0] grp_fu_537_p2;
reg   [37:0] rhs_V_2_cast_reg_760;
wire   [37:0] grp_fu_543_p2;
reg   [37:0] lhs_V_1_cast_reg_765;
wire   [37:0] grp_fu_549_p2;
reg   [37:0] rhs_V_3_cast_reg_770;
wire   [31:0] r_V_6_fu_597_p2;
reg   [31:0] r_V_6_reg_775;
wire   [31:0] r_V_7_fu_603_p2;
reg   [31:0] r_V_7_reg_780;
wire   [10:0] j_3_fu_615_p2;
reg   [8:0] wreal_V_address0;
reg    wreal_V_ce0;
reg    wreal_V_we0;
reg   [31:0] wreal_V_d0;
wire   [31:0] wreal_V_q0;
reg   [8:0] wimag_V_address0;
reg    wimag_V_ce0;
reg    wimag_V_we0;
reg   [31:0] wimag_V_d0;
wire   [31:0] wimag_V_q0;
wire    grp_bitrp_fu_277_ap_start;
wire    grp_bitrp_fu_277_ap_done;
wire    grp_bitrp_fu_277_ap_idle;
wire    grp_bitrp_fu_277_ap_ready;
wire   [9:0] grp_bitrp_fu_277_xreal_V_address0;
wire    grp_bitrp_fu_277_xreal_V_ce0;
wire    grp_bitrp_fu_277_xreal_V_we0;
wire   [31:0] grp_bitrp_fu_277_xreal_V_d0;
wire   [31:0] grp_bitrp_fu_277_xreal_V_q0;
wire   [9:0] grp_bitrp_fu_277_xreal_V_address1;
wire    grp_bitrp_fu_277_xreal_V_ce1;
wire   [31:0] grp_bitrp_fu_277_xreal_V_q1;
wire   [9:0] grp_bitrp_fu_277_ximag_V_address0;
wire    grp_bitrp_fu_277_ximag_V_ce0;
wire    grp_bitrp_fu_277_ximag_V_we0;
wire   [31:0] grp_bitrp_fu_277_ximag_V_d0;
wire   [31:0] grp_bitrp_fu_277_ximag_V_q0;
wire   [9:0] grp_bitrp_fu_277_ximag_V_address1;
wire    grp_bitrp_fu_277_ximag_V_ce1;
wire   [31:0] grp_bitrp_fu_277_ximag_V_q1;
reg   [8:0] indvar1_reg_208;
reg   [3:0] indvar2_reg_219;
reg   [31:0] m_reg_230;
reg   [31:0] indvar_reg_242;
reg   [29:0] j_1_reg_254;
reg   [10:0] j_2_reg_265;
wire   [0:0] exitcond_fu_609_p2;
reg    grp_bitrp_fu_277_ap_start_ap_start_reg = 1'b0;
wire   [63:0] tmp_fu_297_p1;
wire   [63:0] tmp_23_fu_332_p1;
wire   [63:0] tmp_30_fu_497_p1;
wire   [63:0] tmp_34_fu_503_p1;
wire   [63:0] tmp_31_fu_509_p1;
wire   [63:0] tmp_28_fu_621_p1;
wire   [31:0] r_V_5_fu_590_p2;
wire   [31:0] r_V_s_fu_583_p2;
wire   [37:0] p_shl_fu_303_p3;
wire   [37:0] lhs_V13_cast_fu_315_p1;
wire   [37:0] lhs_V13_cast_fu_315_p2;
wire   [37:0] p_shl1_fu_337_p3;
wire   [37:0] rhs_V_cast_fu_349_p1;
wire   [37:0] rhs_V_cast_fu_349_p2;
wire   [30:0] tmp_52_fu_378_p4;
wire   [0:0] tmp6_fu_402_p2;
wire   [29:0] tmp_26_cast_fu_392_p4;
wire   [31:0] grp_fu_416_p0;
wire   [31:0] grp_fu_416_p1;
wire   [21:0] tr_fu_428_p4;
wire   [31:0] j_1_cast_fu_454_p1;
wire   [21:0] tmp_112_fu_479_p1;
wire   [31:0] grp_fu_491_p0;
wire   [31:0] grp_fu_491_p1;
wire   [31:0] index2_fu_458_p2;
wire   [31:0] index1_fu_463_p2;
wire   [31:0] grp_fu_491_p2;
wire   [31:0] grp_fu_531_p0;
wire   [31:0] grp_fu_531_p1;
wire   [31:0] grp_fu_537_p0;
wire   [31:0] grp_fu_537_p1;
wire   [31:0] grp_fu_543_p0;
wire   [31:0] grp_fu_543_p1;
wire   [31:0] grp_fu_549_p0;
wire   [31:0] grp_fu_549_p1;
wire   [37:0] r_V_fu_555_p2;
wire   [37:0] r_V_134_fu_569_p2;
wire   [31:0] treal_V_fu_559_p4;
wire   [31:0] timag_V_fu_573_p4;
wire    grp_fu_416_ce;
reg    grp_fu_491_ce;
wire    grp_fu_531_ce;
wire    grp_fu_537_ce;
wire    grp_fu_543_ce;
wire    grp_fu_549_ce;
reg   [5:0] ap_NS_fsm;
parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 6'b000000;
parameter    ap_ST_st2_fsm_1 = 6'b1;
parameter    ap_ST_st3_fsm_2 = 6'b10;
parameter    ap_ST_st4_fsm_3 = 6'b11;
parameter    ap_ST_st5_fsm_4 = 6'b100;
parameter    ap_ST_st6_fsm_5 = 6'b101;
parameter    ap_ST_st7_fsm_6 = 6'b110;
parameter    ap_ST_st8_fsm_7 = 6'b111;
parameter    ap_ST_st9_fsm_8 = 6'b1000;
parameter    ap_ST_st10_fsm_9 = 6'b1001;
parameter    ap_ST_st11_fsm_10 = 6'b1010;
parameter    ap_ST_st12_fsm_11 = 6'b1011;
parameter    ap_ST_st13_fsm_12 = 6'b1100;
parameter    ap_ST_st14_fsm_13 = 6'b1101;
parameter    ap_ST_st15_fsm_14 = 6'b1110;
parameter    ap_ST_st16_fsm_15 = 6'b1111;
parameter    ap_ST_st17_fsm_16 = 6'b10000;
parameter    ap_ST_st18_fsm_17 = 6'b10001;
parameter    ap_ST_st19_fsm_18 = 6'b10010;
parameter    ap_ST_st20_fsm_19 = 6'b10011;
parameter    ap_ST_st21_fsm_20 = 6'b10100;
parameter    ap_ST_st22_fsm_21 = 6'b10101;
parameter    ap_ST_st23_fsm_22 = 6'b10110;
parameter    ap_ST_st24_fsm_23 = 6'b10111;
parameter    ap_ST_st25_fsm_24 = 6'b11000;
parameter    ap_ST_st26_fsm_25 = 6'b11001;
parameter    ap_ST_st27_fsm_26 = 6'b11010;
parameter    ap_ST_st28_fsm_27 = 6'b11011;
parameter    ap_ST_st29_fsm_28 = 6'b11100;
parameter    ap_ST_st30_fsm_29 = 6'b11101;
parameter    ap_ST_st31_fsm_30 = 6'b11110;
parameter    ap_ST_st32_fsm_31 = 6'b11111;
parameter    ap_ST_st33_fsm_32 = 6'b100000;
parameter    ap_ST_st34_fsm_33 = 6'b100001;
parameter    ap_ST_st35_fsm_34 = 6'b100010;
parameter    ap_ST_st36_fsm_35 = 6'b100011;
parameter    ap_ST_st37_fsm_36 = 6'b100100;
parameter    ap_ST_st38_fsm_37 = 6'b100101;
parameter    ap_ST_st39_fsm_38 = 6'b100110;
parameter    ap_ST_st40_fsm_39 = 6'b100111;
parameter    ap_ST_st41_fsm_40 = 6'b101000;
parameter    ap_ST_st42_fsm_41 = 6'b101001;
parameter    ap_ST_st43_fsm_42 = 6'b101010;
parameter    ap_ST_st44_fsm_43 = 6'b101011;
parameter    ap_ST_st45_fsm_44 = 6'b101100;
parameter    ap_ST_st46_fsm_45 = 6'b101101;
parameter    ap_ST_st47_fsm_46 = 6'b101110;
parameter    ap_ST_st48_fsm_47 = 6'b101111;
parameter    ap_ST_st49_fsm_48 = 6'b110000;
parameter    ap_ST_st50_fsm_49 = 6'b110001;
parameter    ap_ST_st51_fsm_50 = 6'b110010;
parameter    ap_ST_st52_fsm_51 = 6'b110011;
parameter    ap_ST_st53_fsm_52 = 6'b110100;
parameter    ap_ST_st54_fsm_53 = 6'b110101;
parameter    ap_ST_st55_fsm_54 = 6'b110110;
parameter    ap_ST_st56_fsm_55 = 6'b110111;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv30_0 = 30'b000000000000000000000000000000;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_40 = 32'b1000000;
parameter    ap_const_lv9_1 = 9'b1;
parameter    ap_const_lv9_1FF = 9'b111111111;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_25 = 32'b100101;
parameter    ap_const_lv4_A = 4'b1010;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv31_0 = 31'b0000000000000000000000000000000;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv22_1 = 22'b1;
parameter    ap_const_lv30_1 = 30'b1;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv11_400 = 11'b10000000000;
parameter    ap_const_lv11_1 = 11'b1;
parameter    ap_true = 1'b1;


FFT_wreal_V #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
wreal_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( wreal_V_address0 ),
    .ce0( wreal_V_ce0 ),
    .we0( wreal_V_we0 ),
    .d0( wreal_V_d0 ),
    .q0( wreal_V_q0 )
);

FFT_wreal_V #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
wimag_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( wimag_V_address0 ),
    .ce0( wimag_V_ce0 ),
    .we0( wimag_V_we0 ),
    .d0( wimag_V_d0 ),
    .q0( wimag_V_q0 )
);

bitrp grp_bitrp_fu_277(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_bitrp_fu_277_ap_start ),
    .ap_done( grp_bitrp_fu_277_ap_done ),
    .ap_idle( grp_bitrp_fu_277_ap_idle ),
    .ap_ready( grp_bitrp_fu_277_ap_ready ),
    .xreal_V_address0( grp_bitrp_fu_277_xreal_V_address0 ),
    .xreal_V_ce0( grp_bitrp_fu_277_xreal_V_ce0 ),
    .xreal_V_we0( grp_bitrp_fu_277_xreal_V_we0 ),
    .xreal_V_d0( grp_bitrp_fu_277_xreal_V_d0 ),
    .xreal_V_q0( grp_bitrp_fu_277_xreal_V_q0 ),
    .xreal_V_address1( grp_bitrp_fu_277_xreal_V_address1 ),
    .xreal_V_ce1( grp_bitrp_fu_277_xreal_V_ce1 ),
    .xreal_V_q1( grp_bitrp_fu_277_xreal_V_q1 ),
    .ximag_V_address0( grp_bitrp_fu_277_ximag_V_address0 ),
    .ximag_V_ce0( grp_bitrp_fu_277_ximag_V_ce0 ),
    .ximag_V_we0( grp_bitrp_fu_277_ximag_V_we0 ),
    .ximag_V_d0( grp_bitrp_fu_277_ximag_V_d0 ),
    .ximag_V_q0( grp_bitrp_fu_277_ximag_V_q0 ),
    .ximag_V_address1( grp_bitrp_fu_277_ximag_V_address1 ),
    .ximag_V_ce1( grp_bitrp_fu_277_ximag_V_ce1 ),
    .ximag_V_q1( grp_bitrp_fu_277_ximag_V_q1 )
);

top_mul_32s_32s_32_6 #(
    .ID( 28 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
top_mul_32s_32s_32_6_U28(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_416_p0 ),
    .din1( grp_fu_416_p1 ),
    .ce( grp_fu_416_ce ),
    .dout( grp_fu_416_p2 )
);

top_sdiv_32ns_32s_32_35 #(
    .ID( 29 ),
    .NUM_STAGE( 35 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
top_sdiv_32ns_32s_32_35_U29(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_491_p0 ),
    .din1( grp_fu_491_p1 ),
    .ce( grp_fu_491_ce ),
    .dout( grp_fu_491_p2 )
);

top_mul_32s_32s_38_6 #(
    .ID( 30 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 38 ))
top_mul_32s_32s_38_6_U30(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_531_p0 ),
    .din1( grp_fu_531_p1 ),
    .ce( grp_fu_531_ce ),
    .dout( grp_fu_531_p2 )
);

top_mul_32s_32s_38_6 #(
    .ID( 31 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 38 ))
top_mul_32s_32s_38_6_U31(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_537_p0 ),
    .din1( grp_fu_537_p1 ),
    .ce( grp_fu_537_ce ),
    .dout( grp_fu_537_p2 )
);

top_mul_32s_32s_38_6 #(
    .ID( 32 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 38 ))
top_mul_32s_32s_38_6_U32(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_543_p0 ),
    .din1( grp_fu_543_p1 ),
    .ce( grp_fu_543_ce ),
    .dout( grp_fu_543_p2 )
);

top_mul_32s_32s_38_6 #(
    .ID( 33 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 38 ))
top_mul_32s_32s_38_6_U33(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_549_p0 ),
    .din1( grp_fu_549_p1 ),
    .ce( grp_fu_549_ce ),
    .dout( grp_fu_549_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// grp_bitrp_fu_277_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_bitrp_fu_277_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_bitrp_fu_277_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            grp_bitrp_fu_277_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_bitrp_fu_277_ap_ready)) begin
            grp_bitrp_fu_277_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(ap_const_logic_0 == grp_bitrp_fu_277_ap_done))) begin
        indvar1_reg_208 <= ap_const_lv9_0;
    end else if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        indvar1_reg_208 <= j_reg_627;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st3_fsm_2 == ap_CS_fsm) & ~(exitcond8_fu_291_p2 == ap_const_lv1_0))) begin
        indvar2_reg_219 <= ap_const_lv4_0;
    end else if (((ap_ST_st11_fsm_10 == ap_CS_fsm) & (ap_const_lv1_0 == icmp_fu_438_p2))) begin
        indvar2_reg_219 <= indvar_next1_reg_649;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st13_fsm_12 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond6_fu_468_p2))) begin
        indvar_reg_242 <= indvar_next_reg_664;
    end else if (((ap_ST_st5_fsm_4 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond7_fu_366_p2))) begin
        indvar_reg_242 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st12_fsm_11 == ap_CS_fsm)) begin
        j_1_reg_254 <= ap_const_lv30_0;
    end else if ((ap_ST_st55_fsm_54 == ap_CS_fsm)) begin
        j_1_reg_254 <= j_4_reg_691;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st5_fsm_4 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond7_fu_366_p2))) begin
        j_2_reg_265 <= ap_const_lv11_0;
    end else if (((ap_ST_st56_fsm_55 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond_fu_609_p2))) begin
        j_2_reg_265 <= j_3_fu_615_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st3_fsm_2 == ap_CS_fsm) & ~(exitcond8_fu_291_p2 == ap_const_lv1_0))) begin
        m_reg_230[1] <= 1'b1;
        m_reg_230[2] <= 1'b0;
        m_reg_230[3] <= 1'b0;
        m_reg_230[4] <= 1'b0;
        m_reg_230[5] <= 1'b0;
        m_reg_230[6] <= 1'b0;
        m_reg_230[7] <= 1'b0;
        m_reg_230[8] <= 1'b0;
        m_reg_230[9] <= 1'b0;
        m_reg_230[10] <= 1'b0;
        m_reg_230[11] <= 1'b0;
        m_reg_230[12] <= 1'b0;
        m_reg_230[13] <= 1'b0;
        m_reg_230[14] <= 1'b0;
        m_reg_230[15] <= 1'b0;
        m_reg_230[16] <= 1'b0;
        m_reg_230[17] <= 1'b0;
        m_reg_230[18] <= 1'b0;
        m_reg_230[19] <= 1'b0;
        m_reg_230[20] <= 1'b0;
        m_reg_230[21] <= 1'b0;
        m_reg_230[22] <= 1'b0;
        m_reg_230[23] <= 1'b0;
        m_reg_230[24] <= 1'b0;
        m_reg_230[25] <= 1'b0;
        m_reg_230[26] <= 1'b0;
        m_reg_230[27] <= 1'b0;
        m_reg_230[28] <= 1'b0;
        m_reg_230[29] <= 1'b0;
        m_reg_230[30] <= 1'b0;
        m_reg_230[31] <= 1'b0;
    end else if (((ap_ST_st11_fsm_10 == ap_CS_fsm) & (ap_const_lv1_0 == icmp_fu_438_p2))) begin
        m_reg_230[1] <= m_1_fu_444_p2[1];
        m_reg_230[2] <= m_1_fu_444_p2[2];
        m_reg_230[3] <= m_1_fu_444_p2[3];
        m_reg_230[4] <= m_1_fu_444_p2[4];
        m_reg_230[5] <= m_1_fu_444_p2[5];
        m_reg_230[6] <= m_1_fu_444_p2[6];
        m_reg_230[7] <= m_1_fu_444_p2[7];
        m_reg_230[8] <= m_1_fu_444_p2[8];
        m_reg_230[9] <= m_1_fu_444_p2[9];
        m_reg_230[10] <= m_1_fu_444_p2[10];
        m_reg_230[11] <= m_1_fu_444_p2[11];
        m_reg_230[12] <= m_1_fu_444_p2[12];
        m_reg_230[13] <= m_1_fu_444_p2[13];
        m_reg_230[14] <= m_1_fu_444_p2[14];
        m_reg_230[15] <= m_1_fu_444_p2[15];
        m_reg_230[16] <= m_1_fu_444_p2[16];
        m_reg_230[17] <= m_1_fu_444_p2[17];
        m_reg_230[18] <= m_1_fu_444_p2[18];
        m_reg_230[19] <= m_1_fu_444_p2[19];
        m_reg_230[20] <= m_1_fu_444_p2[20];
        m_reg_230[21] <= m_1_fu_444_p2[21];
        m_reg_230[22] <= m_1_fu_444_p2[22];
        m_reg_230[23] <= m_1_fu_444_p2[23];
        m_reg_230[24] <= m_1_fu_444_p2[24];
        m_reg_230[25] <= m_1_fu_444_p2[25];
        m_reg_230[26] <= m_1_fu_444_p2[26];
        m_reg_230[27] <= m_1_fu_444_p2[27];
        m_reg_230[28] <= m_1_fu_444_p2[28];
        m_reg_230[29] <= m_1_fu_444_p2[29];
        m_reg_230[30] <= m_1_fu_444_p2[30];
        m_reg_230[31] <= m_1_fu_444_p2[31];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st5_fsm_4 == ap_CS_fsm)) begin
        indvar_next1_reg_649 <= indvar_next1_fu_372_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        indvar_next_reg_664 <= indvar_next_fu_422_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st13_fsm_12 == ap_CS_fsm)) begin
        j_4_reg_691 <= j_4_fu_473_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        j_reg_627 <= j_fu_285_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st11_fsm_10 == ap_CS_fsm)) begin
        k_reg_669 <= grp_fu_416_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st53_fsm_52 == ap_CS_fsm)) begin
        lhs_V_1_cast_reg_765 <= grp_fu_543_p2;
        lhs_V_cast_reg_755 <= grp_fu_531_p2;
        rhs_V_2_cast_reg_760 <= grp_fu_537_p2;
        rhs_V_3_cast_reg_770 <= grp_fu_549_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st54_fsm_53 == ap_CS_fsm)) begin
        r_V_6_reg_775 <= r_V_6_fu_597_p2;
        r_V_7_reg_780 <= r_V_7_fu_603_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st5_fsm_4 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond7_fu_366_p2))) begin
        smax7_reg_659 <= smax7_fu_408_p3;
        tmp_26_reg_654 <= tmp_26_fu_388_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st12_fsm_11 == ap_CS_fsm)) begin
        tmp11_reg_683 <= tmp11_fu_450_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st13_fsm_12 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond6_fu_468_p2))) begin
        ximag_V_addr_1_reg_701 <= tmp_30_fu_497_p1;
        ximag_V_addr_2_reg_716 <= tmp_34_fu_503_p1;
        xreal_V_addr_1_reg_706 <= tmp_30_fu_497_p1;
        xreal_V_addr_2_reg_711 <= tmp_34_fu_503_p1;
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_CS_fsm or exitcond_fu_609_p2)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm)) | ((ap_ST_st56_fsm_55 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond_fu_609_p2)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_CS_fsm or exitcond_fu_609_p2)
begin
    if (((ap_ST_st56_fsm_55 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond_fu_609_p2))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// grp_fu_491_ce assign process. ///
always @ (ap_CS_fsm or exitcond6_fu_468_p2)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) | (ap_ST_st3_fsm_2 == ap_CS_fsm) | (ap_ST_st5_fsm_4 == ap_CS_fsm) | (ap_ST_st6_fsm_5 == ap_CS_fsm) | (ap_ST_st11_fsm_10 == ap_CS_fsm) | (ap_ST_st12_fsm_11 == ap_CS_fsm) | (ap_ST_st48_fsm_47 == ap_CS_fsm) | (ap_ST_st53_fsm_52 == ap_CS_fsm) | (ap_ST_st54_fsm_53 == ap_CS_fsm) | (ap_ST_st56_fsm_55 == ap_CS_fsm) | (ap_ST_st4_fsm_3 == ap_CS_fsm) | (ap_ST_st2_fsm_1 == ap_CS_fsm) | ((ap_ST_st13_fsm_12 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond6_fu_468_p2)) | (ap_ST_st55_fsm_54 == ap_CS_fsm) | (ap_ST_st7_fsm_6 == ap_CS_fsm) | (ap_ST_st8_fsm_7 == ap_CS_fsm) | (ap_ST_st9_fsm_8 == ap_CS_fsm) | (ap_ST_st10_fsm_9 == ap_CS_fsm) | (ap_ST_st49_fsm_48 == ap_CS_fsm) | (ap_ST_st50_fsm_49 == ap_CS_fsm) | (ap_ST_st51_fsm_50 == ap_CS_fsm) | (ap_ST_st52_fsm_51 == ap_CS_fsm))) begin
        grp_fu_491_ce = ap_const_logic_0;
    end else begin
        grp_fu_491_ce = ap_const_logic_1;
    end
end

/// wimag_V_address0 assign process. ///
always @ (ap_CS_fsm or tmp_fu_297_p1 or tmp_23_fu_332_p1 or tmp_31_fu_509_p1)
begin
    if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        wimag_V_address0 = tmp_23_fu_332_p1;
    end else if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        wimag_V_address0 = ap_const_lv64_0;
    end else if ((ap_ST_st47_fsm_46 == ap_CS_fsm)) begin
        wimag_V_address0 = tmp_31_fu_509_p1;
    end else if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        wimag_V_address0 = tmp_fu_297_p1;
    end else begin
        wimag_V_address0 = tmp_23_fu_332_p1;
    end
end

/// wimag_V_ce0 assign process. ///
always @ (ap_CS_fsm or exitcond8_fu_291_p2 or grp_bitrp_fu_277_ap_done)
begin
    if ((((ap_ST_st3_fsm_2 == ap_CS_fsm) & (exitcond8_fu_291_p2 == ap_const_lv1_0)) | (ap_ST_st47_fsm_46 == ap_CS_fsm) | (ap_ST_st4_fsm_3 == ap_CS_fsm) | ((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(ap_const_logic_0 == grp_bitrp_fu_277_ap_done)))) begin
        wimag_V_ce0 = ap_const_logic_1;
    end else begin
        wimag_V_ce0 = ap_const_logic_0;
    end
end

/// wimag_V_d0 assign process. ///
always @ (ap_CS_fsm or rhs_V_cast_fu_349_p2)
begin
    if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        wimag_V_d0 = {{rhs_V_cast_fu_349_p2[ap_const_lv32_25 : ap_const_lv32_6]}};
    end else if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        wimag_V_d0 = ap_const_lv32_0;
    end else begin
        wimag_V_d0 = {{rhs_V_cast_fu_349_p2[ap_const_lv32_25 : ap_const_lv32_6]}};
    end
end

/// wimag_V_we0 assign process. ///
always @ (ap_CS_fsm or grp_bitrp_fu_277_ap_done)
begin
    if (((ap_ST_st4_fsm_3 == ap_CS_fsm) | ((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(ap_const_logic_0 == grp_bitrp_fu_277_ap_done)))) begin
        wimag_V_we0 = ap_const_logic_1;
    end else begin
        wimag_V_we0 = ap_const_logic_0;
    end
end

/// wreal_V_address0 assign process. ///
always @ (ap_CS_fsm or tmp_fu_297_p1 or tmp_23_fu_332_p1 or tmp_31_fu_509_p1)
begin
    if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        wreal_V_address0 = tmp_23_fu_332_p1;
    end else if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        wreal_V_address0 = ap_const_lv64_0;
    end else if ((ap_ST_st47_fsm_46 == ap_CS_fsm)) begin
        wreal_V_address0 = tmp_31_fu_509_p1;
    end else if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        wreal_V_address0 = tmp_fu_297_p1;
    end else begin
        wreal_V_address0 = tmp_23_fu_332_p1;
    end
end

/// wreal_V_ce0 assign process. ///
always @ (ap_CS_fsm or exitcond8_fu_291_p2 or grp_bitrp_fu_277_ap_done)
begin
    if ((((ap_ST_st3_fsm_2 == ap_CS_fsm) & (exitcond8_fu_291_p2 == ap_const_lv1_0)) | (ap_ST_st47_fsm_46 == ap_CS_fsm) | (ap_ST_st4_fsm_3 == ap_CS_fsm) | ((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(ap_const_logic_0 == grp_bitrp_fu_277_ap_done)))) begin
        wreal_V_ce0 = ap_const_logic_1;
    end else begin
        wreal_V_ce0 = ap_const_logic_0;
    end
end

/// wreal_V_d0 assign process. ///
always @ (ap_CS_fsm or lhs_V13_cast_fu_315_p2)
begin
    if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        wreal_V_d0 = {{lhs_V13_cast_fu_315_p2[ap_const_lv32_25 : ap_const_lv32_6]}};
    end else if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        wreal_V_d0 = ap_const_lv32_40;
    end else begin
        wreal_V_d0 = {{lhs_V13_cast_fu_315_p2[ap_const_lv32_25 : ap_const_lv32_6]}};
    end
end

/// wreal_V_we0 assign process. ///
always @ (ap_CS_fsm or grp_bitrp_fu_277_ap_done)
begin
    if (((ap_ST_st4_fsm_3 == ap_CS_fsm) | ((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(ap_const_logic_0 == grp_bitrp_fu_277_ap_done)))) begin
        wreal_V_we0 = ap_const_logic_1;
    end else begin
        wreal_V_we0 = ap_const_logic_0;
    end
end

/// ximag_V_address0 assign process. ///
always @ (ap_CS_fsm or ximag_V_addr_1_reg_701 or ximag_V_addr_2_reg_716 or grp_bitrp_fu_277_ximag_V_address0 or tmp_28_fu_621_p1)
begin
    if ((ap_ST_st56_fsm_55 == ap_CS_fsm)) begin
        ximag_V_address0 = tmp_28_fu_621_p1;
    end else if (((ap_ST_st53_fsm_52 == ap_CS_fsm) | (ap_ST_st54_fsm_53 == ap_CS_fsm))) begin
        ximag_V_address0 = ximag_V_addr_2_reg_716;
    end else if (((ap_ST_st47_fsm_46 == ap_CS_fsm) | (ap_ST_st55_fsm_54 == ap_CS_fsm))) begin
        ximag_V_address0 = ximag_V_addr_1_reg_701;
    end else if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        ximag_V_address0 = grp_bitrp_fu_277_ximag_V_address0;
    end else begin
        ximag_V_address0 = tmp_28_fu_621_p1;
    end
end

/// ximag_V_ce0 assign process. ///
always @ (ap_CS_fsm or grp_bitrp_fu_277_ximag_V_ce0 or exitcond_fu_609_p2)
begin
    if (((ap_ST_st47_fsm_46 == ap_CS_fsm) | (ap_ST_st53_fsm_52 == ap_CS_fsm) | (ap_ST_st54_fsm_53 == ap_CS_fsm) | (ap_ST_st55_fsm_54 == ap_CS_fsm) | ((ap_ST_st56_fsm_55 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond_fu_609_p2)))) begin
        ximag_V_ce0 = ap_const_logic_1;
    end else if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        ximag_V_ce0 = grp_bitrp_fu_277_ximag_V_ce0;
    end else begin
        ximag_V_ce0 = ap_const_logic_0;
    end
end

/// ximag_V_ce1 assign process. ///
always @ (ap_CS_fsm or grp_bitrp_fu_277_ximag_V_ce1)
begin
    if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        ximag_V_ce1 = grp_bitrp_fu_277_ximag_V_ce1;
    end else begin
        ximag_V_ce1 = ap_const_logic_0;
    end
end

/// ximag_V_d0 assign process. ///
always @ (ap_CS_fsm or r_V_7_reg_780 or grp_bitrp_fu_277_ximag_V_d0 or r_V_5_fu_590_p2)
begin
    if ((ap_ST_st56_fsm_55 == ap_CS_fsm)) begin
        ximag_V_d0 = ap_const_lv32_0;
    end else if ((ap_ST_st55_fsm_54 == ap_CS_fsm)) begin
        ximag_V_d0 = r_V_7_reg_780;
    end else if ((ap_ST_st54_fsm_53 == ap_CS_fsm)) begin
        ximag_V_d0 = r_V_5_fu_590_p2;
    end else if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        ximag_V_d0 = grp_bitrp_fu_277_ximag_V_d0;
    end else begin
        ximag_V_d0 = r_V_5_fu_590_p2;
    end
end

/// ximag_V_we0 assign process. ///
always @ (ap_CS_fsm or grp_bitrp_fu_277_ximag_V_we0 or exitcond_fu_609_p2)
begin
    if (((ap_ST_st54_fsm_53 == ap_CS_fsm) | (ap_ST_st55_fsm_54 == ap_CS_fsm) | ((ap_ST_st56_fsm_55 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond_fu_609_p2)))) begin
        ximag_V_we0 = ap_const_logic_1;
    end else if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        ximag_V_we0 = grp_bitrp_fu_277_ximag_V_we0;
    end else begin
        ximag_V_we0 = ap_const_logic_0;
    end
end

/// xreal_V_address0 assign process. ///
always @ (ap_CS_fsm or xreal_V_addr_1_reg_706 or xreal_V_addr_2_reg_711 or grp_bitrp_fu_277_xreal_V_address0 or tmp_28_fu_621_p1)
begin
    if ((ap_ST_st56_fsm_55 == ap_CS_fsm)) begin
        xreal_V_address0 = tmp_28_fu_621_p1;
    end else if (((ap_ST_st53_fsm_52 == ap_CS_fsm) | (ap_ST_st54_fsm_53 == ap_CS_fsm))) begin
        xreal_V_address0 = xreal_V_addr_2_reg_711;
    end else if (((ap_ST_st47_fsm_46 == ap_CS_fsm) | (ap_ST_st55_fsm_54 == ap_CS_fsm))) begin
        xreal_V_address0 = xreal_V_addr_1_reg_706;
    end else if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        xreal_V_address0 = grp_bitrp_fu_277_xreal_V_address0;
    end else begin
        xreal_V_address0 = tmp_28_fu_621_p1;
    end
end

/// xreal_V_ce0 assign process. ///
always @ (ap_CS_fsm or grp_bitrp_fu_277_xreal_V_ce0 or exitcond_fu_609_p2)
begin
    if (((ap_ST_st47_fsm_46 == ap_CS_fsm) | (ap_ST_st53_fsm_52 == ap_CS_fsm) | (ap_ST_st54_fsm_53 == ap_CS_fsm) | (ap_ST_st55_fsm_54 == ap_CS_fsm) | ((ap_ST_st56_fsm_55 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond_fu_609_p2)))) begin
        xreal_V_ce0 = ap_const_logic_1;
    end else if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        xreal_V_ce0 = grp_bitrp_fu_277_xreal_V_ce0;
    end else begin
        xreal_V_ce0 = ap_const_logic_0;
    end
end

/// xreal_V_ce1 assign process. ///
always @ (ap_CS_fsm or grp_bitrp_fu_277_xreal_V_ce1)
begin
    if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        xreal_V_ce1 = grp_bitrp_fu_277_xreal_V_ce1;
    end else begin
        xreal_V_ce1 = ap_const_logic_0;
    end
end

/// xreal_V_d0 assign process. ///
always @ (ap_CS_fsm or r_V_6_reg_775 or grp_bitrp_fu_277_xreal_V_d0 or r_V_s_fu_583_p2)
begin
    if ((ap_ST_st56_fsm_55 == ap_CS_fsm)) begin
        xreal_V_d0 = ap_const_lv32_0;
    end else if ((ap_ST_st55_fsm_54 == ap_CS_fsm)) begin
        xreal_V_d0 = r_V_6_reg_775;
    end else if ((ap_ST_st54_fsm_53 == ap_CS_fsm)) begin
        xreal_V_d0 = r_V_s_fu_583_p2;
    end else if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        xreal_V_d0 = grp_bitrp_fu_277_xreal_V_d0;
    end else begin
        xreal_V_d0 = r_V_s_fu_583_p2;
    end
end

/// xreal_V_we0 assign process. ///
always @ (ap_CS_fsm or grp_bitrp_fu_277_xreal_V_we0 or exitcond_fu_609_p2)
begin
    if (((ap_ST_st54_fsm_53 == ap_CS_fsm) | (ap_ST_st55_fsm_54 == ap_CS_fsm) | ((ap_ST_st56_fsm_55 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond_fu_609_p2)))) begin
        xreal_V_we0 = ap_const_logic_1;
    end else if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        xreal_V_we0 = grp_bitrp_fu_277_xreal_V_we0;
    end else begin
        xreal_V_we0 = ap_const_logic_0;
    end
end
always @ (ap_start or ap_CS_fsm or exitcond8_fu_291_p2 or exitcond7_fu_366_p2 or icmp_fu_438_p2 or exitcond6_fu_468_p2 or grp_bitrp_fu_277_ap_done or exitcond_fu_609_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        ap_ST_st2_fsm_1 : 
            if (~(ap_const_logic_0 == grp_bitrp_fu_277_ap_done)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        ap_ST_st3_fsm_2 : 
            if (~(exitcond8_fu_291_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        ap_ST_st4_fsm_3 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
        ap_ST_st5_fsm_4 : 
            if ((ap_const_lv1_0 == exitcond7_fu_366_p2)) begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st56_fsm_55;
            end
        ap_ST_st6_fsm_5 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
        ap_ST_st7_fsm_6 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
        ap_ST_st8_fsm_7 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
        ap_ST_st9_fsm_8 : 
            ap_NS_fsm = ap_ST_st10_fsm_9;
        ap_ST_st10_fsm_9 : 
            ap_NS_fsm = ap_ST_st11_fsm_10;
        ap_ST_st11_fsm_10 : 
            if ((ap_const_lv1_0 == icmp_fu_438_p2)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st12_fsm_11;
            end
        ap_ST_st12_fsm_11 : 
            ap_NS_fsm = ap_ST_st13_fsm_12;
        ap_ST_st13_fsm_12 : 
            if ((ap_const_lv1_0 == exitcond6_fu_468_p2)) begin
                ap_NS_fsm = ap_ST_st14_fsm_13;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        ap_ST_st14_fsm_13 : 
            ap_NS_fsm = ap_ST_st15_fsm_14;
        ap_ST_st15_fsm_14 : 
            ap_NS_fsm = ap_ST_st16_fsm_15;
        ap_ST_st16_fsm_15 : 
            ap_NS_fsm = ap_ST_st17_fsm_16;
        ap_ST_st17_fsm_16 : 
            ap_NS_fsm = ap_ST_st18_fsm_17;
        ap_ST_st18_fsm_17 : 
            ap_NS_fsm = ap_ST_st19_fsm_18;
        ap_ST_st19_fsm_18 : 
            ap_NS_fsm = ap_ST_st20_fsm_19;
        ap_ST_st20_fsm_19 : 
            ap_NS_fsm = ap_ST_st21_fsm_20;
        ap_ST_st21_fsm_20 : 
            ap_NS_fsm = ap_ST_st22_fsm_21;
        ap_ST_st22_fsm_21 : 
            ap_NS_fsm = ap_ST_st23_fsm_22;
        ap_ST_st23_fsm_22 : 
            ap_NS_fsm = ap_ST_st24_fsm_23;
        ap_ST_st24_fsm_23 : 
            ap_NS_fsm = ap_ST_st25_fsm_24;
        ap_ST_st25_fsm_24 : 
            ap_NS_fsm = ap_ST_st26_fsm_25;
        ap_ST_st26_fsm_25 : 
            ap_NS_fsm = ap_ST_st27_fsm_26;
        ap_ST_st27_fsm_26 : 
            ap_NS_fsm = ap_ST_st28_fsm_27;
        ap_ST_st28_fsm_27 : 
            ap_NS_fsm = ap_ST_st29_fsm_28;
        ap_ST_st29_fsm_28 : 
            ap_NS_fsm = ap_ST_st30_fsm_29;
        ap_ST_st30_fsm_29 : 
            ap_NS_fsm = ap_ST_st31_fsm_30;
        ap_ST_st31_fsm_30 : 
            ap_NS_fsm = ap_ST_st32_fsm_31;
        ap_ST_st32_fsm_31 : 
            ap_NS_fsm = ap_ST_st33_fsm_32;
        ap_ST_st33_fsm_32 : 
            ap_NS_fsm = ap_ST_st34_fsm_33;
        ap_ST_st34_fsm_33 : 
            ap_NS_fsm = ap_ST_st35_fsm_34;
        ap_ST_st35_fsm_34 : 
            ap_NS_fsm = ap_ST_st36_fsm_35;
        ap_ST_st36_fsm_35 : 
            ap_NS_fsm = ap_ST_st37_fsm_36;
        ap_ST_st37_fsm_36 : 
            ap_NS_fsm = ap_ST_st38_fsm_37;
        ap_ST_st38_fsm_37 : 
            ap_NS_fsm = ap_ST_st39_fsm_38;
        ap_ST_st39_fsm_38 : 
            ap_NS_fsm = ap_ST_st40_fsm_39;
        ap_ST_st40_fsm_39 : 
            ap_NS_fsm = ap_ST_st41_fsm_40;
        ap_ST_st41_fsm_40 : 
            ap_NS_fsm = ap_ST_st42_fsm_41;
        ap_ST_st42_fsm_41 : 
            ap_NS_fsm = ap_ST_st43_fsm_42;
        ap_ST_st43_fsm_42 : 
            ap_NS_fsm = ap_ST_st44_fsm_43;
        ap_ST_st44_fsm_43 : 
            ap_NS_fsm = ap_ST_st45_fsm_44;
        ap_ST_st45_fsm_44 : 
            ap_NS_fsm = ap_ST_st46_fsm_45;
        ap_ST_st46_fsm_45 : 
            ap_NS_fsm = ap_ST_st47_fsm_46;
        ap_ST_st47_fsm_46 : 
            ap_NS_fsm = ap_ST_st48_fsm_47;
        ap_ST_st48_fsm_47 : 
            ap_NS_fsm = ap_ST_st49_fsm_48;
        ap_ST_st49_fsm_48 : 
            ap_NS_fsm = ap_ST_st50_fsm_49;
        ap_ST_st50_fsm_49 : 
            ap_NS_fsm = ap_ST_st51_fsm_50;
        ap_ST_st51_fsm_50 : 
            ap_NS_fsm = ap_ST_st52_fsm_51;
        ap_ST_st52_fsm_51 : 
            ap_NS_fsm = ap_ST_st53_fsm_52;
        ap_ST_st53_fsm_52 : 
            ap_NS_fsm = ap_ST_st54_fsm_53;
        ap_ST_st54_fsm_53 : 
            ap_NS_fsm = ap_ST_st55_fsm_54;
        ap_ST_st55_fsm_54 : 
            ap_NS_fsm = ap_ST_st13_fsm_12;
        ap_ST_st56_fsm_55 : 
            if (~(ap_const_lv1_0 == exitcond_fu_609_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st56_fsm_55;
            end
        default : 
            ap_NS_fsm = 'bx;
    endcase
end
assign exitcond6_fu_468_p2 = (j_1_reg_254 == smax7_reg_659? 1'b1: 1'b0);
assign exitcond7_fu_366_p2 = (indvar2_reg_219 == ap_const_lv4_A? 1'b1: 1'b0);
assign exitcond8_fu_291_p2 = (indvar1_reg_208 == ap_const_lv9_1FF? 1'b1: 1'b0);
assign exitcond_fu_609_p2 = (j_2_reg_265 == ap_const_lv11_400? 1'b1: 1'b0);
assign grp_bitrp_fu_277_ap_start = grp_bitrp_fu_277_ap_start_ap_start_reg;
assign grp_bitrp_fu_277_ximag_V_q0 = ximag_V_q0;
assign grp_bitrp_fu_277_ximag_V_q1 = ximag_V_q1;
assign grp_bitrp_fu_277_xreal_V_q0 = xreal_V_q0;
assign grp_bitrp_fu_277_xreal_V_q1 = xreal_V_q1;
assign grp_fu_416_ce = ap_const_logic_1;
assign grp_fu_416_p0 = m_reg_230;
assign grp_fu_416_p1 = indvar_reg_242;
assign grp_fu_491_p0 = {{tmp_112_fu_479_p1}, {ap_const_lv10_0}};
assign grp_fu_491_p1 = m_reg_230;
assign grp_fu_531_ce = ap_const_logic_1;
assign grp_fu_531_p0 = tmp_55_fu_523_p1;
assign grp_fu_531_p1 = tmp_56_fu_527_p1;
assign grp_fu_537_ce = ap_const_logic_1;
assign grp_fu_537_p0 = tmp_53_fu_515_p1;
assign grp_fu_537_p1 = tmp_54_fu_519_p1;
assign grp_fu_543_ce = ap_const_logic_1;
assign grp_fu_543_p0 = tmp_53_fu_515_p1;
assign grp_fu_543_p1 = tmp_56_fu_527_p1;
assign grp_fu_549_ce = ap_const_logic_1;
assign grp_fu_549_p0 = tmp_55_fu_523_p1;
assign grp_fu_549_p1 = tmp_54_fu_519_p1;
assign icmp_fu_438_p2 = ($signed(tr_fu_428_p4) < $signed(22'b1)? 1'b1: 1'b0);
assign index1_fu_463_p2 = (k_reg_669 + j_1_cast_fu_454_p1);
assign index2_fu_458_p2 = (tmp11_reg_683 + j_1_cast_fu_454_p1);
assign indvar_next1_fu_372_p2 = (indvar2_reg_219 + ap_const_lv4_1);
assign indvar_next_fu_422_p2 = (indvar_reg_242 + ap_const_lv32_1);
assign j_1_cast_fu_454_p1 = $unsigned(j_1_reg_254);
assign j_3_fu_615_p2 = (j_2_reg_265 + ap_const_lv11_1);
assign j_4_fu_473_p2 = (j_1_reg_254 + ap_const_lv30_1);
assign j_fu_285_p2 = (indvar1_reg_208 + ap_const_lv9_1);
assign lhs_V13_cast_fu_315_p1 = $signed(wreal_V_q0);
assign lhs_V13_cast_fu_315_p2 = (p_shl_fu_303_p3 - lhs_V13_cast_fu_315_p1);
assign m_1_fu_444_p2 = m_reg_230 << ap_const_lv32_1;
assign p_shl1_fu_337_p3 = {{wimag_V_q0}, {ap_const_lv6_0}};
assign p_shl_fu_303_p3 = {{wreal_V_q0}, {ap_const_lv6_0}};
assign r_V_134_fu_569_p2 = (rhs_V_3_cast_reg_770 + lhs_V_1_cast_reg_765);
assign r_V_5_fu_590_p2 = (timag_V_fu_573_p4 + ximag_V_q0);
assign r_V_6_fu_597_p2 = (xreal_V_q0 - treal_V_fu_559_p4);
assign r_V_7_fu_603_p2 = (ximag_V_q0 - timag_V_fu_573_p4);
assign r_V_fu_555_p2 = (lhs_V_cast_reg_755 - rhs_V_2_cast_reg_760);
assign r_V_s_fu_583_p2 = (treal_V_fu_559_p4 + xreal_V_q0);
assign rhs_V_cast_fu_349_p1 = $signed(wimag_V_q0);
assign rhs_V_cast_fu_349_p2 = (p_shl1_fu_337_p3 - rhs_V_cast_fu_349_p1);
assign smax7_fu_408_p3 = ((tmp6_fu_402_p2)? tmp_26_cast_fu_392_p4: ap_const_lv30_0);
assign timag_V_fu_573_p4 = {{r_V_134_fu_569_p2[ap_const_lv32_25 : ap_const_lv32_6]}};
assign tmp11_fu_450_p2 = (k_reg_669 + tmp_26_reg_654);
assign tmp6_fu_402_p2 = ($signed(tmp_52_fu_378_p4) > $signed(31'b0000000000000000000000000000000)? 1'b1: 1'b0);
assign tmp_112_fu_479_p1 = j_1_reg_254[21:0];
assign tmp_23_fu_332_p1 = $unsigned(j_reg_627);
assign tmp_26_cast_fu_392_p4 = {{m_reg_230[ap_const_lv32_1E : ap_const_lv32_1]}};
assign tmp_26_fu_388_p1 = $signed(tmp_52_fu_378_p4);
assign tmp_28_fu_621_p1 = $unsigned(j_2_reg_265);
assign tmp_30_fu_497_p1 = $signed(index2_fu_458_p2);
assign tmp_31_fu_509_p1 = $signed(grp_fu_491_p2);
assign tmp_34_fu_503_p1 = $signed(index1_fu_463_p2);
assign tmp_52_fu_378_p4 = {{m_reg_230[ap_const_lv32_1F : ap_const_lv32_1]}};
assign tmp_53_fu_515_p1 = $signed(ximag_V_q0);
assign tmp_54_fu_519_p1 = $signed(wimag_V_q0);
assign tmp_55_fu_523_p1 = $signed(xreal_V_q0);
assign tmp_56_fu_527_p1 = $signed(wreal_V_q0);
assign tmp_fu_297_p1 = $unsigned(indvar1_reg_208);
assign tr_fu_428_p4 = {{grp_fu_416_p2[ap_const_lv32_1F : ap_const_lv32_A]}};
assign treal_V_fu_559_p4 = {{r_V_fu_555_p2[ap_const_lv32_25 : ap_const_lv32_6]}};
assign ximag_V_address1 = grp_bitrp_fu_277_ximag_V_address1;
assign xreal_V_address1 = grp_bitrp_fu_277_xreal_V_address1;
always @ (posedge ap_clk)
begin
    m_reg_230[0] <= 1'b0;
end



endmodule //IFFT

