// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.2
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="combine,hls_ip_2013_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=24,HLS_SYN_DSP=99,HLS_SYN_FF=14949,HLS_SYN_LUT=35254}" *)

module combine (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        currentFrameWindowed_V_address0,
        currentFrameWindowed_V_ce0,
        currentFrameWindowed_V_we0,
        currentFrameWindowed_V_d0,
        currentFrameWindowed_V_q0,
        currentFrameWindowed_V_address1,
        currentFrameWindowed_V_ce1,
        currentFrameWindowed_V_q1,
        imag_V_address0,
        imag_V_ce0,
        imag_V_we0,
        imag_V_d0,
        imag_V_q0,
        imag_V_address1,
        imag_V_ce1,
        imag_V_q1
);

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] currentFrameWindowed_V_address0;
output   currentFrameWindowed_V_ce0;
output   currentFrameWindowed_V_we0;
output  [31:0] currentFrameWindowed_V_d0;
input  [31:0] currentFrameWindowed_V_q0;
output  [9:0] currentFrameWindowed_V_address1;
output   currentFrameWindowed_V_ce1;
input  [31:0] currentFrameWindowed_V_q1;
output  [9:0] imag_V_address0;
output   imag_V_ce0;
output   imag_V_we0;
output  [31:0] imag_V_d0;
input  [31:0] imag_V_q0;
output  [9:0] imag_V_address1;
output   imag_V_ce1;
input  [31:0] imag_V_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] currentFrameWindowed_V_address0;
reg currentFrameWindowed_V_ce0;
reg currentFrameWindowed_V_we0;
reg[31:0] currentFrameWindowed_V_d0;
reg currentFrameWindowed_V_ce1;
reg[9:0] imag_V_address0;
reg imag_V_ce0;
reg imag_V_we0;
reg imag_V_ce1;
reg   [2:0] ap_CS_fsm = 3'b000;
wire   [9:0] currentFrame_V_address0;
reg    currentFrame_V_ce0;
wire   [16:0] currentFrame_V_q0;
wire   [9:0] wn_V_address0;
reg    wn_V_ce0;
wire   [19:0] wn_V_q0;
reg   [10:0] i_reg_115;
wire   [0:0] exitcond_fu_155_p2;
reg   [0:0] exitcond_reg_209;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
reg    ap_reg_ppiten_pp0_it3 = 1'b0;
reg    ap_reg_ppiten_pp0_it4 = 1'b0;
reg    ap_reg_ppiten_pp0_it5 = 1'b0;
reg    ap_reg_ppiten_pp0_it6 = 1'b0;
reg   [0:0] ap_reg_ppstg_exitcond_reg_209_pp0_it1;
reg   [0:0] ap_reg_ppstg_exitcond_reg_209_pp0_it2;
reg   [0:0] ap_reg_ppstg_exitcond_reg_209_pp0_it3;
reg   [0:0] ap_reg_ppstg_exitcond_reg_209_pp0_it4;
reg   [0:0] ap_reg_ppstg_exitcond_reg_209_pp0_it5;
wire   [10:0] i_1_fu_161_p2;
wire   [63:0] tmp_s_fu_167_p1;
reg   [63:0] tmp_s_reg_218;
reg   [63:0] ap_reg_ppstg_tmp_s_reg_218_pp0_it1;
reg   [63:0] ap_reg_ppstg_tmp_s_reg_218_pp0_it2;
reg   [63:0] ap_reg_ppstg_tmp_s_reg_218_pp0_it3;
reg   [63:0] ap_reg_ppstg_tmp_s_reg_218_pp0_it4;
reg   [63:0] ap_reg_ppstg_tmp_s_reg_218_pp0_it5;
reg   [16:0] currentFrame_V_load_reg_233;
reg   [19:0] wn_V_load_reg_238;
wire   [36:0] r_V_fu_179_p2;
reg   [36:0] r_V_reg_243;
reg   [9:0] magFrame_V_address0;
reg    magFrame_V_ce0;
reg    magFrame_V_we0;
wire   [31:0] magFrame_V_d0;
wire   [31:0] magFrame_V_q0;
reg   [9:0] phaseFrame_V_address0;
reg    phaseFrame_V_ce0;
reg    phaseFrame_V_we0;
wire   [25:0] phaseFrame_V_d0;
wire   [25:0] phaseFrame_V_q0;
wire   [9:0] phaseFrame_V_address1;
reg    phaseFrame_V_ce1;
reg    phaseFrame_V_we1;
wire   [25:0] phaseFrame_V_d1;
reg   [9:0] previousPhase_V_address0;
reg    previousPhase_V_ce0;
reg    previousPhase_V_we0;
wire   [0:0] previousPhase_V_d0;
wire   [0:0] previousPhase_V_q0;
wire   [9:0] time_domain_V_address0;
reg    time_domain_V_ce0;
reg    time_domain_V_we0;
wire   [31:0] time_domain_V_d0;
wire    grp_pitchshifting_fu_127_ap_start;
wire    grp_pitchshifting_fu_127_ap_done;
wire    grp_pitchshifting_fu_127_ap_idle;
wire    grp_pitchshifting_fu_127_ap_ready;
wire   [9:0] grp_pitchshifting_fu_127_amplitude_V_address0;
wire    grp_pitchshifting_fu_127_amplitude_V_ce0;
wire   [31:0] grp_pitchshifting_fu_127_amplitude_V_q0;
wire   [9:0] grp_pitchshifting_fu_127_angle_V_address0;
wire    grp_pitchshifting_fu_127_angle_V_ce0;
wire   [25:0] grp_pitchshifting_fu_127_angle_V_q0;
wire   [9:0] grp_pitchshifting_fu_127_previousPhase_V_address0;
wire    grp_pitchshifting_fu_127_previousPhase_V_ce0;
wire   [0:0] grp_pitchshifting_fu_127_previousPhase_V_q0;
wire   [9:0] grp_pitchshifting_fu_127_time_domain_V_address0;
wire    grp_pitchshifting_fu_127_time_domain_V_ce0;
wire    grp_pitchshifting_fu_127_time_domain_V_we0;
wire   [31:0] grp_pitchshifting_fu_127_time_domain_V_d0;
wire    grp_cal_mag_phase_fu_137_ap_start;
wire    grp_cal_mag_phase_fu_137_ap_done;
wire    grp_cal_mag_phase_fu_137_ap_idle;
wire    grp_cal_mag_phase_fu_137_ap_ready;
wire   [9:0] grp_cal_mag_phase_fu_137_magFrame_V_address0;
wire    grp_cal_mag_phase_fu_137_magFrame_V_ce0;
wire    grp_cal_mag_phase_fu_137_magFrame_V_we0;
wire   [31:0] grp_cal_mag_phase_fu_137_magFrame_V_d0;
wire   [9:0] grp_cal_mag_phase_fu_137_phaseFrame_V_address0;
wire    grp_cal_mag_phase_fu_137_phaseFrame_V_ce0;
wire    grp_cal_mag_phase_fu_137_phaseFrame_V_we0;
wire   [25:0] grp_cal_mag_phase_fu_137_phaseFrame_V_d0;
wire   [9:0] grp_cal_mag_phase_fu_137_phaseFrame_V_address1;
wire    grp_cal_mag_phase_fu_137_phaseFrame_V_ce1;
wire    grp_cal_mag_phase_fu_137_phaseFrame_V_we1;
wire   [25:0] grp_cal_mag_phase_fu_137_phaseFrame_V_d1;
wire   [9:0] grp_cal_mag_phase_fu_137_real_V_address0;
wire    grp_cal_mag_phase_fu_137_real_V_ce0;
wire   [31:0] grp_cal_mag_phase_fu_137_real_V_q0;
wire   [9:0] grp_cal_mag_phase_fu_137_imag_V_address0;
wire    grp_cal_mag_phase_fu_137_imag_V_ce0;
wire   [31:0] grp_cal_mag_phase_fu_137_imag_V_q0;
wire    grp_FFT_fu_147_ap_start;
wire    grp_FFT_fu_147_ap_done;
wire    grp_FFT_fu_147_ap_idle;
wire    grp_FFT_fu_147_ap_ready;
wire   [9:0] grp_FFT_fu_147_xreal_V_address0;
wire    grp_FFT_fu_147_xreal_V_ce0;
wire    grp_FFT_fu_147_xreal_V_we0;
wire   [31:0] grp_FFT_fu_147_xreal_V_d0;
wire   [31:0] grp_FFT_fu_147_xreal_V_q0;
wire   [9:0] grp_FFT_fu_147_xreal_V_address1;
wire    grp_FFT_fu_147_xreal_V_ce1;
wire   [31:0] grp_FFT_fu_147_xreal_V_q1;
wire   [9:0] grp_FFT_fu_147_ximag_V_address0;
wire    grp_FFT_fu_147_ximag_V_ce0;
wire    grp_FFT_fu_147_ximag_V_we0;
wire   [31:0] grp_FFT_fu_147_ximag_V_d0;
wire   [31:0] grp_FFT_fu_147_ximag_V_q0;
wire   [9:0] grp_FFT_fu_147_ximag_V_address1;
wire    grp_FFT_fu_147_ximag_V_ce1;
wire   [31:0] grp_FFT_fu_147_ximag_V_q1;
reg    grp_pitchshifting_fu_127_ap_start_ap_start_reg = 1'b0;
reg    grp_cal_mag_phase_fu_137_ap_start_ap_start_reg = 1'b0;
reg    grp_FFT_fu_147_ap_start_ap_start_reg = 1'b0;
wire   [31:0] tmp_9_fu_204_p1;
wire   [19:0] r_V_fu_179_p0;
wire   [16:0] r_V_fu_179_p1;
wire   [36:0] grp_fu_188_p0;
wire   [19:0] grp_fu_188_p1;
wire   [55:0] grp_fu_188_p2;
wire   [15:0] tmp_fu_194_p4;
wire    grp_fu_188_ce;
reg   [2:0] ap_NS_fsm;
wire   [55:0] grp_fu_188_p00;
wire   [36:0] r_V_fu_179_p00;
wire   [36:0] r_V_fu_179_p10;
parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 3'b000;
parameter    ap_ST_pp0_stg0_fsm_1 = 3'b1;
parameter    ap_ST_st9_fsm_2 = 3'b10;
parameter    ap_ST_st10_fsm_3 = 3'b11;
parameter    ap_ST_st11_fsm_4 = 3'b100;
parameter    ap_ST_st12_fsm_5 = 3'b101;
parameter    ap_ST_st13_fsm_6 = 3'b110;
parameter    ap_ST_st14_fsm_7 = 3'b111;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv11_400 = 11'b10000000000;
parameter    ap_const_lv11_1 = 11'b1;
parameter    ap_const_lv56_B504F = 56'b10110101000001001111;
parameter    ap_const_lv32_28 = 32'b101000;
parameter    ap_const_lv32_37 = 32'b110111;
parameter    ap_true = 1'b1;


combine_currentFrame_V #(
    .DataWidth( 17 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
currentFrame_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( currentFrame_V_address0 ),
    .ce0( currentFrame_V_ce0 ),
    .q0( currentFrame_V_q0 )
);

pitchshifting_wn_V_1 #(
    .DataWidth( 20 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
wn_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( wn_V_address0 ),
    .ce0( wn_V_ce0 ),
    .q0( wn_V_q0 )
);

combine_magFrame_V #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
magFrame_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( magFrame_V_address0 ),
    .ce0( magFrame_V_ce0 ),
    .we0( magFrame_V_we0 ),
    .d0( magFrame_V_d0 ),
    .q0( magFrame_V_q0 )
);

combine_phaseFrame_V #(
    .DataWidth( 26 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
phaseFrame_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( phaseFrame_V_address0 ),
    .ce0( phaseFrame_V_ce0 ),
    .we0( phaseFrame_V_we0 ),
    .d0( phaseFrame_V_d0 ),
    .q0( phaseFrame_V_q0 ),
    .address1( phaseFrame_V_address1 ),
    .ce1( phaseFrame_V_ce1 ),
    .we1( phaseFrame_V_we1 ),
    .d1( phaseFrame_V_d1 )
);

combine_previousPhase_V #(
    .DataWidth( 1 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
previousPhase_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( previousPhase_V_address0 ),
    .ce0( previousPhase_V_ce0 ),
    .we0( previousPhase_V_we0 ),
    .d0( previousPhase_V_d0 ),
    .q0( previousPhase_V_q0 )
);

combine_time_domain_V #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
time_domain_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( time_domain_V_address0 ),
    .ce0( time_domain_V_ce0 ),
    .we0( time_domain_V_we0 ),
    .d0( time_domain_V_d0 )
);

pitchshifting grp_pitchshifting_fu_127(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_pitchshifting_fu_127_ap_start ),
    .ap_done( grp_pitchshifting_fu_127_ap_done ),
    .ap_idle( grp_pitchshifting_fu_127_ap_idle ),
    .ap_ready( grp_pitchshifting_fu_127_ap_ready ),
    .amplitude_V_address0( grp_pitchshifting_fu_127_amplitude_V_address0 ),
    .amplitude_V_ce0( grp_pitchshifting_fu_127_amplitude_V_ce0 ),
    .amplitude_V_q0( grp_pitchshifting_fu_127_amplitude_V_q0 ),
    .angle_V_address0( grp_pitchshifting_fu_127_angle_V_address0 ),
    .angle_V_ce0( grp_pitchshifting_fu_127_angle_V_ce0 ),
    .angle_V_q0( grp_pitchshifting_fu_127_angle_V_q0 ),
    .previousPhase_V_address0( grp_pitchshifting_fu_127_previousPhase_V_address0 ),
    .previousPhase_V_ce0( grp_pitchshifting_fu_127_previousPhase_V_ce0 ),
    .previousPhase_V_q0( grp_pitchshifting_fu_127_previousPhase_V_q0 ),
    .time_domain_V_address0( grp_pitchshifting_fu_127_time_domain_V_address0 ),
    .time_domain_V_ce0( grp_pitchshifting_fu_127_time_domain_V_ce0 ),
    .time_domain_V_we0( grp_pitchshifting_fu_127_time_domain_V_we0 ),
    .time_domain_V_d0( grp_pitchshifting_fu_127_time_domain_V_d0 )
);

cal_mag_phase grp_cal_mag_phase_fu_137(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_cal_mag_phase_fu_137_ap_start ),
    .ap_done( grp_cal_mag_phase_fu_137_ap_done ),
    .ap_idle( grp_cal_mag_phase_fu_137_ap_idle ),
    .ap_ready( grp_cal_mag_phase_fu_137_ap_ready ),
    .magFrame_V_address0( grp_cal_mag_phase_fu_137_magFrame_V_address0 ),
    .magFrame_V_ce0( grp_cal_mag_phase_fu_137_magFrame_V_ce0 ),
    .magFrame_V_we0( grp_cal_mag_phase_fu_137_magFrame_V_we0 ),
    .magFrame_V_d0( grp_cal_mag_phase_fu_137_magFrame_V_d0 ),
    .phaseFrame_V_address0( grp_cal_mag_phase_fu_137_phaseFrame_V_address0 ),
    .phaseFrame_V_ce0( grp_cal_mag_phase_fu_137_phaseFrame_V_ce0 ),
    .phaseFrame_V_we0( grp_cal_mag_phase_fu_137_phaseFrame_V_we0 ),
    .phaseFrame_V_d0( grp_cal_mag_phase_fu_137_phaseFrame_V_d0 ),
    .phaseFrame_V_address1( grp_cal_mag_phase_fu_137_phaseFrame_V_address1 ),
    .phaseFrame_V_ce1( grp_cal_mag_phase_fu_137_phaseFrame_V_ce1 ),
    .phaseFrame_V_we1( grp_cal_mag_phase_fu_137_phaseFrame_V_we1 ),
    .phaseFrame_V_d1( grp_cal_mag_phase_fu_137_phaseFrame_V_d1 ),
    .real_V_address0( grp_cal_mag_phase_fu_137_real_V_address0 ),
    .real_V_ce0( grp_cal_mag_phase_fu_137_real_V_ce0 ),
    .real_V_q0( grp_cal_mag_phase_fu_137_real_V_q0 ),
    .imag_V_address0( grp_cal_mag_phase_fu_137_imag_V_address0 ),
    .imag_V_ce0( grp_cal_mag_phase_fu_137_imag_V_ce0 ),
    .imag_V_q0( grp_cal_mag_phase_fu_137_imag_V_q0 )
);

FFT grp_FFT_fu_147(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_FFT_fu_147_ap_start ),
    .ap_done( grp_FFT_fu_147_ap_done ),
    .ap_idle( grp_FFT_fu_147_ap_idle ),
    .ap_ready( grp_FFT_fu_147_ap_ready ),
    .xreal_V_address0( grp_FFT_fu_147_xreal_V_address0 ),
    .xreal_V_ce0( grp_FFT_fu_147_xreal_V_ce0 ),
    .xreal_V_we0( grp_FFT_fu_147_xreal_V_we0 ),
    .xreal_V_d0( grp_FFT_fu_147_xreal_V_d0 ),
    .xreal_V_q0( grp_FFT_fu_147_xreal_V_q0 ),
    .xreal_V_address1( grp_FFT_fu_147_xreal_V_address1 ),
    .xreal_V_ce1( grp_FFT_fu_147_xreal_V_ce1 ),
    .xreal_V_q1( grp_FFT_fu_147_xreal_V_q1 ),
    .ximag_V_address0( grp_FFT_fu_147_ximag_V_address0 ),
    .ximag_V_ce0( grp_FFT_fu_147_ximag_V_ce0 ),
    .ximag_V_we0( grp_FFT_fu_147_ximag_V_we0 ),
    .ximag_V_d0( grp_FFT_fu_147_ximag_V_d0 ),
    .ximag_V_q0( grp_FFT_fu_147_ximag_V_q0 ),
    .ximag_V_address1( grp_FFT_fu_147_ximag_V_address1 ),
    .ximag_V_ce1( grp_FFT_fu_147_ximag_V_ce1 ),
    .ximag_V_q1( grp_FFT_fu_147_ximag_V_q1 )
);

combine_mul_37ns_20ns_56_4 #(
    .ID( 54 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 37 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 56 ))
combine_mul_37ns_20ns_56_4_U54(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_188_p0 ),
    .din1( grp_fu_188_p1 ),
    .ce( grp_fu_188_ce ),
    .dout( grp_fu_188_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & ~(exitcond_fu_155_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (exitcond_fu_155_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0)) | ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & ~(exitcond_fu_155_p2 == ap_const_lv1_0)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it3 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it3
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it4 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it4
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it5 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it5
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it6 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it6
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
        end
    end
end

/// grp_FFT_fu_147_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_FFT_fu_147_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_FFT_fu_147_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if ((ap_ST_st9_fsm_2 == ap_CS_fsm)) begin
            grp_FFT_fu_147_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_FFT_fu_147_ap_ready)) begin
            grp_FFT_fu_147_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// grp_cal_mag_phase_fu_137_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_cal_mag_phase_fu_137_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_cal_mag_phase_fu_137_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if ((ap_ST_st11_fsm_4 == ap_CS_fsm)) begin
            grp_cal_mag_phase_fu_137_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_cal_mag_phase_fu_137_ap_ready)) begin
            grp_cal_mag_phase_fu_137_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// grp_pitchshifting_fu_127_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_pitchshifting_fu_127_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_pitchshifting_fu_127_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if ((ap_ST_st13_fsm_6 == ap_CS_fsm)) begin
            grp_pitchshifting_fu_127_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_pitchshifting_fu_127_ap_ready)) begin
            grp_pitchshifting_fu_127_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond_fu_155_p2 == ap_const_lv1_0))) begin
        i_reg_115 <= i_1_fu_161_p2;
    end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
        i_reg_115 <= ap_const_lv11_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
        ap_reg_ppstg_exitcond_reg_209_pp0_it1 <= exitcond_reg_209;
        ap_reg_ppstg_exitcond_reg_209_pp0_it2 <= ap_reg_ppstg_exitcond_reg_209_pp0_it1;
        ap_reg_ppstg_exitcond_reg_209_pp0_it3 <= ap_reg_ppstg_exitcond_reg_209_pp0_it2;
        ap_reg_ppstg_exitcond_reg_209_pp0_it4 <= ap_reg_ppstg_exitcond_reg_209_pp0_it3;
        ap_reg_ppstg_exitcond_reg_209_pp0_it5 <= ap_reg_ppstg_exitcond_reg_209_pp0_it4;
        ap_reg_ppstg_tmp_s_reg_218_pp0_it1[0] <= tmp_s_reg_218[0];
ap_reg_ppstg_tmp_s_reg_218_pp0_it1[1] <= tmp_s_reg_218[1];
ap_reg_ppstg_tmp_s_reg_218_pp0_it1[2] <= tmp_s_reg_218[2];
ap_reg_ppstg_tmp_s_reg_218_pp0_it1[3] <= tmp_s_reg_218[3];
ap_reg_ppstg_tmp_s_reg_218_pp0_it1[4] <= tmp_s_reg_218[4];
ap_reg_ppstg_tmp_s_reg_218_pp0_it1[5] <= tmp_s_reg_218[5];
ap_reg_ppstg_tmp_s_reg_218_pp0_it1[6] <= tmp_s_reg_218[6];
ap_reg_ppstg_tmp_s_reg_218_pp0_it1[7] <= tmp_s_reg_218[7];
ap_reg_ppstg_tmp_s_reg_218_pp0_it1[8] <= tmp_s_reg_218[8];
ap_reg_ppstg_tmp_s_reg_218_pp0_it1[9] <= tmp_s_reg_218[9];
ap_reg_ppstg_tmp_s_reg_218_pp0_it1[10] <= tmp_s_reg_218[10];
        ap_reg_ppstg_tmp_s_reg_218_pp0_it2[0] <= ap_reg_ppstg_tmp_s_reg_218_pp0_it1[0];
ap_reg_ppstg_tmp_s_reg_218_pp0_it2[1] <= ap_reg_ppstg_tmp_s_reg_218_pp0_it1[1];
ap_reg_ppstg_tmp_s_reg_218_pp0_it2[2] <= ap_reg_ppstg_tmp_s_reg_218_pp0_it1[2];
ap_reg_ppstg_tmp_s_reg_218_pp0_it2[3] <= ap_reg_ppstg_tmp_s_reg_218_pp0_it1[3];
ap_reg_ppstg_tmp_s_reg_218_pp0_it2[4] <= ap_reg_ppstg_tmp_s_reg_218_pp0_it1[4];
ap_reg_ppstg_tmp_s_reg_218_pp0_it2[5] <= ap_reg_ppstg_tmp_s_reg_218_pp0_it1[5];
ap_reg_ppstg_tmp_s_reg_218_pp0_it2[6] <= ap_reg_ppstg_tmp_s_reg_218_pp0_it1[6];
ap_reg_ppstg_tmp_s_reg_218_pp0_it2[7] <= ap_reg_ppstg_tmp_s_reg_218_pp0_it1[7];
ap_reg_ppstg_tmp_s_reg_218_pp0_it2[8] <= ap_reg_ppstg_tmp_s_reg_218_pp0_it1[8];
ap_reg_ppstg_tmp_s_reg_218_pp0_it2[9] <= ap_reg_ppstg_tmp_s_reg_218_pp0_it1[9];
ap_reg_ppstg_tmp_s_reg_218_pp0_it2[10] <= ap_reg_ppstg_tmp_s_reg_218_pp0_it1[10];
        ap_reg_ppstg_tmp_s_reg_218_pp0_it3[0] <= ap_reg_ppstg_tmp_s_reg_218_pp0_it2[0];
ap_reg_ppstg_tmp_s_reg_218_pp0_it3[1] <= ap_reg_ppstg_tmp_s_reg_218_pp0_it2[1];
ap_reg_ppstg_tmp_s_reg_218_pp0_it3[2] <= ap_reg_ppstg_tmp_s_reg_218_pp0_it2[2];
ap_reg_ppstg_tmp_s_reg_218_pp0_it3[3] <= ap_reg_ppstg_tmp_s_reg_218_pp0_it2[3];
ap_reg_ppstg_tmp_s_reg_218_pp0_it3[4] <= ap_reg_ppstg_tmp_s_reg_218_pp0_it2[4];
ap_reg_ppstg_tmp_s_reg_218_pp0_it3[5] <= ap_reg_ppstg_tmp_s_reg_218_pp0_it2[5];
ap_reg_ppstg_tmp_s_reg_218_pp0_it3[6] <= ap_reg_ppstg_tmp_s_reg_218_pp0_it2[6];
ap_reg_ppstg_tmp_s_reg_218_pp0_it3[7] <= ap_reg_ppstg_tmp_s_reg_218_pp0_it2[7];
ap_reg_ppstg_tmp_s_reg_218_pp0_it3[8] <= ap_reg_ppstg_tmp_s_reg_218_pp0_it2[8];
ap_reg_ppstg_tmp_s_reg_218_pp0_it3[9] <= ap_reg_ppstg_tmp_s_reg_218_pp0_it2[9];
ap_reg_ppstg_tmp_s_reg_218_pp0_it3[10] <= ap_reg_ppstg_tmp_s_reg_218_pp0_it2[10];
        ap_reg_ppstg_tmp_s_reg_218_pp0_it4[0] <= ap_reg_ppstg_tmp_s_reg_218_pp0_it3[0];
ap_reg_ppstg_tmp_s_reg_218_pp0_it4[1] <= ap_reg_ppstg_tmp_s_reg_218_pp0_it3[1];
ap_reg_ppstg_tmp_s_reg_218_pp0_it4[2] <= ap_reg_ppstg_tmp_s_reg_218_pp0_it3[2];
ap_reg_ppstg_tmp_s_reg_218_pp0_it4[3] <= ap_reg_ppstg_tmp_s_reg_218_pp0_it3[3];
ap_reg_ppstg_tmp_s_reg_218_pp0_it4[4] <= ap_reg_ppstg_tmp_s_reg_218_pp0_it3[4];
ap_reg_ppstg_tmp_s_reg_218_pp0_it4[5] <= ap_reg_ppstg_tmp_s_reg_218_pp0_it3[5];
ap_reg_ppstg_tmp_s_reg_218_pp0_it4[6] <= ap_reg_ppstg_tmp_s_reg_218_pp0_it3[6];
ap_reg_ppstg_tmp_s_reg_218_pp0_it4[7] <= ap_reg_ppstg_tmp_s_reg_218_pp0_it3[7];
ap_reg_ppstg_tmp_s_reg_218_pp0_it4[8] <= ap_reg_ppstg_tmp_s_reg_218_pp0_it3[8];
ap_reg_ppstg_tmp_s_reg_218_pp0_it4[9] <= ap_reg_ppstg_tmp_s_reg_218_pp0_it3[9];
ap_reg_ppstg_tmp_s_reg_218_pp0_it4[10] <= ap_reg_ppstg_tmp_s_reg_218_pp0_it3[10];
        ap_reg_ppstg_tmp_s_reg_218_pp0_it5[0] <= ap_reg_ppstg_tmp_s_reg_218_pp0_it4[0];
ap_reg_ppstg_tmp_s_reg_218_pp0_it5[1] <= ap_reg_ppstg_tmp_s_reg_218_pp0_it4[1];
ap_reg_ppstg_tmp_s_reg_218_pp0_it5[2] <= ap_reg_ppstg_tmp_s_reg_218_pp0_it4[2];
ap_reg_ppstg_tmp_s_reg_218_pp0_it5[3] <= ap_reg_ppstg_tmp_s_reg_218_pp0_it4[3];
ap_reg_ppstg_tmp_s_reg_218_pp0_it5[4] <= ap_reg_ppstg_tmp_s_reg_218_pp0_it4[4];
ap_reg_ppstg_tmp_s_reg_218_pp0_it5[5] <= ap_reg_ppstg_tmp_s_reg_218_pp0_it4[5];
ap_reg_ppstg_tmp_s_reg_218_pp0_it5[6] <= ap_reg_ppstg_tmp_s_reg_218_pp0_it4[6];
ap_reg_ppstg_tmp_s_reg_218_pp0_it5[7] <= ap_reg_ppstg_tmp_s_reg_218_pp0_it4[7];
ap_reg_ppstg_tmp_s_reg_218_pp0_it5[8] <= ap_reg_ppstg_tmp_s_reg_218_pp0_it4[8];
ap_reg_ppstg_tmp_s_reg_218_pp0_it5[9] <= ap_reg_ppstg_tmp_s_reg_218_pp0_it4[9];
ap_reg_ppstg_tmp_s_reg_218_pp0_it5[10] <= ap_reg_ppstg_tmp_s_reg_218_pp0_it4[10];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_209 == ap_const_lv1_0))) begin
        currentFrame_V_load_reg_233 <= currentFrame_V_q0;
        wn_V_load_reg_238 <= wn_V_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        exitcond_reg_209 <= exitcond_fu_155_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_reg_ppstg_exitcond_reg_209_pp0_it1 == ap_const_lv1_0))) begin
        r_V_reg_243 <= r_V_fu_179_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond_fu_155_p2 == ap_const_lv1_0))) begin
        tmp_s_reg_218[0] <= tmp_s_fu_167_p1[0];
tmp_s_reg_218[1] <= tmp_s_fu_167_p1[1];
tmp_s_reg_218[2] <= tmp_s_fu_167_p1[2];
tmp_s_reg_218[3] <= tmp_s_fu_167_p1[3];
tmp_s_reg_218[4] <= tmp_s_fu_167_p1[4];
tmp_s_reg_218[5] <= tmp_s_fu_167_p1[5];
tmp_s_reg_218[6] <= tmp_s_fu_167_p1[6];
tmp_s_reg_218[7] <= tmp_s_fu_167_p1[7];
tmp_s_reg_218[8] <= tmp_s_fu_167_p1[8];
tmp_s_reg_218[9] <= tmp_s_fu_167_p1[9];
tmp_s_reg_218[10] <= tmp_s_fu_167_p1[10];
    end
end

/// ap_done assign process. ///
always @ (ap_CS_fsm or grp_pitchshifting_fu_127_ap_done)
begin
    if (((ap_ST_st14_fsm_7 == ap_CS_fsm) & ~(ap_const_logic_0 == grp_pitchshifting_fu_127_ap_done))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_CS_fsm or grp_pitchshifting_fu_127_ap_done)
begin
    if (((ap_ST_st14_fsm_7 == ap_CS_fsm) & ~(ap_const_logic_0 == grp_pitchshifting_fu_127_ap_done))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// currentFrameWindowed_V_address0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it6 or ap_reg_ppstg_tmp_s_reg_218_pp0_it5 or grp_cal_mag_phase_fu_137_real_V_address0 or grp_FFT_fu_147_xreal_V_address0)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6))) begin
        currentFrameWindowed_V_address0 = ap_reg_ppstg_tmp_s_reg_218_pp0_it5;
    end else if ((ap_ST_st10_fsm_3 == ap_CS_fsm)) begin
        currentFrameWindowed_V_address0 = grp_FFT_fu_147_xreal_V_address0;
    end else if ((ap_ST_st12_fsm_5 == ap_CS_fsm)) begin
        currentFrameWindowed_V_address0 = grp_cal_mag_phase_fu_137_real_V_address0;
    end else begin
        currentFrameWindowed_V_address0 = ap_reg_ppstg_tmp_s_reg_218_pp0_it5;
    end
end

/// currentFrameWindowed_V_ce0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it6 or ap_reg_ppstg_exitcond_reg_209_pp0_it5 or grp_cal_mag_phase_fu_137_real_V_ce0 or grp_FFT_fu_147_xreal_V_ce0)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6) & (ap_reg_ppstg_exitcond_reg_209_pp0_it5 == ap_const_lv1_0))) begin
        currentFrameWindowed_V_ce0 = ap_const_logic_1;
    end else if ((ap_ST_st10_fsm_3 == ap_CS_fsm)) begin
        currentFrameWindowed_V_ce0 = grp_FFT_fu_147_xreal_V_ce0;
    end else if ((ap_ST_st12_fsm_5 == ap_CS_fsm)) begin
        currentFrameWindowed_V_ce0 = grp_cal_mag_phase_fu_137_real_V_ce0;
    end else begin
        currentFrameWindowed_V_ce0 = ap_const_logic_0;
    end
end

/// currentFrameWindowed_V_ce1 assign process. ///
always @ (ap_CS_fsm or grp_FFT_fu_147_xreal_V_ce1)
begin
    if ((ap_ST_st10_fsm_3 == ap_CS_fsm)) begin
        currentFrameWindowed_V_ce1 = grp_FFT_fu_147_xreal_V_ce1;
    end else begin
        currentFrameWindowed_V_ce1 = ap_const_logic_0;
    end
end

/// currentFrameWindowed_V_d0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it6 or grp_FFT_fu_147_xreal_V_d0 or tmp_9_fu_204_p1)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6))) begin
        currentFrameWindowed_V_d0 = tmp_9_fu_204_p1;
    end else if ((ap_ST_st10_fsm_3 == ap_CS_fsm)) begin
        currentFrameWindowed_V_d0 = grp_FFT_fu_147_xreal_V_d0;
    end else begin
        currentFrameWindowed_V_d0 = tmp_9_fu_204_p1;
    end
end

/// currentFrameWindowed_V_we0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it6 or ap_reg_ppstg_exitcond_reg_209_pp0_it5 or grp_FFT_fu_147_xreal_V_we0)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6) & (ap_reg_ppstg_exitcond_reg_209_pp0_it5 == ap_const_lv1_0))) begin
        currentFrameWindowed_V_we0 = ap_const_logic_1;
    end else if ((ap_ST_st10_fsm_3 == ap_CS_fsm)) begin
        currentFrameWindowed_V_we0 = grp_FFT_fu_147_xreal_V_we0;
    end else begin
        currentFrameWindowed_V_we0 = ap_const_logic_0;
    end
end

/// currentFrame_V_ce0 assign process. ///
always @ (ap_CS_fsm or exitcond_fu_155_p2 or ap_reg_ppiten_pp0_it0)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond_fu_155_p2 == ap_const_lv1_0))) begin
        currentFrame_V_ce0 = ap_const_logic_1;
    end else begin
        currentFrame_V_ce0 = ap_const_logic_0;
    end
end

/// imag_V_address0 assign process. ///
always @ (ap_CS_fsm or grp_cal_mag_phase_fu_137_imag_V_address0 or grp_FFT_fu_147_ximag_V_address0)
begin
    if ((ap_ST_st10_fsm_3 == ap_CS_fsm)) begin
        imag_V_address0 = grp_FFT_fu_147_ximag_V_address0;
    end else if ((ap_ST_st12_fsm_5 == ap_CS_fsm)) begin
        imag_V_address0 = grp_cal_mag_phase_fu_137_imag_V_address0;
    end else begin
        imag_V_address0 = grp_FFT_fu_147_ximag_V_address0;
    end
end

/// imag_V_ce0 assign process. ///
always @ (ap_CS_fsm or grp_cal_mag_phase_fu_137_imag_V_ce0 or grp_FFT_fu_147_ximag_V_ce0)
begin
    if ((ap_ST_st10_fsm_3 == ap_CS_fsm)) begin
        imag_V_ce0 = grp_FFT_fu_147_ximag_V_ce0;
    end else if ((ap_ST_st12_fsm_5 == ap_CS_fsm)) begin
        imag_V_ce0 = grp_cal_mag_phase_fu_137_imag_V_ce0;
    end else begin
        imag_V_ce0 = ap_const_logic_0;
    end
end

/// imag_V_ce1 assign process. ///
always @ (ap_CS_fsm or grp_FFT_fu_147_ximag_V_ce1)
begin
    if ((ap_ST_st10_fsm_3 == ap_CS_fsm)) begin
        imag_V_ce1 = grp_FFT_fu_147_ximag_V_ce1;
    end else begin
        imag_V_ce1 = ap_const_logic_0;
    end
end

/// imag_V_we0 assign process. ///
always @ (ap_CS_fsm or grp_FFT_fu_147_ximag_V_we0)
begin
    if ((ap_ST_st10_fsm_3 == ap_CS_fsm)) begin
        imag_V_we0 = grp_FFT_fu_147_ximag_V_we0;
    end else begin
        imag_V_we0 = ap_const_logic_0;
    end
end

/// magFrame_V_address0 assign process. ///
always @ (ap_CS_fsm or grp_pitchshifting_fu_127_amplitude_V_address0 or grp_cal_mag_phase_fu_137_magFrame_V_address0)
begin
    if ((ap_ST_st12_fsm_5 == ap_CS_fsm)) begin
        magFrame_V_address0 = grp_cal_mag_phase_fu_137_magFrame_V_address0;
    end else if ((ap_ST_st14_fsm_7 == ap_CS_fsm)) begin
        magFrame_V_address0 = grp_pitchshifting_fu_127_amplitude_V_address0;
    end else begin
        magFrame_V_address0 = grp_cal_mag_phase_fu_137_magFrame_V_address0;
    end
end

/// magFrame_V_ce0 assign process. ///
always @ (ap_CS_fsm or grp_pitchshifting_fu_127_amplitude_V_ce0 or grp_cal_mag_phase_fu_137_magFrame_V_ce0)
begin
    if ((ap_ST_st12_fsm_5 == ap_CS_fsm)) begin
        magFrame_V_ce0 = grp_cal_mag_phase_fu_137_magFrame_V_ce0;
    end else if ((ap_ST_st14_fsm_7 == ap_CS_fsm)) begin
        magFrame_V_ce0 = grp_pitchshifting_fu_127_amplitude_V_ce0;
    end else begin
        magFrame_V_ce0 = ap_const_logic_0;
    end
end

/// magFrame_V_we0 assign process. ///
always @ (ap_CS_fsm or grp_cal_mag_phase_fu_137_magFrame_V_we0)
begin
    if ((ap_ST_st12_fsm_5 == ap_CS_fsm)) begin
        magFrame_V_we0 = grp_cal_mag_phase_fu_137_magFrame_V_we0;
    end else begin
        magFrame_V_we0 = ap_const_logic_0;
    end
end

/// phaseFrame_V_address0 assign process. ///
always @ (ap_CS_fsm or grp_pitchshifting_fu_127_angle_V_address0 or grp_cal_mag_phase_fu_137_phaseFrame_V_address0)
begin
    if ((ap_ST_st12_fsm_5 == ap_CS_fsm)) begin
        phaseFrame_V_address0 = grp_cal_mag_phase_fu_137_phaseFrame_V_address0;
    end else if ((ap_ST_st14_fsm_7 == ap_CS_fsm)) begin
        phaseFrame_V_address0 = grp_pitchshifting_fu_127_angle_V_address0;
    end else begin
        phaseFrame_V_address0 = grp_cal_mag_phase_fu_137_phaseFrame_V_address0;
    end
end

/// phaseFrame_V_ce0 assign process. ///
always @ (ap_CS_fsm or grp_pitchshifting_fu_127_angle_V_ce0 or grp_cal_mag_phase_fu_137_phaseFrame_V_ce0)
begin
    if ((ap_ST_st12_fsm_5 == ap_CS_fsm)) begin
        phaseFrame_V_ce0 = grp_cal_mag_phase_fu_137_phaseFrame_V_ce0;
    end else if ((ap_ST_st14_fsm_7 == ap_CS_fsm)) begin
        phaseFrame_V_ce0 = grp_pitchshifting_fu_127_angle_V_ce0;
    end else begin
        phaseFrame_V_ce0 = ap_const_logic_0;
    end
end

/// phaseFrame_V_ce1 assign process. ///
always @ (ap_CS_fsm or grp_cal_mag_phase_fu_137_phaseFrame_V_ce1)
begin
    if ((ap_ST_st12_fsm_5 == ap_CS_fsm)) begin
        phaseFrame_V_ce1 = grp_cal_mag_phase_fu_137_phaseFrame_V_ce1;
    end else begin
        phaseFrame_V_ce1 = ap_const_logic_0;
    end
end

/// phaseFrame_V_we0 assign process. ///
always @ (ap_CS_fsm or grp_cal_mag_phase_fu_137_phaseFrame_V_we0)
begin
    if ((ap_ST_st12_fsm_5 == ap_CS_fsm)) begin
        phaseFrame_V_we0 = grp_cal_mag_phase_fu_137_phaseFrame_V_we0;
    end else begin
        phaseFrame_V_we0 = ap_const_logic_0;
    end
end

/// phaseFrame_V_we1 assign process. ///
always @ (ap_CS_fsm or grp_cal_mag_phase_fu_137_phaseFrame_V_we1)
begin
    if ((ap_ST_st12_fsm_5 == ap_CS_fsm)) begin
        phaseFrame_V_we1 = grp_cal_mag_phase_fu_137_phaseFrame_V_we1;
    end else begin
        phaseFrame_V_we1 = ap_const_logic_0;
    end
end

/// previousPhase_V_address0 assign process. ///
always @ (ap_CS_fsm or grp_pitchshifting_fu_127_previousPhase_V_address0)
begin
    if ((ap_ST_st12_fsm_5 == ap_CS_fsm)) begin
        previousPhase_V_address0 = ap_const_lv64_0;
    end else if ((ap_ST_st14_fsm_7 == ap_CS_fsm)) begin
        previousPhase_V_address0 = grp_pitchshifting_fu_127_previousPhase_V_address0;
    end else begin
        previousPhase_V_address0 = ap_const_lv64_0;
    end
end

/// previousPhase_V_ce0 assign process. ///
always @ (ap_CS_fsm or grp_pitchshifting_fu_127_previousPhase_V_ce0 or grp_cal_mag_phase_fu_137_ap_done)
begin
    if (((ap_ST_st12_fsm_5 == ap_CS_fsm) & ~(ap_const_logic_0 == grp_cal_mag_phase_fu_137_ap_done))) begin
        previousPhase_V_ce0 = ap_const_logic_1;
    end else if ((ap_ST_st14_fsm_7 == ap_CS_fsm)) begin
        previousPhase_V_ce0 = grp_pitchshifting_fu_127_previousPhase_V_ce0;
    end else begin
        previousPhase_V_ce0 = ap_const_logic_0;
    end
end

/// previousPhase_V_we0 assign process. ///
always @ (ap_CS_fsm or grp_cal_mag_phase_fu_137_ap_done)
begin
    if (((ap_ST_st12_fsm_5 == ap_CS_fsm) & ~(ap_const_logic_0 == grp_cal_mag_phase_fu_137_ap_done))) begin
        previousPhase_V_we0 = ap_const_logic_1;
    end else begin
        previousPhase_V_we0 = ap_const_logic_0;
    end
end

/// time_domain_V_ce0 assign process. ///
always @ (ap_CS_fsm or grp_pitchshifting_fu_127_time_domain_V_ce0)
begin
    if ((ap_ST_st14_fsm_7 == ap_CS_fsm)) begin
        time_domain_V_ce0 = grp_pitchshifting_fu_127_time_domain_V_ce0;
    end else begin
        time_domain_V_ce0 = ap_const_logic_0;
    end
end

/// time_domain_V_we0 assign process. ///
always @ (ap_CS_fsm or grp_pitchshifting_fu_127_time_domain_V_we0)
begin
    if ((ap_ST_st14_fsm_7 == ap_CS_fsm)) begin
        time_domain_V_we0 = grp_pitchshifting_fu_127_time_domain_V_we0;
    end else begin
        time_domain_V_we0 = ap_const_logic_0;
    end
end

/// wn_V_ce0 assign process. ///
always @ (ap_CS_fsm or exitcond_fu_155_p2 or ap_reg_ppiten_pp0_it0)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond_fu_155_p2 == ap_const_lv1_0))) begin
        wn_V_ce0 = ap_const_logic_1;
    end else begin
        wn_V_ce0 = ap_const_logic_0;
    end
end
always @ (ap_start or ap_CS_fsm or exitcond_fu_155_p2 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it5 or ap_reg_ppiten_pp0_it6 or grp_pitchshifting_fu_127_ap_done or grp_cal_mag_phase_fu_137_ap_done or grp_FFT_fu_147_ap_done)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        ap_ST_pp0_stg0_fsm_1 : 
            if ((~((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it5)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(exitcond_fu_155_p2 == ap_const_lv1_0) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(exitcond_fu_155_p2 == ap_const_lv1_0) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
                ap_NS_fsm = ap_ST_st9_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st9_fsm_2;
            end
        ap_ST_st9_fsm_2 : 
            ap_NS_fsm = ap_ST_st10_fsm_3;
        ap_ST_st10_fsm_3 : 
            if (~(ap_const_logic_0 == grp_FFT_fu_147_ap_done)) begin
                ap_NS_fsm = ap_ST_st11_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st10_fsm_3;
            end
        ap_ST_st11_fsm_4 : 
            ap_NS_fsm = ap_ST_st12_fsm_5;
        ap_ST_st12_fsm_5 : 
            if (~(ap_const_logic_0 == grp_cal_mag_phase_fu_137_ap_done)) begin
                ap_NS_fsm = ap_ST_st13_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_st12_fsm_5;
            end
        ap_ST_st13_fsm_6 : 
            ap_NS_fsm = ap_ST_st14_fsm_7;
        ap_ST_st14_fsm_7 : 
            if (~(ap_const_logic_0 == grp_pitchshifting_fu_127_ap_done)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st14_fsm_7;
            end
        default : 
            ap_NS_fsm = 'bx;
    endcase
end
assign currentFrameWindowed_V_address1 = grp_FFT_fu_147_xreal_V_address1;
assign currentFrame_V_address0 = tmp_s_fu_167_p1;
assign exitcond_fu_155_p2 = (i_reg_115 == ap_const_lv11_400? 1'b1: 1'b0);
assign grp_FFT_fu_147_ap_start = grp_FFT_fu_147_ap_start_ap_start_reg;
assign grp_FFT_fu_147_ximag_V_q0 = imag_V_q0;
assign grp_FFT_fu_147_ximag_V_q1 = imag_V_q1;
assign grp_FFT_fu_147_xreal_V_q0 = currentFrameWindowed_V_q0;
assign grp_FFT_fu_147_xreal_V_q1 = currentFrameWindowed_V_q1;
assign grp_cal_mag_phase_fu_137_ap_start = grp_cal_mag_phase_fu_137_ap_start_ap_start_reg;
assign grp_cal_mag_phase_fu_137_imag_V_q0 = imag_V_q0;
assign grp_cal_mag_phase_fu_137_real_V_q0 = currentFrameWindowed_V_q0;
assign grp_fu_188_ce = ap_const_logic_1;
assign grp_fu_188_p0 = grp_fu_188_p00;
assign grp_fu_188_p00 = $unsigned(r_V_reg_243);
assign grp_fu_188_p1 = ap_const_lv56_B504F;
assign grp_pitchshifting_fu_127_amplitude_V_q0 = magFrame_V_q0;
assign grp_pitchshifting_fu_127_angle_V_q0 = phaseFrame_V_q0;
assign grp_pitchshifting_fu_127_ap_start = grp_pitchshifting_fu_127_ap_start_ap_start_reg;
assign grp_pitchshifting_fu_127_previousPhase_V_q0 = previousPhase_V_q0;
assign i_1_fu_161_p2 = (i_reg_115 + ap_const_lv11_1);
assign imag_V_address1 = grp_FFT_fu_147_ximag_V_address1;
assign imag_V_d0 = grp_FFT_fu_147_ximag_V_d0;
assign magFrame_V_d0 = grp_cal_mag_phase_fu_137_magFrame_V_d0;
assign phaseFrame_V_address1 = grp_cal_mag_phase_fu_137_phaseFrame_V_address1;
assign phaseFrame_V_d0 = grp_cal_mag_phase_fu_137_phaseFrame_V_d0;
assign phaseFrame_V_d1 = grp_cal_mag_phase_fu_137_phaseFrame_V_d1;
assign previousPhase_V_d0 = ap_const_lv1_0;
assign r_V_fu_179_p0 = r_V_fu_179_p00;
assign r_V_fu_179_p00 = $unsigned(wn_V_load_reg_238);
assign r_V_fu_179_p1 = r_V_fu_179_p10;
assign r_V_fu_179_p10 = $unsigned(currentFrame_V_load_reg_233);
assign r_V_fu_179_p2 = ($signed({{1'b0}, {r_V_fu_179_p0}}) * $signed({{1'b0}, {r_V_fu_179_p1}}));
assign time_domain_V_address0 = grp_pitchshifting_fu_127_time_domain_V_address0;
assign time_domain_V_d0 = grp_pitchshifting_fu_127_time_domain_V_d0;
assign tmp_9_fu_204_p1 = $unsigned(tmp_fu_194_p4);
assign tmp_fu_194_p4 = {{grp_fu_188_p2[ap_const_lv32_37 : ap_const_lv32_28]}};
assign tmp_s_fu_167_p1 = $unsigned(i_reg_115);
assign wn_V_address0 = tmp_s_fu_167_p1;
always @ (posedge ap_clk)
begin
    tmp_s_reg_218[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_s_reg_218_pp0_it1[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_s_reg_218_pp0_it2[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_s_reg_218_pp0_it3[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_s_reg_218_pp0_it4[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_s_reg_218_pp0_it5[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
end



endmodule //combine

