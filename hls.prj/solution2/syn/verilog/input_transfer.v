// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.2
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module input_transfer (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_V,
        input_buffer_pointer_i,
        input_buffer_pointer_o,
        input_buffer_pointer_o_ap_vld,
        initialize_i,
        initialize_o,
        initialize_o_ap_vld,
        input_array_V_address0,
        input_array_V_ce0,
        input_array_V_we0,
        input_array_V_d0
);

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [21:0] input_V;
input  [31:0] input_buffer_pointer_i;
output  [31:0] input_buffer_pointer_o;
output   input_buffer_pointer_o_ap_vld;
input  [31:0] initialize_i;
output  [31:0] initialize_o;
output   initialize_o_ap_vld;
output  [9:0] input_array_V_address0;
output   input_array_V_ce0;
output   input_array_V_we0;
output  [31:0] input_array_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_buffer_pointer_o_ap_vld;
reg[31:0] initialize_o;
reg initialize_o_ap_vld;
reg[9:0] input_array_V_address0;
reg input_array_V_ce0;
reg input_array_V_we0;
reg   [6:0] ap_CS_fsm = 7'b0000000;
reg   [10:0] input_buffer_V_address0;
reg    input_buffer_V_ce0;
reg    input_buffer_V_we0;
wire   [31:0] input_buffer_V_d0;
wire   [31:0] input_buffer_V_q0;
reg   [31:0] base_input = 32'b00000000000000000000000000000000;
reg   [10:0] input_counter_1_reg_149;
reg   [10:0] input_counter_reg_160;
reg   [10:0] ap_reg_ppstg_input_counter_reg_160_pp1_it1;
reg    ap_reg_ppiten_pp1_it0 = 1'b0;
reg    ap_reg_ppiten_pp1_it1 = 1'b0;
reg    ap_reg_ppiten_pp1_it2 = 1'b0;
reg    ap_reg_ppiten_pp1_it3 = 1'b0;
reg    ap_reg_ppiten_pp1_it4 = 1'b0;
reg    ap_reg_ppiten_pp1_it5 = 1'b0;
reg    ap_reg_ppiten_pp1_it6 = 1'b0;
reg    ap_reg_ppiten_pp1_it7 = 1'b0;
reg    ap_reg_ppiten_pp1_it8 = 1'b0;
reg    ap_reg_ppiten_pp1_it9 = 1'b0;
reg    ap_reg_ppiten_pp1_it10 = 1'b0;
reg    ap_reg_ppiten_pp1_it11 = 1'b0;
reg    ap_reg_ppiten_pp1_it12 = 1'b0;
reg    ap_reg_ppiten_pp1_it13 = 1'b0;
reg    ap_reg_ppiten_pp1_it14 = 1'b0;
reg    ap_reg_ppiten_pp1_it15 = 1'b0;
reg    ap_reg_ppiten_pp1_it16 = 1'b0;
reg    ap_reg_ppiten_pp1_it17 = 1'b0;
reg    ap_reg_ppiten_pp1_it18 = 1'b0;
reg    ap_reg_ppiten_pp1_it19 = 1'b0;
reg    ap_reg_ppiten_pp1_it20 = 1'b0;
reg    ap_reg_ppiten_pp1_it21 = 1'b0;
reg    ap_reg_ppiten_pp1_it22 = 1'b0;
reg    ap_reg_ppiten_pp1_it23 = 1'b0;
reg    ap_reg_ppiten_pp1_it24 = 1'b0;
reg    ap_reg_ppiten_pp1_it25 = 1'b0;
reg    ap_reg_ppiten_pp1_it26 = 1'b0;
reg    ap_reg_ppiten_pp1_it27 = 1'b0;
reg    ap_reg_ppiten_pp1_it28 = 1'b0;
reg    ap_reg_ppiten_pp1_it29 = 1'b0;
reg    ap_reg_ppiten_pp1_it30 = 1'b0;
reg    ap_reg_ppiten_pp1_it31 = 1'b0;
reg    ap_reg_ppiten_pp1_it32 = 1'b0;
reg    ap_reg_ppiten_pp1_it33 = 1'b0;
reg    ap_reg_ppiten_pp1_it34 = 1'b0;
reg    ap_reg_ppiten_pp1_it35 = 1'b0;
reg   [10:0] ap_reg_ppstg_input_counter_reg_160_pp1_it2;
reg   [10:0] ap_reg_ppstg_input_counter_reg_160_pp1_it3;
reg   [10:0] ap_reg_ppstg_input_counter_reg_160_pp1_it4;
reg   [10:0] ap_reg_ppstg_input_counter_reg_160_pp1_it5;
reg   [10:0] ap_reg_ppstg_input_counter_reg_160_pp1_it6;
reg   [10:0] ap_reg_ppstg_input_counter_reg_160_pp1_it7;
reg   [10:0] ap_reg_ppstg_input_counter_reg_160_pp1_it8;
reg   [10:0] ap_reg_ppstg_input_counter_reg_160_pp1_it9;
reg   [10:0] ap_reg_ppstg_input_counter_reg_160_pp1_it10;
reg   [10:0] ap_reg_ppstg_input_counter_reg_160_pp1_it11;
reg   [10:0] ap_reg_ppstg_input_counter_reg_160_pp1_it12;
reg   [10:0] ap_reg_ppstg_input_counter_reg_160_pp1_it13;
reg   [10:0] ap_reg_ppstg_input_counter_reg_160_pp1_it14;
reg   [10:0] ap_reg_ppstg_input_counter_reg_160_pp1_it15;
reg   [10:0] ap_reg_ppstg_input_counter_reg_160_pp1_it16;
reg   [10:0] ap_reg_ppstg_input_counter_reg_160_pp1_it17;
reg   [10:0] ap_reg_ppstg_input_counter_reg_160_pp1_it18;
reg   [10:0] ap_reg_ppstg_input_counter_reg_160_pp1_it19;
reg   [10:0] ap_reg_ppstg_input_counter_reg_160_pp1_it20;
reg   [10:0] ap_reg_ppstg_input_counter_reg_160_pp1_it21;
reg   [10:0] ap_reg_ppstg_input_counter_reg_160_pp1_it22;
reg   [10:0] ap_reg_ppstg_input_counter_reg_160_pp1_it23;
reg   [10:0] ap_reg_ppstg_input_counter_reg_160_pp1_it24;
reg   [10:0] ap_reg_ppstg_input_counter_reg_160_pp1_it25;
reg   [10:0] ap_reg_ppstg_input_counter_reg_160_pp1_it26;
reg   [10:0] ap_reg_ppstg_input_counter_reg_160_pp1_it27;
reg   [10:0] ap_reg_ppstg_input_counter_reg_160_pp1_it28;
reg   [10:0] ap_reg_ppstg_input_counter_reg_160_pp1_it29;
reg   [10:0] ap_reg_ppstg_input_counter_reg_160_pp1_it30;
reg   [10:0] ap_reg_ppstg_input_counter_reg_160_pp1_it31;
reg   [10:0] ap_reg_ppstg_input_counter_reg_160_pp1_it32;
reg   [10:0] ap_reg_ppstg_input_counter_reg_160_pp1_it33;
reg   [10:0] ap_reg_ppstg_input_counter_reg_160_pp1_it34;
reg   [31:0] input_buffer_pointer_load_reg_388;
wire   [0:0] tmp_32_fu_201_p2;
reg   [0:0] tmp_32_reg_400;
wire   [0:0] tmp_36_fu_255_p2;
reg   [0:0] tmp_36_reg_404;
wire   [0:0] tmp_34_fu_302_p2;
reg   [0:0] tmp_34_reg_408;
wire   [0:0] exitcond8_fu_308_p2;
reg   [0:0] exitcond8_reg_412;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
wire   [10:0] input_counter_3_fu_314_p2;
wire   [63:0] tmp_45_fu_320_p1;
reg   [63:0] tmp_45_reg_421;
wire   [0:0] exitcond_fu_325_p2;
reg   [0:0] exitcond_reg_431;
reg   [0:0] ap_reg_ppstg_exitcond_reg_431_pp1_it1;
reg   [0:0] ap_reg_ppstg_exitcond_reg_431_pp1_it2;
reg   [0:0] ap_reg_ppstg_exitcond_reg_431_pp1_it3;
reg   [0:0] ap_reg_ppstg_exitcond_reg_431_pp1_it4;
reg   [0:0] ap_reg_ppstg_exitcond_reg_431_pp1_it5;
reg   [0:0] ap_reg_ppstg_exitcond_reg_431_pp1_it6;
reg   [0:0] ap_reg_ppstg_exitcond_reg_431_pp1_it7;
reg   [0:0] ap_reg_ppstg_exitcond_reg_431_pp1_it8;
reg   [0:0] ap_reg_ppstg_exitcond_reg_431_pp1_it9;
reg   [0:0] ap_reg_ppstg_exitcond_reg_431_pp1_it10;
reg   [0:0] ap_reg_ppstg_exitcond_reg_431_pp1_it11;
reg   [0:0] ap_reg_ppstg_exitcond_reg_431_pp1_it12;
reg   [0:0] ap_reg_ppstg_exitcond_reg_431_pp1_it13;
reg   [0:0] ap_reg_ppstg_exitcond_reg_431_pp1_it14;
reg   [0:0] ap_reg_ppstg_exitcond_reg_431_pp1_it15;
reg   [0:0] ap_reg_ppstg_exitcond_reg_431_pp1_it16;
reg   [0:0] ap_reg_ppstg_exitcond_reg_431_pp1_it17;
reg   [0:0] ap_reg_ppstg_exitcond_reg_431_pp1_it18;
reg   [0:0] ap_reg_ppstg_exitcond_reg_431_pp1_it19;
reg   [0:0] ap_reg_ppstg_exitcond_reg_431_pp1_it20;
reg   [0:0] ap_reg_ppstg_exitcond_reg_431_pp1_it21;
reg   [0:0] ap_reg_ppstg_exitcond_reg_431_pp1_it22;
reg   [0:0] ap_reg_ppstg_exitcond_reg_431_pp1_it23;
reg   [0:0] ap_reg_ppstg_exitcond_reg_431_pp1_it24;
reg   [0:0] ap_reg_ppstg_exitcond_reg_431_pp1_it25;
reg   [0:0] ap_reg_ppstg_exitcond_reg_431_pp1_it26;
reg   [0:0] ap_reg_ppstg_exitcond_reg_431_pp1_it27;
reg   [0:0] ap_reg_ppstg_exitcond_reg_431_pp1_it28;
reg   [0:0] ap_reg_ppstg_exitcond_reg_431_pp1_it29;
reg   [0:0] ap_reg_ppstg_exitcond_reg_431_pp1_it30;
reg   [0:0] ap_reg_ppstg_exitcond_reg_431_pp1_it31;
reg   [0:0] ap_reg_ppstg_exitcond_reg_431_pp1_it32;
reg   [0:0] ap_reg_ppstg_exitcond_reg_431_pp1_it33;
reg   [0:0] ap_reg_ppstg_exitcond_reg_431_pp1_it34;
wire   [10:0] input_counter_2_fu_331_p2;
reg   [10:0] input_counter_2_reg_435;
wire   [31:0] grp_fu_178_p2;
reg   [10:0] input_counter_phi_fu_164_p4;
wire   [63:0] tmp_fu_190_p1;
wire   [63:0] tmp_42_fu_359_p1;
wire   [63:0] tmp_43_fu_364_p1;
wire   [31:0] grp_fu_369_p2;
wire   [0:0] tmp_s_fu_195_p2;
wire   [31:0] grp_fu_381_p2;
wire   [9:0] tmp_121_fu_214_p1;
wire   [31:0] grp_fu_173_p2;
wire   [9:0] tmp_122_fu_225_p1;
wire   [31:0] p_and_t6_fu_229_p3;
wire   [0:0] tmp_117_fu_207_p3;
wire   [31:0] p_neg_t7_fu_237_p2;
wire   [31:0] p_and_f4_fu_217_p3;
wire   [31:0] tmp_35_fu_243_p3;
wire   [10:0] tmp_123_fu_251_p1;
wire   [7:0] tmp_118_fu_261_p1;
wire   [7:0] tmp_119_fu_272_p1;
wire   [31:0] p_and_t_fu_276_p3;
wire   [31:0] p_neg_t_fu_284_p2;
wire   [31:0] p_and_f_fu_264_p3;
wire   [31:0] tmp_33_fu_290_p3;
wire   [8:0] tmp_120_fu_298_p1;
wire   [31:0] tmp_124_fu_341_p2;
wire   [31:0] input_counter_cast_fu_337_p1;
wire   [31:0] grp_fu_353_p0;
wire   [31:0] grp_fu_353_p1;
wire   [31:0] grp_fu_353_p2;
wire   [31:0] grp_fu_369_p0;
wire   [31:0] grp_fu_369_p1;
wire   [31:0] grp_fu_381_p0;
wire   [31:0] grp_fu_381_p1;
reg    grp_fu_353_ce;
wire    grp_fu_369_ce;
wire    grp_fu_381_ce;
reg   [6:0] ap_NS_fsm;
parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 7'b0000000;
parameter    ap_ST_st2_fsm_1 = 7'b1;
parameter    ap_ST_st3_fsm_2 = 7'b10;
parameter    ap_ST_pp0_stg0_fsm_3 = 7'b11;
parameter    ap_ST_st6_fsm_4 = 7'b100;
parameter    ap_ST_st7_fsm_5 = 7'b101;
parameter    ap_ST_pp1_stg0_fsm_6 = 7'b110;
parameter    ap_ST_st44_fsm_7 = 7'b111;
parameter    ap_ST_st45_fsm_8 = 7'b1000;
parameter    ap_ST_st46_fsm_9 = 7'b1001;
parameter    ap_ST_st47_fsm_10 = 7'b1010;
parameter    ap_ST_st48_fsm_11 = 7'b1011;
parameter    ap_ST_st49_fsm_12 = 7'b1100;
parameter    ap_ST_st50_fsm_13 = 7'b1101;
parameter    ap_ST_st51_fsm_14 = 7'b1110;
parameter    ap_ST_st52_fsm_15 = 7'b1111;
parameter    ap_ST_st53_fsm_16 = 7'b10000;
parameter    ap_ST_st54_fsm_17 = 7'b10001;
parameter    ap_ST_st55_fsm_18 = 7'b10010;
parameter    ap_ST_st56_fsm_19 = 7'b10011;
parameter    ap_ST_st57_fsm_20 = 7'b10100;
parameter    ap_ST_st58_fsm_21 = 7'b10101;
parameter    ap_ST_st59_fsm_22 = 7'b10110;
parameter    ap_ST_st60_fsm_23 = 7'b10111;
parameter    ap_ST_st61_fsm_24 = 7'b11000;
parameter    ap_ST_st62_fsm_25 = 7'b11001;
parameter    ap_ST_st63_fsm_26 = 7'b11010;
parameter    ap_ST_st64_fsm_27 = 7'b11011;
parameter    ap_ST_st65_fsm_28 = 7'b11100;
parameter    ap_ST_st66_fsm_29 = 7'b11101;
parameter    ap_ST_st67_fsm_30 = 7'b11110;
parameter    ap_ST_st68_fsm_31 = 7'b11111;
parameter    ap_ST_st69_fsm_32 = 7'b100000;
parameter    ap_ST_st70_fsm_33 = 7'b100001;
parameter    ap_ST_st71_fsm_34 = 7'b100010;
parameter    ap_ST_st72_fsm_35 = 7'b100011;
parameter    ap_ST_st73_fsm_36 = 7'b100100;
parameter    ap_ST_st74_fsm_37 = 7'b100101;
parameter    ap_ST_st75_fsm_38 = 7'b100110;
parameter    ap_ST_st76_fsm_39 = 7'b100111;
parameter    ap_ST_st77_fsm_40 = 7'b101000;
parameter    ap_ST_st78_fsm_41 = 7'b101001;
parameter    ap_ST_st79_fsm_42 = 7'b101010;
parameter    ap_ST_st80_fsm_43 = 7'b101011;
parameter    ap_ST_st81_fsm_44 = 7'b101100;
parameter    ap_ST_st82_fsm_45 = 7'b101101;
parameter    ap_ST_st83_fsm_46 = 7'b101110;
parameter    ap_ST_st84_fsm_47 = 7'b101111;
parameter    ap_ST_st85_fsm_48 = 7'b110000;
parameter    ap_ST_st86_fsm_49 = 7'b110001;
parameter    ap_ST_st87_fsm_50 = 7'b110010;
parameter    ap_ST_st88_fsm_51 = 7'b110011;
parameter    ap_ST_st89_fsm_52 = 7'b110100;
parameter    ap_ST_st90_fsm_53 = 7'b110101;
parameter    ap_ST_st91_fsm_54 = 7'b110110;
parameter    ap_ST_st92_fsm_55 = 7'b110111;
parameter    ap_ST_st93_fsm_56 = 7'b111000;
parameter    ap_ST_st94_fsm_57 = 7'b111001;
parameter    ap_ST_st95_fsm_58 = 7'b111010;
parameter    ap_ST_st96_fsm_59 = 7'b111011;
parameter    ap_ST_st97_fsm_60 = 7'b111100;
parameter    ap_ST_st98_fsm_61 = 7'b111101;
parameter    ap_ST_st99_fsm_62 = 7'b111110;
parameter    ap_ST_st100_fsm_63 = 7'b111111;
parameter    ap_ST_st101_fsm_64 = 7'b1000000;
parameter    ap_ST_st102_fsm_65 = 7'b1000001;
parameter    ap_ST_st103_fsm_66 = 7'b1000010;
parameter    ap_ST_st104_fsm_67 = 7'b1000011;
parameter    ap_ST_st105_fsm_68 = 7'b1000100;
parameter    ap_ST_st106_fsm_69 = 7'b1000101;
parameter    ap_ST_st107_fsm_70 = 7'b1000110;
parameter    ap_ST_st108_fsm_71 = 7'b1000111;
parameter    ap_ST_st109_fsm_72 = 7'b1001000;
parameter    ap_ST_st110_fsm_73 = 7'b1001001;
parameter    ap_ST_st111_fsm_74 = 7'b1001010;
parameter    ap_ST_st112_fsm_75 = 7'b1001011;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_400 = 32'b10000000000;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv22_0 = 22'b0000000000000000000000;
parameter    ap_const_lv11_3FF = 11'b1111111111;
parameter    ap_const_lv24_0 = 24'b000000000000000000000000;
parameter    ap_const_lv9_FF = 9'b11111111;
parameter    ap_const_lv11_400 = 11'b10000000000;
parameter    ap_const_lv11_1 = 11'b1;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_500 = 32'b10100000000;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_true = 1'b1;


input_transfer_input_buffer_V #(
    .DataWidth( 32 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
input_buffer_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( input_buffer_V_address0 ),
    .ce0( input_buffer_V_ce0 ),
    .we0( input_buffer_V_we0 ),
    .d0( input_buffer_V_d0 ),
    .q0( input_buffer_V_q0 )
);

top_srem_32ns_32ns_32_35 #(
    .ID( 1 ),
    .NUM_STAGE( 35 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
top_srem_32ns_32ns_32_35_U1(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_353_p0 ),
    .din1( grp_fu_353_p1 ),
    .ce( grp_fu_353_ce ),
    .dout( grp_fu_353_p2 )
);

top_srem_32ns_32ns_32_35 #(
    .ID( 2 ),
    .NUM_STAGE( 35 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
top_srem_32ns_32ns_32_35_U2(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_369_p0 ),
    .din1( grp_fu_369_p1 ),
    .ce( grp_fu_369_ce ),
    .dout( grp_fu_369_p2 )
);

top_srem_32ns_32ns_32_35 #(
    .ID( 3 ),
    .NUM_STAGE( 35 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
top_srem_32ns_32ns_32_35_U3(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_381_p0 ),
    .din1( grp_fu_381_p1 ),
    .ce( grp_fu_381_ce ),
    .dout( grp_fu_381_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_3 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond8_fu_308_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_ST_st3_fsm_2 == ap_CS_fsm) & ~(tmp_36_reg_404 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_3 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond8_fu_308_p2))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_ST_st3_fsm_2 == ap_CS_fsm) & ~(tmp_36_reg_404 == ap_const_lv1_0)) | ((ap_ST_pp0_stg0_fsm_3 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond8_fu_308_p2)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond_fu_325_p2))) begin
            ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
        end else if (((ap_ST_st7_fsm_5 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_34_reg_408))) begin
            ap_reg_ppiten_pp1_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp1_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond_fu_325_p2))) begin
            ap_reg_ppiten_pp1_it1 <= ap_const_logic_1;
        end else if ((((ap_ST_st7_fsm_5 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_34_reg_408)) | ((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond_fu_325_p2)))) begin
            ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it10 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it10
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it10 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it10 <= ap_reg_ppiten_pp1_it9;
        end else if (((ap_ST_st7_fsm_5 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_34_reg_408))) begin
            ap_reg_ppiten_pp1_it10 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it11 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it11
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it11 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it11 <= ap_reg_ppiten_pp1_it10;
        end else if (((ap_ST_st7_fsm_5 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_34_reg_408))) begin
            ap_reg_ppiten_pp1_it11 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it12 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it12
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it12 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it12 <= ap_reg_ppiten_pp1_it11;
        end else if (((ap_ST_st7_fsm_5 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_34_reg_408))) begin
            ap_reg_ppiten_pp1_it12 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it13 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it13
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it13 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it13 <= ap_reg_ppiten_pp1_it12;
        end else if (((ap_ST_st7_fsm_5 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_34_reg_408))) begin
            ap_reg_ppiten_pp1_it13 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it14 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it14
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it14 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it14 <= ap_reg_ppiten_pp1_it13;
        end else if (((ap_ST_st7_fsm_5 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_34_reg_408))) begin
            ap_reg_ppiten_pp1_it14 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it15 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it15
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it15 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it15 <= ap_reg_ppiten_pp1_it14;
        end else if (((ap_ST_st7_fsm_5 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_34_reg_408))) begin
            ap_reg_ppiten_pp1_it15 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it16 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it16
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it16 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it16 <= ap_reg_ppiten_pp1_it15;
        end else if (((ap_ST_st7_fsm_5 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_34_reg_408))) begin
            ap_reg_ppiten_pp1_it16 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it17 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it17
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it17 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it17 <= ap_reg_ppiten_pp1_it16;
        end else if (((ap_ST_st7_fsm_5 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_34_reg_408))) begin
            ap_reg_ppiten_pp1_it17 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it18 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it18
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it18 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it18 <= ap_reg_ppiten_pp1_it17;
        end else if (((ap_ST_st7_fsm_5 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_34_reg_408))) begin
            ap_reg_ppiten_pp1_it18 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it19 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it19
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it19 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it19 <= ap_reg_ppiten_pp1_it18;
        end else if (((ap_ST_st7_fsm_5 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_34_reg_408))) begin
            ap_reg_ppiten_pp1_it19 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it2 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it2 <= ap_reg_ppiten_pp1_it1;
        end else if (((ap_ST_st7_fsm_5 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_34_reg_408))) begin
            ap_reg_ppiten_pp1_it2 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it20 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it20
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it20 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it20 <= ap_reg_ppiten_pp1_it19;
        end else if (((ap_ST_st7_fsm_5 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_34_reg_408))) begin
            ap_reg_ppiten_pp1_it20 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it21 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it21
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it21 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it21 <= ap_reg_ppiten_pp1_it20;
        end else if (((ap_ST_st7_fsm_5 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_34_reg_408))) begin
            ap_reg_ppiten_pp1_it21 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it22 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it22
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it22 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it22 <= ap_reg_ppiten_pp1_it21;
        end else if (((ap_ST_st7_fsm_5 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_34_reg_408))) begin
            ap_reg_ppiten_pp1_it22 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it23 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it23
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it23 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it23 <= ap_reg_ppiten_pp1_it22;
        end else if (((ap_ST_st7_fsm_5 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_34_reg_408))) begin
            ap_reg_ppiten_pp1_it23 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it24 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it24
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it24 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it24 <= ap_reg_ppiten_pp1_it23;
        end else if (((ap_ST_st7_fsm_5 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_34_reg_408))) begin
            ap_reg_ppiten_pp1_it24 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it25 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it25
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it25 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it25 <= ap_reg_ppiten_pp1_it24;
        end else if (((ap_ST_st7_fsm_5 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_34_reg_408))) begin
            ap_reg_ppiten_pp1_it25 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it26 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it26
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it26 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it26 <= ap_reg_ppiten_pp1_it25;
        end else if (((ap_ST_st7_fsm_5 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_34_reg_408))) begin
            ap_reg_ppiten_pp1_it26 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it27 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it27
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it27 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it27 <= ap_reg_ppiten_pp1_it26;
        end else if (((ap_ST_st7_fsm_5 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_34_reg_408))) begin
            ap_reg_ppiten_pp1_it27 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it28 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it28
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it28 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it28 <= ap_reg_ppiten_pp1_it27;
        end else if (((ap_ST_st7_fsm_5 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_34_reg_408))) begin
            ap_reg_ppiten_pp1_it28 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it29 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it29
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it29 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it29 <= ap_reg_ppiten_pp1_it28;
        end else if (((ap_ST_st7_fsm_5 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_34_reg_408))) begin
            ap_reg_ppiten_pp1_it29 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it3 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it3
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it3 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it3 <= ap_reg_ppiten_pp1_it2;
        end else if (((ap_ST_st7_fsm_5 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_34_reg_408))) begin
            ap_reg_ppiten_pp1_it3 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it30 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it30
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it30 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it30 <= ap_reg_ppiten_pp1_it29;
        end else if (((ap_ST_st7_fsm_5 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_34_reg_408))) begin
            ap_reg_ppiten_pp1_it30 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it31 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it31
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it31 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it31 <= ap_reg_ppiten_pp1_it30;
        end else if (((ap_ST_st7_fsm_5 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_34_reg_408))) begin
            ap_reg_ppiten_pp1_it31 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it32 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it32
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it32 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it32 <= ap_reg_ppiten_pp1_it31;
        end else if (((ap_ST_st7_fsm_5 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_34_reg_408))) begin
            ap_reg_ppiten_pp1_it32 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it33 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it33
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it33 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it33 <= ap_reg_ppiten_pp1_it32;
        end else if (((ap_ST_st7_fsm_5 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_34_reg_408))) begin
            ap_reg_ppiten_pp1_it33 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it34 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it34
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it34 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it34 <= ap_reg_ppiten_pp1_it33;
        end else if (((ap_ST_st7_fsm_5 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_34_reg_408))) begin
            ap_reg_ppiten_pp1_it34 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it35 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it35
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it35 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it35 <= ap_reg_ppiten_pp1_it34;
        end else if (((ap_ST_st7_fsm_5 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_34_reg_408))) begin
            ap_reg_ppiten_pp1_it35 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it4 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it4
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it4 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it4 <= ap_reg_ppiten_pp1_it3;
        end else if (((ap_ST_st7_fsm_5 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_34_reg_408))) begin
            ap_reg_ppiten_pp1_it4 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it5 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it5
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it5 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it5 <= ap_reg_ppiten_pp1_it4;
        end else if (((ap_ST_st7_fsm_5 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_34_reg_408))) begin
            ap_reg_ppiten_pp1_it5 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it6 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it6
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it6 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it6 <= ap_reg_ppiten_pp1_it5;
        end else if (((ap_ST_st7_fsm_5 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_34_reg_408))) begin
            ap_reg_ppiten_pp1_it6 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it7 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it7
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it7 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it7 <= ap_reg_ppiten_pp1_it6;
        end else if (((ap_ST_st7_fsm_5 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_34_reg_408))) begin
            ap_reg_ppiten_pp1_it7 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it8 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it8
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it8 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it8 <= ap_reg_ppiten_pp1_it7;
        end else if (((ap_ST_st7_fsm_5 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_34_reg_408))) begin
            ap_reg_ppiten_pp1_it8 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it9 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it9
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it9 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it9 <= ap_reg_ppiten_pp1_it8;
        end else if (((ap_ST_st7_fsm_5 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_34_reg_408))) begin
            ap_reg_ppiten_pp1_it9 <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st78_fsm_41 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_34_reg_408) & ~(tmp_32_reg_400 == ap_const_lv1_0))) begin
        base_input <= grp_fu_369_p2;
    end else if ((ap_ST_st6_fsm_4 == ap_CS_fsm)) begin
        base_input <= grp_fu_178_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st3_fsm_2 == ap_CS_fsm) & ~(tmp_36_reg_404 == ap_const_lv1_0))) begin
        input_counter_1_reg_149 <= ap_const_lv11_0;
    end else if (((ap_ST_pp0_stg0_fsm_3 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_lv1_0 == exitcond8_fu_308_p2))) begin
        input_counter_1_reg_149 <= input_counter_3_fu_314_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st7_fsm_5 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_34_reg_408))) begin
        input_counter_reg_160 <= ap_const_lv11_0;
    end else if (((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_const_lv1_0 == exitcond_reg_431))) begin
        input_counter_reg_160 <= input_counter_2_reg_435;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm)) begin
        ap_reg_ppstg_exitcond_reg_431_pp1_it1 <= exitcond_reg_431;
        ap_reg_ppstg_exitcond_reg_431_pp1_it10 <= ap_reg_ppstg_exitcond_reg_431_pp1_it9;
        ap_reg_ppstg_exitcond_reg_431_pp1_it11 <= ap_reg_ppstg_exitcond_reg_431_pp1_it10;
        ap_reg_ppstg_exitcond_reg_431_pp1_it12 <= ap_reg_ppstg_exitcond_reg_431_pp1_it11;
        ap_reg_ppstg_exitcond_reg_431_pp1_it13 <= ap_reg_ppstg_exitcond_reg_431_pp1_it12;
        ap_reg_ppstg_exitcond_reg_431_pp1_it14 <= ap_reg_ppstg_exitcond_reg_431_pp1_it13;
        ap_reg_ppstg_exitcond_reg_431_pp1_it15 <= ap_reg_ppstg_exitcond_reg_431_pp1_it14;
        ap_reg_ppstg_exitcond_reg_431_pp1_it16 <= ap_reg_ppstg_exitcond_reg_431_pp1_it15;
        ap_reg_ppstg_exitcond_reg_431_pp1_it17 <= ap_reg_ppstg_exitcond_reg_431_pp1_it16;
        ap_reg_ppstg_exitcond_reg_431_pp1_it18 <= ap_reg_ppstg_exitcond_reg_431_pp1_it17;
        ap_reg_ppstg_exitcond_reg_431_pp1_it19 <= ap_reg_ppstg_exitcond_reg_431_pp1_it18;
        ap_reg_ppstg_exitcond_reg_431_pp1_it2 <= ap_reg_ppstg_exitcond_reg_431_pp1_it1;
        ap_reg_ppstg_exitcond_reg_431_pp1_it20 <= ap_reg_ppstg_exitcond_reg_431_pp1_it19;
        ap_reg_ppstg_exitcond_reg_431_pp1_it21 <= ap_reg_ppstg_exitcond_reg_431_pp1_it20;
        ap_reg_ppstg_exitcond_reg_431_pp1_it22 <= ap_reg_ppstg_exitcond_reg_431_pp1_it21;
        ap_reg_ppstg_exitcond_reg_431_pp1_it23 <= ap_reg_ppstg_exitcond_reg_431_pp1_it22;
        ap_reg_ppstg_exitcond_reg_431_pp1_it24 <= ap_reg_ppstg_exitcond_reg_431_pp1_it23;
        ap_reg_ppstg_exitcond_reg_431_pp1_it25 <= ap_reg_ppstg_exitcond_reg_431_pp1_it24;
        ap_reg_ppstg_exitcond_reg_431_pp1_it26 <= ap_reg_ppstg_exitcond_reg_431_pp1_it25;
        ap_reg_ppstg_exitcond_reg_431_pp1_it27 <= ap_reg_ppstg_exitcond_reg_431_pp1_it26;
        ap_reg_ppstg_exitcond_reg_431_pp1_it28 <= ap_reg_ppstg_exitcond_reg_431_pp1_it27;
        ap_reg_ppstg_exitcond_reg_431_pp1_it29 <= ap_reg_ppstg_exitcond_reg_431_pp1_it28;
        ap_reg_ppstg_exitcond_reg_431_pp1_it3 <= ap_reg_ppstg_exitcond_reg_431_pp1_it2;
        ap_reg_ppstg_exitcond_reg_431_pp1_it30 <= ap_reg_ppstg_exitcond_reg_431_pp1_it29;
        ap_reg_ppstg_exitcond_reg_431_pp1_it31 <= ap_reg_ppstg_exitcond_reg_431_pp1_it30;
        ap_reg_ppstg_exitcond_reg_431_pp1_it32 <= ap_reg_ppstg_exitcond_reg_431_pp1_it31;
        ap_reg_ppstg_exitcond_reg_431_pp1_it33 <= ap_reg_ppstg_exitcond_reg_431_pp1_it32;
        ap_reg_ppstg_exitcond_reg_431_pp1_it34 <= ap_reg_ppstg_exitcond_reg_431_pp1_it33;
        ap_reg_ppstg_exitcond_reg_431_pp1_it4 <= ap_reg_ppstg_exitcond_reg_431_pp1_it3;
        ap_reg_ppstg_exitcond_reg_431_pp1_it5 <= ap_reg_ppstg_exitcond_reg_431_pp1_it4;
        ap_reg_ppstg_exitcond_reg_431_pp1_it6 <= ap_reg_ppstg_exitcond_reg_431_pp1_it5;
        ap_reg_ppstg_exitcond_reg_431_pp1_it7 <= ap_reg_ppstg_exitcond_reg_431_pp1_it6;
        ap_reg_ppstg_exitcond_reg_431_pp1_it8 <= ap_reg_ppstg_exitcond_reg_431_pp1_it7;
        ap_reg_ppstg_exitcond_reg_431_pp1_it9 <= ap_reg_ppstg_exitcond_reg_431_pp1_it8;
        ap_reg_ppstg_input_counter_reg_160_pp1_it1 <= input_counter_reg_160;
        ap_reg_ppstg_input_counter_reg_160_pp1_it10 <= ap_reg_ppstg_input_counter_reg_160_pp1_it9;
        ap_reg_ppstg_input_counter_reg_160_pp1_it11 <= ap_reg_ppstg_input_counter_reg_160_pp1_it10;
        ap_reg_ppstg_input_counter_reg_160_pp1_it12 <= ap_reg_ppstg_input_counter_reg_160_pp1_it11;
        ap_reg_ppstg_input_counter_reg_160_pp1_it13 <= ap_reg_ppstg_input_counter_reg_160_pp1_it12;
        ap_reg_ppstg_input_counter_reg_160_pp1_it14 <= ap_reg_ppstg_input_counter_reg_160_pp1_it13;
        ap_reg_ppstg_input_counter_reg_160_pp1_it15 <= ap_reg_ppstg_input_counter_reg_160_pp1_it14;
        ap_reg_ppstg_input_counter_reg_160_pp1_it16 <= ap_reg_ppstg_input_counter_reg_160_pp1_it15;
        ap_reg_ppstg_input_counter_reg_160_pp1_it17 <= ap_reg_ppstg_input_counter_reg_160_pp1_it16;
        ap_reg_ppstg_input_counter_reg_160_pp1_it18 <= ap_reg_ppstg_input_counter_reg_160_pp1_it17;
        ap_reg_ppstg_input_counter_reg_160_pp1_it19 <= ap_reg_ppstg_input_counter_reg_160_pp1_it18;
        ap_reg_ppstg_input_counter_reg_160_pp1_it2 <= ap_reg_ppstg_input_counter_reg_160_pp1_it1;
        ap_reg_ppstg_input_counter_reg_160_pp1_it20 <= ap_reg_ppstg_input_counter_reg_160_pp1_it19;
        ap_reg_ppstg_input_counter_reg_160_pp1_it21 <= ap_reg_ppstg_input_counter_reg_160_pp1_it20;
        ap_reg_ppstg_input_counter_reg_160_pp1_it22 <= ap_reg_ppstg_input_counter_reg_160_pp1_it21;
        ap_reg_ppstg_input_counter_reg_160_pp1_it23 <= ap_reg_ppstg_input_counter_reg_160_pp1_it22;
        ap_reg_ppstg_input_counter_reg_160_pp1_it24 <= ap_reg_ppstg_input_counter_reg_160_pp1_it23;
        ap_reg_ppstg_input_counter_reg_160_pp1_it25 <= ap_reg_ppstg_input_counter_reg_160_pp1_it24;
        ap_reg_ppstg_input_counter_reg_160_pp1_it26 <= ap_reg_ppstg_input_counter_reg_160_pp1_it25;
        ap_reg_ppstg_input_counter_reg_160_pp1_it27 <= ap_reg_ppstg_input_counter_reg_160_pp1_it26;
        ap_reg_ppstg_input_counter_reg_160_pp1_it28 <= ap_reg_ppstg_input_counter_reg_160_pp1_it27;
        ap_reg_ppstg_input_counter_reg_160_pp1_it29 <= ap_reg_ppstg_input_counter_reg_160_pp1_it28;
        ap_reg_ppstg_input_counter_reg_160_pp1_it3 <= ap_reg_ppstg_input_counter_reg_160_pp1_it2;
        ap_reg_ppstg_input_counter_reg_160_pp1_it30 <= ap_reg_ppstg_input_counter_reg_160_pp1_it29;
        ap_reg_ppstg_input_counter_reg_160_pp1_it31 <= ap_reg_ppstg_input_counter_reg_160_pp1_it30;
        ap_reg_ppstg_input_counter_reg_160_pp1_it32 <= ap_reg_ppstg_input_counter_reg_160_pp1_it31;
        ap_reg_ppstg_input_counter_reg_160_pp1_it33 <= ap_reg_ppstg_input_counter_reg_160_pp1_it32;
        ap_reg_ppstg_input_counter_reg_160_pp1_it34 <= ap_reg_ppstg_input_counter_reg_160_pp1_it33;
        ap_reg_ppstg_input_counter_reg_160_pp1_it4 <= ap_reg_ppstg_input_counter_reg_160_pp1_it3;
        ap_reg_ppstg_input_counter_reg_160_pp1_it5 <= ap_reg_ppstg_input_counter_reg_160_pp1_it4;
        ap_reg_ppstg_input_counter_reg_160_pp1_it6 <= ap_reg_ppstg_input_counter_reg_160_pp1_it5;
        ap_reg_ppstg_input_counter_reg_160_pp1_it7 <= ap_reg_ppstg_input_counter_reg_160_pp1_it6;
        ap_reg_ppstg_input_counter_reg_160_pp1_it8 <= ap_reg_ppstg_input_counter_reg_160_pp1_it7;
        ap_reg_ppstg_input_counter_reg_160_pp1_it9 <= ap_reg_ppstg_input_counter_reg_160_pp1_it8;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_3 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        exitcond8_reg_412 <= exitcond8_fu_308_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0))) begin
        exitcond_reg_431 <= exitcond_fu_325_p2;
        input_counter_2_reg_435 <= input_counter_2_fu_331_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
        input_buffer_pointer_load_reg_388 <= input_buffer_pointer_i;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        tmp_32_reg_400 <= tmp_32_fu_201_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(tmp_32_fu_201_p2 == ap_const_lv1_0))) begin
        tmp_34_reg_408 <= tmp_34_fu_302_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & (tmp_32_fu_201_p2 == ap_const_lv1_0))) begin
        tmp_36_reg_404 <= tmp_36_fu_255_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_3 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_lv1_0 == exitcond8_fu_308_p2))) begin
        tmp_45_reg_421[0] <= tmp_45_fu_320_p1[0];
tmp_45_reg_421[1] <= tmp_45_fu_320_p1[1];
tmp_45_reg_421[2] <= tmp_45_fu_320_p1[2];
tmp_45_reg_421[3] <= tmp_45_fu_320_p1[3];
tmp_45_reg_421[4] <= tmp_45_fu_320_p1[4];
tmp_45_reg_421[5] <= tmp_45_fu_320_p1[5];
tmp_45_reg_421[6] <= tmp_45_fu_320_p1[6];
tmp_45_reg_421[7] <= tmp_45_fu_320_p1[7];
tmp_45_reg_421[8] <= tmp_45_fu_320_p1[8];
tmp_45_reg_421[9] <= tmp_45_fu_320_p1[9];
tmp_45_reg_421[10] <= tmp_45_fu_320_p1[10];
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm)) | (ap_ST_st112_fsm_75 == ap_CS_fsm))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st112_fsm_75 == ap_CS_fsm)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// grp_fu_353_ce assign process. ///
always @ (ap_CS_fsm or exitcond_fu_325_p2 or exitcond_reg_431 or ap_reg_ppstg_exitcond_reg_431_pp1_it1 or ap_reg_ppstg_exitcond_reg_431_pp1_it2 or ap_reg_ppstg_exitcond_reg_431_pp1_it3 or ap_reg_ppstg_exitcond_reg_431_pp1_it4 or ap_reg_ppstg_exitcond_reg_431_pp1_it5 or ap_reg_ppstg_exitcond_reg_431_pp1_it6 or ap_reg_ppstg_exitcond_reg_431_pp1_it7 or ap_reg_ppstg_exitcond_reg_431_pp1_it8 or ap_reg_ppstg_exitcond_reg_431_pp1_it9 or ap_reg_ppstg_exitcond_reg_431_pp1_it10 or ap_reg_ppstg_exitcond_reg_431_pp1_it11 or ap_reg_ppstg_exitcond_reg_431_pp1_it12 or ap_reg_ppstg_exitcond_reg_431_pp1_it13 or ap_reg_ppstg_exitcond_reg_431_pp1_it14 or ap_reg_ppstg_exitcond_reg_431_pp1_it15 or ap_reg_ppstg_exitcond_reg_431_pp1_it16 or ap_reg_ppstg_exitcond_reg_431_pp1_it17 or ap_reg_ppstg_exitcond_reg_431_pp1_it18 or ap_reg_ppstg_exitcond_reg_431_pp1_it19 or ap_reg_ppstg_exitcond_reg_431_pp1_it20 or ap_reg_ppstg_exitcond_reg_431_pp1_it21 or ap_reg_ppstg_exitcond_reg_431_pp1_it22 or ap_reg_ppstg_exitcond_reg_431_pp1_it23 or ap_reg_ppstg_exitcond_reg_431_pp1_it24 or ap_reg_ppstg_exitcond_reg_431_pp1_it25 or ap_reg_ppstg_exitcond_reg_431_pp1_it26 or ap_reg_ppstg_exitcond_reg_431_pp1_it27 or ap_reg_ppstg_exitcond_reg_431_pp1_it28 or ap_reg_ppstg_exitcond_reg_431_pp1_it29 or ap_reg_ppstg_exitcond_reg_431_pp1_it30 or ap_reg_ppstg_exitcond_reg_431_pp1_it31 or ap_reg_ppstg_exitcond_reg_431_pp1_it32 or ap_reg_ppstg_exitcond_reg_431_pp1_it33)
begin
    if (((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm) & ((ap_const_lv1_0 == exitcond_fu_325_p2) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_431_pp1_it33) | (ap_const_lv1_0 == exitcond_reg_431) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_431_pp1_it1) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_431_pp1_it2) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_431_pp1_it3) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_431_pp1_it4) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_431_pp1_it5) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_431_pp1_it6) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_431_pp1_it7) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_431_pp1_it8) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_431_pp1_it9) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_431_pp1_it10) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_431_pp1_it11) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_431_pp1_it12) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_431_pp1_it13) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_431_pp1_it14) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_431_pp1_it15) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_431_pp1_it16) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_431_pp1_it17) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_431_pp1_it18) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_431_pp1_it19) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_431_pp1_it20) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_431_pp1_it21) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_431_pp1_it22) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_431_pp1_it23) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_431_pp1_it24) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_431_pp1_it25) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_431_pp1_it26) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_431_pp1_it27) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_431_pp1_it28) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_431_pp1_it29) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_431_pp1_it30) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_431_pp1_it31) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_431_pp1_it32)))) begin
        grp_fu_353_ce = ap_const_logic_1;
    end else begin
        grp_fu_353_ce = ap_const_logic_0;
    end
end

/// initialize_o assign process. ///
always @ (ap_start or ap_CS_fsm or initialize_i or tmp_s_fu_195_p2)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0) & ~(ap_const_lv1_0 == tmp_s_fu_195_p2))) begin
        initialize_o = ap_const_lv32_1;
    end else begin
        initialize_o = initialize_i;
    end
end

/// initialize_o_ap_vld assign process. ///
always @ (ap_start or ap_CS_fsm or tmp_s_fu_195_p2)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0) & ~(ap_const_lv1_0 == tmp_s_fu_195_p2))) begin
        initialize_o_ap_vld = ap_const_logic_1;
    end else begin
        initialize_o_ap_vld = ap_const_logic_0;
    end
end

/// input_array_V_address0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp1_it35 or ap_reg_ppiten_pp0_it1 or tmp_45_reg_421 or tmp_43_fu_364_p1)
begin
    if (((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it35))) begin
        input_array_V_address0 = tmp_43_fu_364_p1;
    end else if (((ap_ST_pp0_stg0_fsm_3 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
        input_array_V_address0 = tmp_45_reg_421;
    end else begin
        input_array_V_address0 = tmp_43_fu_364_p1;
    end
end

/// input_array_V_ce0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp1_it35 or exitcond8_reg_412 or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond_reg_431_pp1_it34)
begin
    if ((((ap_ST_pp0_stg0_fsm_3 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == exitcond8_reg_412)) | ((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it35) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_431_pp1_it34)))) begin
        input_array_V_ce0 = ap_const_logic_1;
    end else begin
        input_array_V_ce0 = ap_const_logic_0;
    end
end

/// input_array_V_we0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp1_it35 or exitcond8_reg_412 or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond_reg_431_pp1_it34)
begin
    if ((((ap_ST_pp0_stg0_fsm_3 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == exitcond8_reg_412)) | ((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it35) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_431_pp1_it34)))) begin
        input_array_V_we0 = ap_const_logic_1;
    end else begin
        input_array_V_we0 = ap_const_logic_0;
    end
end

/// input_buffer_V_address0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp1_it34 or ap_reg_ppiten_pp0_it0 or tmp_45_fu_320_p1 or tmp_fu_190_p1 or tmp_42_fu_359_p1)
begin
    if ((ap_ST_st1_fsm_0 == ap_CS_fsm)) begin
        input_buffer_V_address0 = tmp_fu_190_p1;
    end else if (((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it34))) begin
        input_buffer_V_address0 = tmp_42_fu_359_p1;
    end else if (((ap_ST_pp0_stg0_fsm_3 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        input_buffer_V_address0 = tmp_45_fu_320_p1;
    end else begin
        input_buffer_V_address0 = tmp_fu_190_p1;
    end
end

/// input_buffer_V_ce0 assign process. ///
always @ (ap_start or ap_CS_fsm or ap_reg_ppiten_pp1_it34 or exitcond8_fu_308_p2 or ap_reg_ppiten_pp0_it0 or ap_reg_ppstg_exitcond_reg_431_pp1_it33)
begin
    if ((((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0)) | ((ap_ST_pp0_stg0_fsm_3 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_lv1_0 == exitcond8_fu_308_p2)) | ((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it34) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_431_pp1_it33)))) begin
        input_buffer_V_ce0 = ap_const_logic_1;
    end else begin
        input_buffer_V_ce0 = ap_const_logic_0;
    end
end

/// input_buffer_V_we0 assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
        input_buffer_V_we0 = ap_const_logic_1;
    end else begin
        input_buffer_V_we0 = ap_const_logic_0;
    end
end

/// input_buffer_pointer_o_ap_vld assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st112_fsm_75 == ap_CS_fsm)) begin
        input_buffer_pointer_o_ap_vld = ap_const_logic_1;
    end else begin
        input_buffer_pointer_o_ap_vld = ap_const_logic_0;
    end
end

/// input_counter_phi_fu_164_p4 assign process. ///
always @ (ap_CS_fsm or input_counter_reg_160 or ap_reg_ppiten_pp1_it1 or exitcond_reg_431 or input_counter_2_reg_435)
begin
    if (((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_const_lv1_0 == exitcond_reg_431))) begin
        input_counter_phi_fu_164_p4 = input_counter_2_reg_435;
    end else begin
        input_counter_phi_fu_164_p4 = input_counter_reg_160;
    end
end
always @ (ap_start or ap_CS_fsm or ap_reg_ppiten_pp1_it0 or ap_reg_ppiten_pp1_it1 or ap_reg_ppiten_pp1_it34 or ap_reg_ppiten_pp1_it35 or tmp_32_fu_201_p2 or tmp_36_reg_404 or tmp_34_reg_408 or exitcond8_fu_308_p2 or ap_reg_ppiten_pp0_it0 or exitcond_fu_325_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        ap_ST_st2_fsm_1 : 
            if (~(tmp_32_fu_201_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st7_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        ap_ST_st3_fsm_2 : 
            if ((tmp_36_reg_404 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st78_fsm_41;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_3;
            end
        ap_ST_pp0_stg0_fsm_3 : 
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond8_fu_308_p2))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_4;
            end
        ap_ST_st6_fsm_4 : 
            ap_NS_fsm = ap_ST_st78_fsm_41;
        ap_ST_st7_fsm_5 : 
            if ((ap_const_lv1_0 == tmp_34_reg_408)) begin
                ap_NS_fsm = ap_ST_st78_fsm_41;
            end else begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_6;
            end
        ap_ST_pp1_stg0_fsm_6 : 
            if ((~((ap_ST_pp1_stg0_fsm_6 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it35) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it34)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_const_lv1_0 == exitcond_fu_325_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_6;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_const_lv1_0 == exitcond_fu_325_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it1))) begin
                ap_NS_fsm = ap_ST_st44_fsm_7;
            end else begin
                ap_NS_fsm = ap_ST_st44_fsm_7;
            end
        ap_ST_st44_fsm_7 : 
            ap_NS_fsm = ap_ST_st45_fsm_8;
        ap_ST_st45_fsm_8 : 
            ap_NS_fsm = ap_ST_st46_fsm_9;
        ap_ST_st46_fsm_9 : 
            ap_NS_fsm = ap_ST_st47_fsm_10;
        ap_ST_st47_fsm_10 : 
            ap_NS_fsm = ap_ST_st48_fsm_11;
        ap_ST_st48_fsm_11 : 
            ap_NS_fsm = ap_ST_st49_fsm_12;
        ap_ST_st49_fsm_12 : 
            ap_NS_fsm = ap_ST_st50_fsm_13;
        ap_ST_st50_fsm_13 : 
            ap_NS_fsm = ap_ST_st51_fsm_14;
        ap_ST_st51_fsm_14 : 
            ap_NS_fsm = ap_ST_st52_fsm_15;
        ap_ST_st52_fsm_15 : 
            ap_NS_fsm = ap_ST_st53_fsm_16;
        ap_ST_st53_fsm_16 : 
            ap_NS_fsm = ap_ST_st54_fsm_17;
        ap_ST_st54_fsm_17 : 
            ap_NS_fsm = ap_ST_st55_fsm_18;
        ap_ST_st55_fsm_18 : 
            ap_NS_fsm = ap_ST_st56_fsm_19;
        ap_ST_st56_fsm_19 : 
            ap_NS_fsm = ap_ST_st57_fsm_20;
        ap_ST_st57_fsm_20 : 
            ap_NS_fsm = ap_ST_st58_fsm_21;
        ap_ST_st58_fsm_21 : 
            ap_NS_fsm = ap_ST_st59_fsm_22;
        ap_ST_st59_fsm_22 : 
            ap_NS_fsm = ap_ST_st60_fsm_23;
        ap_ST_st60_fsm_23 : 
            ap_NS_fsm = ap_ST_st61_fsm_24;
        ap_ST_st61_fsm_24 : 
            ap_NS_fsm = ap_ST_st62_fsm_25;
        ap_ST_st62_fsm_25 : 
            ap_NS_fsm = ap_ST_st63_fsm_26;
        ap_ST_st63_fsm_26 : 
            ap_NS_fsm = ap_ST_st64_fsm_27;
        ap_ST_st64_fsm_27 : 
            ap_NS_fsm = ap_ST_st65_fsm_28;
        ap_ST_st65_fsm_28 : 
            ap_NS_fsm = ap_ST_st66_fsm_29;
        ap_ST_st66_fsm_29 : 
            ap_NS_fsm = ap_ST_st67_fsm_30;
        ap_ST_st67_fsm_30 : 
            ap_NS_fsm = ap_ST_st68_fsm_31;
        ap_ST_st68_fsm_31 : 
            ap_NS_fsm = ap_ST_st69_fsm_32;
        ap_ST_st69_fsm_32 : 
            ap_NS_fsm = ap_ST_st70_fsm_33;
        ap_ST_st70_fsm_33 : 
            ap_NS_fsm = ap_ST_st71_fsm_34;
        ap_ST_st71_fsm_34 : 
            ap_NS_fsm = ap_ST_st72_fsm_35;
        ap_ST_st72_fsm_35 : 
            ap_NS_fsm = ap_ST_st73_fsm_36;
        ap_ST_st73_fsm_36 : 
            ap_NS_fsm = ap_ST_st74_fsm_37;
        ap_ST_st74_fsm_37 : 
            ap_NS_fsm = ap_ST_st75_fsm_38;
        ap_ST_st75_fsm_38 : 
            ap_NS_fsm = ap_ST_st76_fsm_39;
        ap_ST_st76_fsm_39 : 
            ap_NS_fsm = ap_ST_st77_fsm_40;
        ap_ST_st77_fsm_40 : 
            ap_NS_fsm = ap_ST_st78_fsm_41;
        ap_ST_st78_fsm_41 : 
            ap_NS_fsm = ap_ST_st79_fsm_42;
        ap_ST_st79_fsm_42 : 
            ap_NS_fsm = ap_ST_st80_fsm_43;
        ap_ST_st80_fsm_43 : 
            ap_NS_fsm = ap_ST_st81_fsm_44;
        ap_ST_st81_fsm_44 : 
            ap_NS_fsm = ap_ST_st82_fsm_45;
        ap_ST_st82_fsm_45 : 
            ap_NS_fsm = ap_ST_st83_fsm_46;
        ap_ST_st83_fsm_46 : 
            ap_NS_fsm = ap_ST_st84_fsm_47;
        ap_ST_st84_fsm_47 : 
            ap_NS_fsm = ap_ST_st85_fsm_48;
        ap_ST_st85_fsm_48 : 
            ap_NS_fsm = ap_ST_st86_fsm_49;
        ap_ST_st86_fsm_49 : 
            ap_NS_fsm = ap_ST_st87_fsm_50;
        ap_ST_st87_fsm_50 : 
            ap_NS_fsm = ap_ST_st88_fsm_51;
        ap_ST_st88_fsm_51 : 
            ap_NS_fsm = ap_ST_st89_fsm_52;
        ap_ST_st89_fsm_52 : 
            ap_NS_fsm = ap_ST_st90_fsm_53;
        ap_ST_st90_fsm_53 : 
            ap_NS_fsm = ap_ST_st91_fsm_54;
        ap_ST_st91_fsm_54 : 
            ap_NS_fsm = ap_ST_st92_fsm_55;
        ap_ST_st92_fsm_55 : 
            ap_NS_fsm = ap_ST_st93_fsm_56;
        ap_ST_st93_fsm_56 : 
            ap_NS_fsm = ap_ST_st94_fsm_57;
        ap_ST_st94_fsm_57 : 
            ap_NS_fsm = ap_ST_st95_fsm_58;
        ap_ST_st95_fsm_58 : 
            ap_NS_fsm = ap_ST_st96_fsm_59;
        ap_ST_st96_fsm_59 : 
            ap_NS_fsm = ap_ST_st97_fsm_60;
        ap_ST_st97_fsm_60 : 
            ap_NS_fsm = ap_ST_st98_fsm_61;
        ap_ST_st98_fsm_61 : 
            ap_NS_fsm = ap_ST_st99_fsm_62;
        ap_ST_st99_fsm_62 : 
            ap_NS_fsm = ap_ST_st100_fsm_63;
        ap_ST_st100_fsm_63 : 
            ap_NS_fsm = ap_ST_st101_fsm_64;
        ap_ST_st101_fsm_64 : 
            ap_NS_fsm = ap_ST_st102_fsm_65;
        ap_ST_st102_fsm_65 : 
            ap_NS_fsm = ap_ST_st103_fsm_66;
        ap_ST_st103_fsm_66 : 
            ap_NS_fsm = ap_ST_st104_fsm_67;
        ap_ST_st104_fsm_67 : 
            ap_NS_fsm = ap_ST_st105_fsm_68;
        ap_ST_st105_fsm_68 : 
            ap_NS_fsm = ap_ST_st106_fsm_69;
        ap_ST_st106_fsm_69 : 
            ap_NS_fsm = ap_ST_st107_fsm_70;
        ap_ST_st107_fsm_70 : 
            ap_NS_fsm = ap_ST_st108_fsm_71;
        ap_ST_st108_fsm_71 : 
            ap_NS_fsm = ap_ST_st109_fsm_72;
        ap_ST_st109_fsm_72 : 
            ap_NS_fsm = ap_ST_st110_fsm_73;
        ap_ST_st110_fsm_73 : 
            ap_NS_fsm = ap_ST_st111_fsm_74;
        ap_ST_st111_fsm_74 : 
            ap_NS_fsm = ap_ST_st112_fsm_75;
        ap_ST_st112_fsm_75 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
        default : 
            ap_NS_fsm = 'bx;
    endcase
end
assign exitcond8_fu_308_p2 = (input_counter_1_reg_149 == ap_const_lv11_400? 1'b1: 1'b0);
assign exitcond_fu_325_p2 = (input_counter_phi_fu_164_p4 == ap_const_lv11_400? 1'b1: 1'b0);
assign grp_fu_173_p2 = (ap_const_lv32_0 - input_buffer_pointer_load_reg_388);
assign grp_fu_178_p2 = (base_input + ap_const_lv32_1);
assign grp_fu_353_p0 = (tmp_124_fu_341_p2 + input_counter_cast_fu_337_p1);
assign grp_fu_353_p1 = ap_const_lv32_500;
assign grp_fu_369_ce = ap_const_logic_1;
assign grp_fu_369_p0 = (base_input + ap_const_lv32_1);
assign grp_fu_369_p1 = ap_const_lv32_5;
assign grp_fu_381_ce = ap_const_logic_1;
assign grp_fu_381_p0 = (input_buffer_pointer_load_reg_388 + ap_const_lv32_1);
assign grp_fu_381_p1 = ap_const_lv32_500;
assign input_array_V_d0 = input_buffer_V_q0;
assign input_buffer_V_d0 = $signed(input_V);
assign input_buffer_pointer_o = grp_fu_381_p2;
assign input_counter_2_fu_331_p2 = (input_counter_phi_fu_164_p4 + ap_const_lv11_1);
assign input_counter_3_fu_314_p2 = (input_counter_1_reg_149 + ap_const_lv11_1);
assign input_counter_cast_fu_337_p1 = $unsigned(input_counter_phi_fu_164_p4);
assign p_and_f4_fu_217_p3 = {{ap_const_lv22_0}, {tmp_121_fu_214_p1}};
assign p_and_f_fu_264_p3 = {{ap_const_lv24_0}, {tmp_118_fu_261_p1}};
assign p_and_t6_fu_229_p3 = {{ap_const_lv22_0}, {tmp_122_fu_225_p1}};
assign p_and_t_fu_276_p3 = {{ap_const_lv24_0}, {tmp_119_fu_272_p1}};
assign p_neg_t7_fu_237_p2 = (ap_const_lv32_0 - p_and_t6_fu_229_p3);
assign p_neg_t_fu_284_p2 = (ap_const_lv32_0 - p_and_t_fu_276_p3);
assign tmp_117_fu_207_p3 = input_buffer_pointer_load_reg_388[ap_const_lv32_1F];
assign tmp_118_fu_261_p1 = input_buffer_pointer_load_reg_388[7:0];
assign tmp_119_fu_272_p1 = grp_fu_173_p2[7:0];
assign tmp_120_fu_298_p1 = tmp_33_fu_290_p3[8:0];
assign tmp_121_fu_214_p1 = input_buffer_pointer_load_reg_388[9:0];
assign tmp_122_fu_225_p1 = grp_fu_173_p2[9:0];
assign tmp_123_fu_251_p1 = tmp_35_fu_243_p3[10:0];
assign tmp_124_fu_341_p2 = base_input << ap_const_lv32_8;
assign tmp_32_fu_201_p2 = (initialize_i == ap_const_lv32_1? 1'b1: 1'b0);
assign tmp_33_fu_290_p3 = ((tmp_117_fu_207_p3)? p_neg_t_fu_284_p2: p_and_f_fu_264_p3);
assign tmp_34_fu_302_p2 = (tmp_120_fu_298_p1 == ap_const_lv9_FF? 1'b1: 1'b0);
assign tmp_35_fu_243_p3 = ((tmp_117_fu_207_p3)? p_neg_t7_fu_237_p2: p_and_f4_fu_217_p3);
assign tmp_36_fu_255_p2 = (tmp_123_fu_251_p1 == ap_const_lv11_3FF? 1'b1: 1'b0);
assign tmp_42_fu_359_p1 = $signed(grp_fu_353_p2);
assign tmp_43_fu_364_p1 = $unsigned(ap_reg_ppstg_input_counter_reg_160_pp1_it34);
assign tmp_45_fu_320_p1 = $unsigned(input_counter_1_reg_149);
assign tmp_fu_190_p1 = $signed(input_buffer_pointer_i);
assign tmp_s_fu_195_p2 = (input_buffer_pointer_i == ap_const_lv32_400? 1'b1: 1'b0);
always @ (posedge ap_clk)
begin
    tmp_45_reg_421[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
end



endmodule //input_transfer

