// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.2
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module cal_mag_phase (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        magFrame_V_address0,
        magFrame_V_ce0,
        magFrame_V_we0,
        magFrame_V_d0,
        phaseFrame_V_address0,
        phaseFrame_V_ce0,
        phaseFrame_V_we0,
        phaseFrame_V_d0,
        phaseFrame_V_address1,
        phaseFrame_V_ce1,
        phaseFrame_V_we1,
        phaseFrame_V_d1,
        real_V_address0,
        real_V_ce0,
        real_V_q0,
        imag_V_address0,
        imag_V_ce0,
        imag_V_q0
);

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] magFrame_V_address0;
output   magFrame_V_ce0;
output   magFrame_V_we0;
output  [31:0] magFrame_V_d0;
output  [9:0] phaseFrame_V_address0;
output   phaseFrame_V_ce0;
output   phaseFrame_V_we0;
output  [25:0] phaseFrame_V_d0;
output  [9:0] phaseFrame_V_address1;
output   phaseFrame_V_ce1;
output   phaseFrame_V_we1;
output  [25:0] phaseFrame_V_d1;
output  [9:0] real_V_address0;
output   real_V_ce0;
input  [31:0] real_V_q0;
output  [9:0] imag_V_address0;
output   imag_V_ce0;
input  [31:0] imag_V_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg magFrame_V_ce0;
reg magFrame_V_we0;
reg phaseFrame_V_ce0;
reg phaseFrame_V_we0;
reg[25:0] phaseFrame_V_d0;
reg[9:0] phaseFrame_V_address1;
reg phaseFrame_V_ce1;
reg phaseFrame_V_we1;
reg[25:0] phaseFrame_V_d1;
reg real_V_ce0;
reg imag_V_ce0;
reg   [1:0] ap_CS_fsm = 2'b00;
reg   [10:0] i_reg_127;
wire   [0:0] exitcond1_fu_154_p2;
reg   [0:0] exitcond1_reg_244;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
reg    ap_reg_ppiten_pp0_it3 = 1'b0;
reg    ap_reg_ppiten_pp0_it4 = 1'b0;
reg    ap_reg_ppiten_pp0_it5 = 1'b0;
reg    ap_reg_ppiten_pp0_it6 = 1'b0;
reg    ap_reg_ppiten_pp0_it7 = 1'b0;
reg    ap_reg_ppiten_pp0_it8 = 1'b0;
reg    ap_reg_ppiten_pp0_it9 = 1'b0;
reg    ap_reg_ppiten_pp0_it10 = 1'b0;
reg    ap_reg_ppiten_pp0_it11 = 1'b0;
reg    ap_reg_ppiten_pp0_it12 = 1'b0;
reg    ap_reg_ppiten_pp0_it13 = 1'b0;
reg    ap_reg_ppiten_pp0_it14 = 1'b0;
reg    ap_reg_ppiten_pp0_it15 = 1'b0;
reg    ap_reg_ppiten_pp0_it16 = 1'b0;
reg    ap_reg_ppiten_pp0_it17 = 1'b0;
reg    ap_reg_ppiten_pp0_it18 = 1'b0;
reg    ap_reg_ppiten_pp0_it19 = 1'b0;
reg    ap_reg_ppiten_pp0_it20 = 1'b0;
reg    ap_reg_ppiten_pp0_it21 = 1'b0;
reg    ap_reg_ppiten_pp0_it22 = 1'b0;
reg    ap_reg_ppiten_pp0_it23 = 1'b0;
reg    ap_reg_ppiten_pp0_it24 = 1'b0;
reg    ap_reg_ppiten_pp0_it25 = 1'b0;
reg    ap_reg_ppiten_pp0_it26 = 1'b0;
reg    ap_reg_ppiten_pp0_it27 = 1'b0;
reg    ap_reg_ppiten_pp0_it28 = 1'b0;
reg    ap_reg_ppiten_pp0_it29 = 1'b0;
reg    ap_reg_ppiten_pp0_it30 = 1'b0;
reg    ap_reg_ppiten_pp0_it31 = 1'b0;
reg    ap_reg_ppiten_pp0_it32 = 1'b0;
reg    ap_reg_ppiten_pp0_it33 = 1'b0;
reg    ap_reg_ppiten_pp0_it34 = 1'b0;
reg    ap_reg_ppiten_pp0_it35 = 1'b0;
reg    ap_reg_ppiten_pp0_it36 = 1'b0;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_244_pp0_it1;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_244_pp0_it2;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_244_pp0_it3;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_244_pp0_it4;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_244_pp0_it5;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_244_pp0_it6;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_244_pp0_it7;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_244_pp0_it8;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_244_pp0_it9;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_244_pp0_it10;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_244_pp0_it11;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_244_pp0_it12;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_244_pp0_it13;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_244_pp0_it14;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_244_pp0_it15;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_244_pp0_it16;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_244_pp0_it17;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_244_pp0_it18;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_244_pp0_it19;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_244_pp0_it20;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_244_pp0_it21;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_244_pp0_it22;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_244_pp0_it23;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_244_pp0_it24;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_244_pp0_it25;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_244_pp0_it26;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_244_pp0_it27;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_244_pp0_it28;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_244_pp0_it29;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_244_pp0_it30;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_244_pp0_it31;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_244_pp0_it32;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_244_pp0_it33;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_244_pp0_it34;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_244_pp0_it35;
wire   [10:0] i_2_fu_160_p2;
wire   [63:0] tmp_fu_166_p1;
reg   [63:0] tmp_reg_253;
reg   [63:0] ap_reg_ppstg_tmp_reg_253_pp0_it1;
reg   [63:0] ap_reg_ppstg_tmp_reg_253_pp0_it2;
reg   [63:0] ap_reg_ppstg_tmp_reg_253_pp0_it3;
reg   [63:0] ap_reg_ppstg_tmp_reg_253_pp0_it4;
reg   [63:0] ap_reg_ppstg_tmp_reg_253_pp0_it5;
reg   [63:0] ap_reg_ppstg_tmp_reg_253_pp0_it6;
reg   [63:0] ap_reg_ppstg_tmp_reg_253_pp0_it7;
reg   [63:0] ap_reg_ppstg_tmp_reg_253_pp0_it8;
reg   [63:0] ap_reg_ppstg_tmp_reg_253_pp0_it9;
reg   [63:0] ap_reg_ppstg_tmp_reg_253_pp0_it10;
reg   [63:0] ap_reg_ppstg_tmp_reg_253_pp0_it11;
reg   [63:0] ap_reg_ppstg_tmp_reg_253_pp0_it12;
reg   [63:0] ap_reg_ppstg_tmp_reg_253_pp0_it13;
reg   [63:0] ap_reg_ppstg_tmp_reg_253_pp0_it14;
reg   [63:0] ap_reg_ppstg_tmp_reg_253_pp0_it15;
reg   [63:0] ap_reg_ppstg_tmp_reg_253_pp0_it16;
reg   [63:0] ap_reg_ppstg_tmp_reg_253_pp0_it17;
reg   [63:0] ap_reg_ppstg_tmp_reg_253_pp0_it18;
reg   [63:0] ap_reg_ppstg_tmp_reg_253_pp0_it19;
reg   [63:0] ap_reg_ppstg_tmp_reg_253_pp0_it20;
reg   [63:0] ap_reg_ppstg_tmp_reg_253_pp0_it21;
reg   [63:0] ap_reg_ppstg_tmp_reg_253_pp0_it22;
reg   [63:0] ap_reg_ppstg_tmp_reg_253_pp0_it23;
reg   [63:0] ap_reg_ppstg_tmp_reg_253_pp0_it24;
reg   [63:0] ap_reg_ppstg_tmp_reg_253_pp0_it25;
reg   [63:0] ap_reg_ppstg_tmp_reg_253_pp0_it26;
reg   [63:0] ap_reg_ppstg_tmp_reg_253_pp0_it27;
reg   [63:0] ap_reg_ppstg_tmp_reg_253_pp0_it28;
reg   [63:0] ap_reg_ppstg_tmp_reg_253_pp0_it29;
reg   [63:0] ap_reg_ppstg_tmp_reg_253_pp0_it30;
reg   [63:0] ap_reg_ppstg_tmp_reg_253_pp0_it31;
reg   [63:0] ap_reg_ppstg_tmp_reg_253_pp0_it32;
reg   [63:0] ap_reg_ppstg_tmp_reg_253_pp0_it33;
reg   [63:0] ap_reg_ppstg_tmp_reg_253_pp0_it34;
reg   [63:0] ap_reg_ppstg_tmp_reg_253_pp0_it35;
reg   [31:0] real_V_load_reg_272;
reg   [31:0] imag_V_load_reg_278;
wire   [0:0] tmp_s_fu_172_p2;
reg   [0:0] tmp_s_reg_284;
reg   [0:0] ap_reg_ppstg_tmp_s_reg_284_pp0_it2;
reg   [0:0] ap_reg_ppstg_tmp_s_reg_284_pp0_it3;
reg   [0:0] ap_reg_ppstg_tmp_s_reg_284_pp0_it4;
reg   [0:0] ap_reg_ppstg_tmp_s_reg_284_pp0_it5;
reg   [0:0] ap_reg_ppstg_tmp_s_reg_284_pp0_it6;
reg   [0:0] ap_reg_ppstg_tmp_s_reg_284_pp0_it7;
reg   [0:0] ap_reg_ppstg_tmp_s_reg_284_pp0_it8;
reg   [0:0] ap_reg_ppstg_tmp_s_reg_284_pp0_it9;
reg   [0:0] ap_reg_ppstg_tmp_s_reg_284_pp0_it10;
reg   [0:0] ap_reg_ppstg_tmp_s_reg_284_pp0_it11;
reg   [0:0] ap_reg_ppstg_tmp_s_reg_284_pp0_it12;
reg   [0:0] ap_reg_ppstg_tmp_s_reg_284_pp0_it13;
wire   [0:0] tmp_129_fu_178_p3;
reg   [0:0] tmp_129_reg_288;
reg   [0:0] ap_reg_ppstg_tmp_129_reg_288_pp0_it2;
reg   [0:0] ap_reg_ppstg_tmp_129_reg_288_pp0_it3;
reg   [0:0] ap_reg_ppstg_tmp_129_reg_288_pp0_it4;
reg   [0:0] ap_reg_ppstg_tmp_129_reg_288_pp0_it5;
reg   [0:0] ap_reg_ppstg_tmp_129_reg_288_pp0_it6;
reg   [0:0] ap_reg_ppstg_tmp_129_reg_288_pp0_it7;
reg   [0:0] ap_reg_ppstg_tmp_129_reg_288_pp0_it8;
reg   [0:0] ap_reg_ppstg_tmp_129_reg_288_pp0_it9;
reg   [0:0] ap_reg_ppstg_tmp_129_reg_288_pp0_it10;
reg   [0:0] ap_reg_ppstg_tmp_129_reg_288_pp0_it11;
reg   [0:0] ap_reg_ppstg_tmp_129_reg_288_pp0_it12;
reg   [0:0] ap_reg_ppstg_tmp_129_reg_288_pp0_it13;
reg   [0:0] tmp_130_reg_292;
reg   [0:0] ap_reg_ppstg_tmp_130_reg_292_pp0_it2;
reg   [0:0] ap_reg_ppstg_tmp_130_reg_292_pp0_it3;
reg   [0:0] ap_reg_ppstg_tmp_130_reg_292_pp0_it4;
reg   [0:0] ap_reg_ppstg_tmp_130_reg_292_pp0_it5;
reg   [0:0] ap_reg_ppstg_tmp_130_reg_292_pp0_it6;
reg   [0:0] ap_reg_ppstg_tmp_130_reg_292_pp0_it7;
reg   [0:0] ap_reg_ppstg_tmp_130_reg_292_pp0_it8;
reg   [0:0] ap_reg_ppstg_tmp_130_reg_292_pp0_it9;
reg   [0:0] ap_reg_ppstg_tmp_130_reg_292_pp0_it10;
reg   [0:0] ap_reg_ppstg_tmp_130_reg_292_pp0_it11;
reg   [0:0] ap_reg_ppstg_tmp_130_reg_292_pp0_it12;
reg   [0:0] ap_reg_ppstg_tmp_130_reg_292_pp0_it13;
wire   [0:0] or_cond_fu_206_p2;
wire   [21:0] grp_cordic_atan_fu_148_ap_return;
reg   [21:0] arctan_V_reg_300;
wire   [31:0] grp_cordic_sqrt_fu_139_x_V;
wire   [31:0] grp_cordic_sqrt_fu_139_y_V;
wire   [31:0] grp_cordic_sqrt_fu_139_ap_return;
reg    grp_cordic_sqrt_fu_139_ap_ce;
wire   [31:0] grp_cordic_atan_fu_148_x_V;
wire   [31:0] grp_cordic_atan_fu_148_y_V;
reg    grp_cordic_atan_fu_148_ap_ce;
wire   [9:0] phaseFrame_V_addr_2_gep_fu_99_p3;
wire   [9:0] phaseFrame_V_addr_gep_fu_107_p3;
wire   [25:0] r_V_cast_cast_fu_221_p1;
wire   [25:0] r_V_cast_cast_310_fu_235_p1;
wire   [25:0] arctan_V_2_cast8_fu_240_p1;
wire   [0:0] not2_fu_194_p2;
wire   [0:0] not3_fu_200_p2;
wire   [22:0] r_V_fu_215_p0;
wire   [22:0] r_V_fu_215_p2;
wire   [23:0] r_V_s_fu_229_p0;
wire   [23:0] r_V_s_fu_229_p2;
reg   [1:0] ap_NS_fsm;
reg    ap_sig_bdd_595;
reg    ap_sig_bdd_597;
reg    ap_sig_bdd_545;
reg    ap_sig_bdd_339;
parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 2'b00;
parameter    ap_ST_pp0_stg0_fsm_1 = 2'b1;
parameter    ap_ST_st39_fsm_2 = 2'b10;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv26_3E6DE05 = 26'b11111001101101111000000101;
parameter    ap_const_lv26_1921FB = 26'b110010010000111111011;
parameter    ap_const_lv11_400 = 11'b10000000000;
parameter    ap_const_lv11_1 = 11'b1;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv23_3243F6 = 23'b1100100100001111110110;
parameter    ap_const_lv24_CDBC0A = 24'b110011011011110000001010;
parameter    ap_true = 1'b1;


cordic_sqrt grp_cordic_sqrt_fu_139(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .x_V( grp_cordic_sqrt_fu_139_x_V ),
    .y_V( grp_cordic_sqrt_fu_139_y_V ),
    .ap_return( grp_cordic_sqrt_fu_139_ap_return ),
    .ap_ce( grp_cordic_sqrt_fu_139_ap_ce )
);

cordic_atan grp_cordic_atan_fu_148(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .x_V( grp_cordic_atan_fu_148_x_V ),
    .y_V( grp_cordic_atan_fu_148_y_V ),
    .ap_return( grp_cordic_atan_fu_148_ap_return ),
    .ap_ce( grp_cordic_atan_fu_148_ap_ce )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & ~(exitcond1_fu_154_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (exitcond1_fu_154_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0)) | ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & ~(exitcond1_fu_154_p2 == ap_const_lv1_0)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it10 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it10
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it10 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it10 <= ap_reg_ppiten_pp0_it9;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it10 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it11 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it11
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it11 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it11 <= ap_reg_ppiten_pp0_it10;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it11 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it12 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it12
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it12 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it12 <= ap_reg_ppiten_pp0_it11;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it12 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it13 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it13
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it13 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it13 <= ap_reg_ppiten_pp0_it12;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it13 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it14 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it14
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it14 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it14 <= ap_reg_ppiten_pp0_it13;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it14 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it15 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it15
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it15 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it15 <= ap_reg_ppiten_pp0_it14;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it15 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it16 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it16
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it16 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it16 <= ap_reg_ppiten_pp0_it15;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it16 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it17 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it17
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it17 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it17 <= ap_reg_ppiten_pp0_it16;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it17 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it18 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it18
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it18 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it18 <= ap_reg_ppiten_pp0_it17;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it18 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it19 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it19
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it19 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it19 <= ap_reg_ppiten_pp0_it18;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it19 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it20 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it20
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it20 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it20 <= ap_reg_ppiten_pp0_it19;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it20 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it21 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it21
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it21 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it21 <= ap_reg_ppiten_pp0_it20;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it21 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it22 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it22
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it22 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it22 <= ap_reg_ppiten_pp0_it21;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it22 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it23 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it23
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it23 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it23 <= ap_reg_ppiten_pp0_it22;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it23 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it24 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it24
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it24 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it24 <= ap_reg_ppiten_pp0_it23;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it24 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it25 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it25
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it25 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it25 <= ap_reg_ppiten_pp0_it24;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it25 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it26 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it26
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it26 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it26 <= ap_reg_ppiten_pp0_it25;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it26 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it27 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it27
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it27 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it27 <= ap_reg_ppiten_pp0_it26;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it27 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it28 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it28
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it28 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it28 <= ap_reg_ppiten_pp0_it27;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it28 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it29 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it29
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it29 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it29 <= ap_reg_ppiten_pp0_it28;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it29 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it3 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it3
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it30 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it30
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it30 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it30 <= ap_reg_ppiten_pp0_it29;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it30 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it31 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it31
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it31 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it31 <= ap_reg_ppiten_pp0_it30;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it31 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it32 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it32
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it32 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it32 <= ap_reg_ppiten_pp0_it31;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it32 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it33 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it33
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it33 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it33 <= ap_reg_ppiten_pp0_it32;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it33 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it34 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it34
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it34 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it34 <= ap_reg_ppiten_pp0_it33;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it34 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it35 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it35
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it35 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it35 <= ap_reg_ppiten_pp0_it34;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it35 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it36 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it36
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it36 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it36 <= ap_reg_ppiten_pp0_it35;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it36 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it4 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it4
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it5 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it5
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it6 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it6
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it7 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it7
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it8 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it8
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it9 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it9
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it9 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it9 <= ap_reg_ppiten_pp0_it8;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it9 <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_fu_154_p2 == ap_const_lv1_0))) begin
        i_reg_127 <= i_2_fu_160_p2;
    end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
        i_reg_127 <= ap_const_lv11_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
        ap_reg_ppstg_exitcond1_reg_244_pp0_it1 <= exitcond1_reg_244;
        ap_reg_ppstg_exitcond1_reg_244_pp0_it10 <= ap_reg_ppstg_exitcond1_reg_244_pp0_it9;
        ap_reg_ppstg_exitcond1_reg_244_pp0_it11 <= ap_reg_ppstg_exitcond1_reg_244_pp0_it10;
        ap_reg_ppstg_exitcond1_reg_244_pp0_it12 <= ap_reg_ppstg_exitcond1_reg_244_pp0_it11;
        ap_reg_ppstg_exitcond1_reg_244_pp0_it13 <= ap_reg_ppstg_exitcond1_reg_244_pp0_it12;
        ap_reg_ppstg_exitcond1_reg_244_pp0_it14 <= ap_reg_ppstg_exitcond1_reg_244_pp0_it13;
        ap_reg_ppstg_exitcond1_reg_244_pp0_it15 <= ap_reg_ppstg_exitcond1_reg_244_pp0_it14;
        ap_reg_ppstg_exitcond1_reg_244_pp0_it16 <= ap_reg_ppstg_exitcond1_reg_244_pp0_it15;
        ap_reg_ppstg_exitcond1_reg_244_pp0_it17 <= ap_reg_ppstg_exitcond1_reg_244_pp0_it16;
        ap_reg_ppstg_exitcond1_reg_244_pp0_it18 <= ap_reg_ppstg_exitcond1_reg_244_pp0_it17;
        ap_reg_ppstg_exitcond1_reg_244_pp0_it19 <= ap_reg_ppstg_exitcond1_reg_244_pp0_it18;
        ap_reg_ppstg_exitcond1_reg_244_pp0_it2 <= ap_reg_ppstg_exitcond1_reg_244_pp0_it1;
        ap_reg_ppstg_exitcond1_reg_244_pp0_it20 <= ap_reg_ppstg_exitcond1_reg_244_pp0_it19;
        ap_reg_ppstg_exitcond1_reg_244_pp0_it21 <= ap_reg_ppstg_exitcond1_reg_244_pp0_it20;
        ap_reg_ppstg_exitcond1_reg_244_pp0_it22 <= ap_reg_ppstg_exitcond1_reg_244_pp0_it21;
        ap_reg_ppstg_exitcond1_reg_244_pp0_it23 <= ap_reg_ppstg_exitcond1_reg_244_pp0_it22;
        ap_reg_ppstg_exitcond1_reg_244_pp0_it24 <= ap_reg_ppstg_exitcond1_reg_244_pp0_it23;
        ap_reg_ppstg_exitcond1_reg_244_pp0_it25 <= ap_reg_ppstg_exitcond1_reg_244_pp0_it24;
        ap_reg_ppstg_exitcond1_reg_244_pp0_it26 <= ap_reg_ppstg_exitcond1_reg_244_pp0_it25;
        ap_reg_ppstg_exitcond1_reg_244_pp0_it27 <= ap_reg_ppstg_exitcond1_reg_244_pp0_it26;
        ap_reg_ppstg_exitcond1_reg_244_pp0_it28 <= ap_reg_ppstg_exitcond1_reg_244_pp0_it27;
        ap_reg_ppstg_exitcond1_reg_244_pp0_it29 <= ap_reg_ppstg_exitcond1_reg_244_pp0_it28;
        ap_reg_ppstg_exitcond1_reg_244_pp0_it3 <= ap_reg_ppstg_exitcond1_reg_244_pp0_it2;
        ap_reg_ppstg_exitcond1_reg_244_pp0_it30 <= ap_reg_ppstg_exitcond1_reg_244_pp0_it29;
        ap_reg_ppstg_exitcond1_reg_244_pp0_it31 <= ap_reg_ppstg_exitcond1_reg_244_pp0_it30;
        ap_reg_ppstg_exitcond1_reg_244_pp0_it32 <= ap_reg_ppstg_exitcond1_reg_244_pp0_it31;
        ap_reg_ppstg_exitcond1_reg_244_pp0_it33 <= ap_reg_ppstg_exitcond1_reg_244_pp0_it32;
        ap_reg_ppstg_exitcond1_reg_244_pp0_it34 <= ap_reg_ppstg_exitcond1_reg_244_pp0_it33;
        ap_reg_ppstg_exitcond1_reg_244_pp0_it35 <= ap_reg_ppstg_exitcond1_reg_244_pp0_it34;
        ap_reg_ppstg_exitcond1_reg_244_pp0_it4 <= ap_reg_ppstg_exitcond1_reg_244_pp0_it3;
        ap_reg_ppstg_exitcond1_reg_244_pp0_it5 <= ap_reg_ppstg_exitcond1_reg_244_pp0_it4;
        ap_reg_ppstg_exitcond1_reg_244_pp0_it6 <= ap_reg_ppstg_exitcond1_reg_244_pp0_it5;
        ap_reg_ppstg_exitcond1_reg_244_pp0_it7 <= ap_reg_ppstg_exitcond1_reg_244_pp0_it6;
        ap_reg_ppstg_exitcond1_reg_244_pp0_it8 <= ap_reg_ppstg_exitcond1_reg_244_pp0_it7;
        ap_reg_ppstg_exitcond1_reg_244_pp0_it9 <= ap_reg_ppstg_exitcond1_reg_244_pp0_it8;
        ap_reg_ppstg_tmp_129_reg_288_pp0_it10 <= ap_reg_ppstg_tmp_129_reg_288_pp0_it9;
        ap_reg_ppstg_tmp_129_reg_288_pp0_it11 <= ap_reg_ppstg_tmp_129_reg_288_pp0_it10;
        ap_reg_ppstg_tmp_129_reg_288_pp0_it12 <= ap_reg_ppstg_tmp_129_reg_288_pp0_it11;
        ap_reg_ppstg_tmp_129_reg_288_pp0_it13 <= ap_reg_ppstg_tmp_129_reg_288_pp0_it12;
        ap_reg_ppstg_tmp_129_reg_288_pp0_it2 <= tmp_129_reg_288;
        ap_reg_ppstg_tmp_129_reg_288_pp0_it3 <= ap_reg_ppstg_tmp_129_reg_288_pp0_it2;
        ap_reg_ppstg_tmp_129_reg_288_pp0_it4 <= ap_reg_ppstg_tmp_129_reg_288_pp0_it3;
        ap_reg_ppstg_tmp_129_reg_288_pp0_it5 <= ap_reg_ppstg_tmp_129_reg_288_pp0_it4;
        ap_reg_ppstg_tmp_129_reg_288_pp0_it6 <= ap_reg_ppstg_tmp_129_reg_288_pp0_it5;
        ap_reg_ppstg_tmp_129_reg_288_pp0_it7 <= ap_reg_ppstg_tmp_129_reg_288_pp0_it6;
        ap_reg_ppstg_tmp_129_reg_288_pp0_it8 <= ap_reg_ppstg_tmp_129_reg_288_pp0_it7;
        ap_reg_ppstg_tmp_129_reg_288_pp0_it9 <= ap_reg_ppstg_tmp_129_reg_288_pp0_it8;
        ap_reg_ppstg_tmp_130_reg_292_pp0_it10 <= ap_reg_ppstg_tmp_130_reg_292_pp0_it9;
        ap_reg_ppstg_tmp_130_reg_292_pp0_it11 <= ap_reg_ppstg_tmp_130_reg_292_pp0_it10;
        ap_reg_ppstg_tmp_130_reg_292_pp0_it12 <= ap_reg_ppstg_tmp_130_reg_292_pp0_it11;
        ap_reg_ppstg_tmp_130_reg_292_pp0_it13 <= ap_reg_ppstg_tmp_130_reg_292_pp0_it12;
        ap_reg_ppstg_tmp_130_reg_292_pp0_it2 <= tmp_130_reg_292;
        ap_reg_ppstg_tmp_130_reg_292_pp0_it3 <= ap_reg_ppstg_tmp_130_reg_292_pp0_it2;
        ap_reg_ppstg_tmp_130_reg_292_pp0_it4 <= ap_reg_ppstg_tmp_130_reg_292_pp0_it3;
        ap_reg_ppstg_tmp_130_reg_292_pp0_it5 <= ap_reg_ppstg_tmp_130_reg_292_pp0_it4;
        ap_reg_ppstg_tmp_130_reg_292_pp0_it6 <= ap_reg_ppstg_tmp_130_reg_292_pp0_it5;
        ap_reg_ppstg_tmp_130_reg_292_pp0_it7 <= ap_reg_ppstg_tmp_130_reg_292_pp0_it6;
        ap_reg_ppstg_tmp_130_reg_292_pp0_it8 <= ap_reg_ppstg_tmp_130_reg_292_pp0_it7;
        ap_reg_ppstg_tmp_130_reg_292_pp0_it9 <= ap_reg_ppstg_tmp_130_reg_292_pp0_it8;
        ap_reg_ppstg_tmp_reg_253_pp0_it1[0] <= tmp_reg_253[0];
ap_reg_ppstg_tmp_reg_253_pp0_it1[1] <= tmp_reg_253[1];
ap_reg_ppstg_tmp_reg_253_pp0_it1[2] <= tmp_reg_253[2];
ap_reg_ppstg_tmp_reg_253_pp0_it1[3] <= tmp_reg_253[3];
ap_reg_ppstg_tmp_reg_253_pp0_it1[4] <= tmp_reg_253[4];
ap_reg_ppstg_tmp_reg_253_pp0_it1[5] <= tmp_reg_253[5];
ap_reg_ppstg_tmp_reg_253_pp0_it1[6] <= tmp_reg_253[6];
ap_reg_ppstg_tmp_reg_253_pp0_it1[7] <= tmp_reg_253[7];
ap_reg_ppstg_tmp_reg_253_pp0_it1[8] <= tmp_reg_253[8];
ap_reg_ppstg_tmp_reg_253_pp0_it1[9] <= tmp_reg_253[9];
ap_reg_ppstg_tmp_reg_253_pp0_it1[10] <= tmp_reg_253[10];
        ap_reg_ppstg_tmp_reg_253_pp0_it10[0] <= ap_reg_ppstg_tmp_reg_253_pp0_it9[0];
ap_reg_ppstg_tmp_reg_253_pp0_it10[1] <= ap_reg_ppstg_tmp_reg_253_pp0_it9[1];
ap_reg_ppstg_tmp_reg_253_pp0_it10[2] <= ap_reg_ppstg_tmp_reg_253_pp0_it9[2];
ap_reg_ppstg_tmp_reg_253_pp0_it10[3] <= ap_reg_ppstg_tmp_reg_253_pp0_it9[3];
ap_reg_ppstg_tmp_reg_253_pp0_it10[4] <= ap_reg_ppstg_tmp_reg_253_pp0_it9[4];
ap_reg_ppstg_tmp_reg_253_pp0_it10[5] <= ap_reg_ppstg_tmp_reg_253_pp0_it9[5];
ap_reg_ppstg_tmp_reg_253_pp0_it10[6] <= ap_reg_ppstg_tmp_reg_253_pp0_it9[6];
ap_reg_ppstg_tmp_reg_253_pp0_it10[7] <= ap_reg_ppstg_tmp_reg_253_pp0_it9[7];
ap_reg_ppstg_tmp_reg_253_pp0_it10[8] <= ap_reg_ppstg_tmp_reg_253_pp0_it9[8];
ap_reg_ppstg_tmp_reg_253_pp0_it10[9] <= ap_reg_ppstg_tmp_reg_253_pp0_it9[9];
ap_reg_ppstg_tmp_reg_253_pp0_it10[10] <= ap_reg_ppstg_tmp_reg_253_pp0_it9[10];
        ap_reg_ppstg_tmp_reg_253_pp0_it11[0] <= ap_reg_ppstg_tmp_reg_253_pp0_it10[0];
ap_reg_ppstg_tmp_reg_253_pp0_it11[1] <= ap_reg_ppstg_tmp_reg_253_pp0_it10[1];
ap_reg_ppstg_tmp_reg_253_pp0_it11[2] <= ap_reg_ppstg_tmp_reg_253_pp0_it10[2];
ap_reg_ppstg_tmp_reg_253_pp0_it11[3] <= ap_reg_ppstg_tmp_reg_253_pp0_it10[3];
ap_reg_ppstg_tmp_reg_253_pp0_it11[4] <= ap_reg_ppstg_tmp_reg_253_pp0_it10[4];
ap_reg_ppstg_tmp_reg_253_pp0_it11[5] <= ap_reg_ppstg_tmp_reg_253_pp0_it10[5];
ap_reg_ppstg_tmp_reg_253_pp0_it11[6] <= ap_reg_ppstg_tmp_reg_253_pp0_it10[6];
ap_reg_ppstg_tmp_reg_253_pp0_it11[7] <= ap_reg_ppstg_tmp_reg_253_pp0_it10[7];
ap_reg_ppstg_tmp_reg_253_pp0_it11[8] <= ap_reg_ppstg_tmp_reg_253_pp0_it10[8];
ap_reg_ppstg_tmp_reg_253_pp0_it11[9] <= ap_reg_ppstg_tmp_reg_253_pp0_it10[9];
ap_reg_ppstg_tmp_reg_253_pp0_it11[10] <= ap_reg_ppstg_tmp_reg_253_pp0_it10[10];
        ap_reg_ppstg_tmp_reg_253_pp0_it12[0] <= ap_reg_ppstg_tmp_reg_253_pp0_it11[0];
ap_reg_ppstg_tmp_reg_253_pp0_it12[1] <= ap_reg_ppstg_tmp_reg_253_pp0_it11[1];
ap_reg_ppstg_tmp_reg_253_pp0_it12[2] <= ap_reg_ppstg_tmp_reg_253_pp0_it11[2];
ap_reg_ppstg_tmp_reg_253_pp0_it12[3] <= ap_reg_ppstg_tmp_reg_253_pp0_it11[3];
ap_reg_ppstg_tmp_reg_253_pp0_it12[4] <= ap_reg_ppstg_tmp_reg_253_pp0_it11[4];
ap_reg_ppstg_tmp_reg_253_pp0_it12[5] <= ap_reg_ppstg_tmp_reg_253_pp0_it11[5];
ap_reg_ppstg_tmp_reg_253_pp0_it12[6] <= ap_reg_ppstg_tmp_reg_253_pp0_it11[6];
ap_reg_ppstg_tmp_reg_253_pp0_it12[7] <= ap_reg_ppstg_tmp_reg_253_pp0_it11[7];
ap_reg_ppstg_tmp_reg_253_pp0_it12[8] <= ap_reg_ppstg_tmp_reg_253_pp0_it11[8];
ap_reg_ppstg_tmp_reg_253_pp0_it12[9] <= ap_reg_ppstg_tmp_reg_253_pp0_it11[9];
ap_reg_ppstg_tmp_reg_253_pp0_it12[10] <= ap_reg_ppstg_tmp_reg_253_pp0_it11[10];
        ap_reg_ppstg_tmp_reg_253_pp0_it13[0] <= ap_reg_ppstg_tmp_reg_253_pp0_it12[0];
ap_reg_ppstg_tmp_reg_253_pp0_it13[1] <= ap_reg_ppstg_tmp_reg_253_pp0_it12[1];
ap_reg_ppstg_tmp_reg_253_pp0_it13[2] <= ap_reg_ppstg_tmp_reg_253_pp0_it12[2];
ap_reg_ppstg_tmp_reg_253_pp0_it13[3] <= ap_reg_ppstg_tmp_reg_253_pp0_it12[3];
ap_reg_ppstg_tmp_reg_253_pp0_it13[4] <= ap_reg_ppstg_tmp_reg_253_pp0_it12[4];
ap_reg_ppstg_tmp_reg_253_pp0_it13[5] <= ap_reg_ppstg_tmp_reg_253_pp0_it12[5];
ap_reg_ppstg_tmp_reg_253_pp0_it13[6] <= ap_reg_ppstg_tmp_reg_253_pp0_it12[6];
ap_reg_ppstg_tmp_reg_253_pp0_it13[7] <= ap_reg_ppstg_tmp_reg_253_pp0_it12[7];
ap_reg_ppstg_tmp_reg_253_pp0_it13[8] <= ap_reg_ppstg_tmp_reg_253_pp0_it12[8];
ap_reg_ppstg_tmp_reg_253_pp0_it13[9] <= ap_reg_ppstg_tmp_reg_253_pp0_it12[9];
ap_reg_ppstg_tmp_reg_253_pp0_it13[10] <= ap_reg_ppstg_tmp_reg_253_pp0_it12[10];
        ap_reg_ppstg_tmp_reg_253_pp0_it14[0] <= ap_reg_ppstg_tmp_reg_253_pp0_it13[0];
ap_reg_ppstg_tmp_reg_253_pp0_it14[1] <= ap_reg_ppstg_tmp_reg_253_pp0_it13[1];
ap_reg_ppstg_tmp_reg_253_pp0_it14[2] <= ap_reg_ppstg_tmp_reg_253_pp0_it13[2];
ap_reg_ppstg_tmp_reg_253_pp0_it14[3] <= ap_reg_ppstg_tmp_reg_253_pp0_it13[3];
ap_reg_ppstg_tmp_reg_253_pp0_it14[4] <= ap_reg_ppstg_tmp_reg_253_pp0_it13[4];
ap_reg_ppstg_tmp_reg_253_pp0_it14[5] <= ap_reg_ppstg_tmp_reg_253_pp0_it13[5];
ap_reg_ppstg_tmp_reg_253_pp0_it14[6] <= ap_reg_ppstg_tmp_reg_253_pp0_it13[6];
ap_reg_ppstg_tmp_reg_253_pp0_it14[7] <= ap_reg_ppstg_tmp_reg_253_pp0_it13[7];
ap_reg_ppstg_tmp_reg_253_pp0_it14[8] <= ap_reg_ppstg_tmp_reg_253_pp0_it13[8];
ap_reg_ppstg_tmp_reg_253_pp0_it14[9] <= ap_reg_ppstg_tmp_reg_253_pp0_it13[9];
ap_reg_ppstg_tmp_reg_253_pp0_it14[10] <= ap_reg_ppstg_tmp_reg_253_pp0_it13[10];
        ap_reg_ppstg_tmp_reg_253_pp0_it15[0] <= ap_reg_ppstg_tmp_reg_253_pp0_it14[0];
ap_reg_ppstg_tmp_reg_253_pp0_it15[1] <= ap_reg_ppstg_tmp_reg_253_pp0_it14[1];
ap_reg_ppstg_tmp_reg_253_pp0_it15[2] <= ap_reg_ppstg_tmp_reg_253_pp0_it14[2];
ap_reg_ppstg_tmp_reg_253_pp0_it15[3] <= ap_reg_ppstg_tmp_reg_253_pp0_it14[3];
ap_reg_ppstg_tmp_reg_253_pp0_it15[4] <= ap_reg_ppstg_tmp_reg_253_pp0_it14[4];
ap_reg_ppstg_tmp_reg_253_pp0_it15[5] <= ap_reg_ppstg_tmp_reg_253_pp0_it14[5];
ap_reg_ppstg_tmp_reg_253_pp0_it15[6] <= ap_reg_ppstg_tmp_reg_253_pp0_it14[6];
ap_reg_ppstg_tmp_reg_253_pp0_it15[7] <= ap_reg_ppstg_tmp_reg_253_pp0_it14[7];
ap_reg_ppstg_tmp_reg_253_pp0_it15[8] <= ap_reg_ppstg_tmp_reg_253_pp0_it14[8];
ap_reg_ppstg_tmp_reg_253_pp0_it15[9] <= ap_reg_ppstg_tmp_reg_253_pp0_it14[9];
ap_reg_ppstg_tmp_reg_253_pp0_it15[10] <= ap_reg_ppstg_tmp_reg_253_pp0_it14[10];
        ap_reg_ppstg_tmp_reg_253_pp0_it16[0] <= ap_reg_ppstg_tmp_reg_253_pp0_it15[0];
ap_reg_ppstg_tmp_reg_253_pp0_it16[1] <= ap_reg_ppstg_tmp_reg_253_pp0_it15[1];
ap_reg_ppstg_tmp_reg_253_pp0_it16[2] <= ap_reg_ppstg_tmp_reg_253_pp0_it15[2];
ap_reg_ppstg_tmp_reg_253_pp0_it16[3] <= ap_reg_ppstg_tmp_reg_253_pp0_it15[3];
ap_reg_ppstg_tmp_reg_253_pp0_it16[4] <= ap_reg_ppstg_tmp_reg_253_pp0_it15[4];
ap_reg_ppstg_tmp_reg_253_pp0_it16[5] <= ap_reg_ppstg_tmp_reg_253_pp0_it15[5];
ap_reg_ppstg_tmp_reg_253_pp0_it16[6] <= ap_reg_ppstg_tmp_reg_253_pp0_it15[6];
ap_reg_ppstg_tmp_reg_253_pp0_it16[7] <= ap_reg_ppstg_tmp_reg_253_pp0_it15[7];
ap_reg_ppstg_tmp_reg_253_pp0_it16[8] <= ap_reg_ppstg_tmp_reg_253_pp0_it15[8];
ap_reg_ppstg_tmp_reg_253_pp0_it16[9] <= ap_reg_ppstg_tmp_reg_253_pp0_it15[9];
ap_reg_ppstg_tmp_reg_253_pp0_it16[10] <= ap_reg_ppstg_tmp_reg_253_pp0_it15[10];
        ap_reg_ppstg_tmp_reg_253_pp0_it17[0] <= ap_reg_ppstg_tmp_reg_253_pp0_it16[0];
ap_reg_ppstg_tmp_reg_253_pp0_it17[1] <= ap_reg_ppstg_tmp_reg_253_pp0_it16[1];
ap_reg_ppstg_tmp_reg_253_pp0_it17[2] <= ap_reg_ppstg_tmp_reg_253_pp0_it16[2];
ap_reg_ppstg_tmp_reg_253_pp0_it17[3] <= ap_reg_ppstg_tmp_reg_253_pp0_it16[3];
ap_reg_ppstg_tmp_reg_253_pp0_it17[4] <= ap_reg_ppstg_tmp_reg_253_pp0_it16[4];
ap_reg_ppstg_tmp_reg_253_pp0_it17[5] <= ap_reg_ppstg_tmp_reg_253_pp0_it16[5];
ap_reg_ppstg_tmp_reg_253_pp0_it17[6] <= ap_reg_ppstg_tmp_reg_253_pp0_it16[6];
ap_reg_ppstg_tmp_reg_253_pp0_it17[7] <= ap_reg_ppstg_tmp_reg_253_pp0_it16[7];
ap_reg_ppstg_tmp_reg_253_pp0_it17[8] <= ap_reg_ppstg_tmp_reg_253_pp0_it16[8];
ap_reg_ppstg_tmp_reg_253_pp0_it17[9] <= ap_reg_ppstg_tmp_reg_253_pp0_it16[9];
ap_reg_ppstg_tmp_reg_253_pp0_it17[10] <= ap_reg_ppstg_tmp_reg_253_pp0_it16[10];
        ap_reg_ppstg_tmp_reg_253_pp0_it18[0] <= ap_reg_ppstg_tmp_reg_253_pp0_it17[0];
ap_reg_ppstg_tmp_reg_253_pp0_it18[1] <= ap_reg_ppstg_tmp_reg_253_pp0_it17[1];
ap_reg_ppstg_tmp_reg_253_pp0_it18[2] <= ap_reg_ppstg_tmp_reg_253_pp0_it17[2];
ap_reg_ppstg_tmp_reg_253_pp0_it18[3] <= ap_reg_ppstg_tmp_reg_253_pp0_it17[3];
ap_reg_ppstg_tmp_reg_253_pp0_it18[4] <= ap_reg_ppstg_tmp_reg_253_pp0_it17[4];
ap_reg_ppstg_tmp_reg_253_pp0_it18[5] <= ap_reg_ppstg_tmp_reg_253_pp0_it17[5];
ap_reg_ppstg_tmp_reg_253_pp0_it18[6] <= ap_reg_ppstg_tmp_reg_253_pp0_it17[6];
ap_reg_ppstg_tmp_reg_253_pp0_it18[7] <= ap_reg_ppstg_tmp_reg_253_pp0_it17[7];
ap_reg_ppstg_tmp_reg_253_pp0_it18[8] <= ap_reg_ppstg_tmp_reg_253_pp0_it17[8];
ap_reg_ppstg_tmp_reg_253_pp0_it18[9] <= ap_reg_ppstg_tmp_reg_253_pp0_it17[9];
ap_reg_ppstg_tmp_reg_253_pp0_it18[10] <= ap_reg_ppstg_tmp_reg_253_pp0_it17[10];
        ap_reg_ppstg_tmp_reg_253_pp0_it19[0] <= ap_reg_ppstg_tmp_reg_253_pp0_it18[0];
ap_reg_ppstg_tmp_reg_253_pp0_it19[1] <= ap_reg_ppstg_tmp_reg_253_pp0_it18[1];
ap_reg_ppstg_tmp_reg_253_pp0_it19[2] <= ap_reg_ppstg_tmp_reg_253_pp0_it18[2];
ap_reg_ppstg_tmp_reg_253_pp0_it19[3] <= ap_reg_ppstg_tmp_reg_253_pp0_it18[3];
ap_reg_ppstg_tmp_reg_253_pp0_it19[4] <= ap_reg_ppstg_tmp_reg_253_pp0_it18[4];
ap_reg_ppstg_tmp_reg_253_pp0_it19[5] <= ap_reg_ppstg_tmp_reg_253_pp0_it18[5];
ap_reg_ppstg_tmp_reg_253_pp0_it19[6] <= ap_reg_ppstg_tmp_reg_253_pp0_it18[6];
ap_reg_ppstg_tmp_reg_253_pp0_it19[7] <= ap_reg_ppstg_tmp_reg_253_pp0_it18[7];
ap_reg_ppstg_tmp_reg_253_pp0_it19[8] <= ap_reg_ppstg_tmp_reg_253_pp0_it18[8];
ap_reg_ppstg_tmp_reg_253_pp0_it19[9] <= ap_reg_ppstg_tmp_reg_253_pp0_it18[9];
ap_reg_ppstg_tmp_reg_253_pp0_it19[10] <= ap_reg_ppstg_tmp_reg_253_pp0_it18[10];
        ap_reg_ppstg_tmp_reg_253_pp0_it2[0] <= ap_reg_ppstg_tmp_reg_253_pp0_it1[0];
ap_reg_ppstg_tmp_reg_253_pp0_it2[1] <= ap_reg_ppstg_tmp_reg_253_pp0_it1[1];
ap_reg_ppstg_tmp_reg_253_pp0_it2[2] <= ap_reg_ppstg_tmp_reg_253_pp0_it1[2];
ap_reg_ppstg_tmp_reg_253_pp0_it2[3] <= ap_reg_ppstg_tmp_reg_253_pp0_it1[3];
ap_reg_ppstg_tmp_reg_253_pp0_it2[4] <= ap_reg_ppstg_tmp_reg_253_pp0_it1[4];
ap_reg_ppstg_tmp_reg_253_pp0_it2[5] <= ap_reg_ppstg_tmp_reg_253_pp0_it1[5];
ap_reg_ppstg_tmp_reg_253_pp0_it2[6] <= ap_reg_ppstg_tmp_reg_253_pp0_it1[6];
ap_reg_ppstg_tmp_reg_253_pp0_it2[7] <= ap_reg_ppstg_tmp_reg_253_pp0_it1[7];
ap_reg_ppstg_tmp_reg_253_pp0_it2[8] <= ap_reg_ppstg_tmp_reg_253_pp0_it1[8];
ap_reg_ppstg_tmp_reg_253_pp0_it2[9] <= ap_reg_ppstg_tmp_reg_253_pp0_it1[9];
ap_reg_ppstg_tmp_reg_253_pp0_it2[10] <= ap_reg_ppstg_tmp_reg_253_pp0_it1[10];
        ap_reg_ppstg_tmp_reg_253_pp0_it20[0] <= ap_reg_ppstg_tmp_reg_253_pp0_it19[0];
ap_reg_ppstg_tmp_reg_253_pp0_it20[1] <= ap_reg_ppstg_tmp_reg_253_pp0_it19[1];
ap_reg_ppstg_tmp_reg_253_pp0_it20[2] <= ap_reg_ppstg_tmp_reg_253_pp0_it19[2];
ap_reg_ppstg_tmp_reg_253_pp0_it20[3] <= ap_reg_ppstg_tmp_reg_253_pp0_it19[3];
ap_reg_ppstg_tmp_reg_253_pp0_it20[4] <= ap_reg_ppstg_tmp_reg_253_pp0_it19[4];
ap_reg_ppstg_tmp_reg_253_pp0_it20[5] <= ap_reg_ppstg_tmp_reg_253_pp0_it19[5];
ap_reg_ppstg_tmp_reg_253_pp0_it20[6] <= ap_reg_ppstg_tmp_reg_253_pp0_it19[6];
ap_reg_ppstg_tmp_reg_253_pp0_it20[7] <= ap_reg_ppstg_tmp_reg_253_pp0_it19[7];
ap_reg_ppstg_tmp_reg_253_pp0_it20[8] <= ap_reg_ppstg_tmp_reg_253_pp0_it19[8];
ap_reg_ppstg_tmp_reg_253_pp0_it20[9] <= ap_reg_ppstg_tmp_reg_253_pp0_it19[9];
ap_reg_ppstg_tmp_reg_253_pp0_it20[10] <= ap_reg_ppstg_tmp_reg_253_pp0_it19[10];
        ap_reg_ppstg_tmp_reg_253_pp0_it21[0] <= ap_reg_ppstg_tmp_reg_253_pp0_it20[0];
ap_reg_ppstg_tmp_reg_253_pp0_it21[1] <= ap_reg_ppstg_tmp_reg_253_pp0_it20[1];
ap_reg_ppstg_tmp_reg_253_pp0_it21[2] <= ap_reg_ppstg_tmp_reg_253_pp0_it20[2];
ap_reg_ppstg_tmp_reg_253_pp0_it21[3] <= ap_reg_ppstg_tmp_reg_253_pp0_it20[3];
ap_reg_ppstg_tmp_reg_253_pp0_it21[4] <= ap_reg_ppstg_tmp_reg_253_pp0_it20[4];
ap_reg_ppstg_tmp_reg_253_pp0_it21[5] <= ap_reg_ppstg_tmp_reg_253_pp0_it20[5];
ap_reg_ppstg_tmp_reg_253_pp0_it21[6] <= ap_reg_ppstg_tmp_reg_253_pp0_it20[6];
ap_reg_ppstg_tmp_reg_253_pp0_it21[7] <= ap_reg_ppstg_tmp_reg_253_pp0_it20[7];
ap_reg_ppstg_tmp_reg_253_pp0_it21[8] <= ap_reg_ppstg_tmp_reg_253_pp0_it20[8];
ap_reg_ppstg_tmp_reg_253_pp0_it21[9] <= ap_reg_ppstg_tmp_reg_253_pp0_it20[9];
ap_reg_ppstg_tmp_reg_253_pp0_it21[10] <= ap_reg_ppstg_tmp_reg_253_pp0_it20[10];
        ap_reg_ppstg_tmp_reg_253_pp0_it22[0] <= ap_reg_ppstg_tmp_reg_253_pp0_it21[0];
ap_reg_ppstg_tmp_reg_253_pp0_it22[1] <= ap_reg_ppstg_tmp_reg_253_pp0_it21[1];
ap_reg_ppstg_tmp_reg_253_pp0_it22[2] <= ap_reg_ppstg_tmp_reg_253_pp0_it21[2];
ap_reg_ppstg_tmp_reg_253_pp0_it22[3] <= ap_reg_ppstg_tmp_reg_253_pp0_it21[3];
ap_reg_ppstg_tmp_reg_253_pp0_it22[4] <= ap_reg_ppstg_tmp_reg_253_pp0_it21[4];
ap_reg_ppstg_tmp_reg_253_pp0_it22[5] <= ap_reg_ppstg_tmp_reg_253_pp0_it21[5];
ap_reg_ppstg_tmp_reg_253_pp0_it22[6] <= ap_reg_ppstg_tmp_reg_253_pp0_it21[6];
ap_reg_ppstg_tmp_reg_253_pp0_it22[7] <= ap_reg_ppstg_tmp_reg_253_pp0_it21[7];
ap_reg_ppstg_tmp_reg_253_pp0_it22[8] <= ap_reg_ppstg_tmp_reg_253_pp0_it21[8];
ap_reg_ppstg_tmp_reg_253_pp0_it22[9] <= ap_reg_ppstg_tmp_reg_253_pp0_it21[9];
ap_reg_ppstg_tmp_reg_253_pp0_it22[10] <= ap_reg_ppstg_tmp_reg_253_pp0_it21[10];
        ap_reg_ppstg_tmp_reg_253_pp0_it23[0] <= ap_reg_ppstg_tmp_reg_253_pp0_it22[0];
ap_reg_ppstg_tmp_reg_253_pp0_it23[1] <= ap_reg_ppstg_tmp_reg_253_pp0_it22[1];
ap_reg_ppstg_tmp_reg_253_pp0_it23[2] <= ap_reg_ppstg_tmp_reg_253_pp0_it22[2];
ap_reg_ppstg_tmp_reg_253_pp0_it23[3] <= ap_reg_ppstg_tmp_reg_253_pp0_it22[3];
ap_reg_ppstg_tmp_reg_253_pp0_it23[4] <= ap_reg_ppstg_tmp_reg_253_pp0_it22[4];
ap_reg_ppstg_tmp_reg_253_pp0_it23[5] <= ap_reg_ppstg_tmp_reg_253_pp0_it22[5];
ap_reg_ppstg_tmp_reg_253_pp0_it23[6] <= ap_reg_ppstg_tmp_reg_253_pp0_it22[6];
ap_reg_ppstg_tmp_reg_253_pp0_it23[7] <= ap_reg_ppstg_tmp_reg_253_pp0_it22[7];
ap_reg_ppstg_tmp_reg_253_pp0_it23[8] <= ap_reg_ppstg_tmp_reg_253_pp0_it22[8];
ap_reg_ppstg_tmp_reg_253_pp0_it23[9] <= ap_reg_ppstg_tmp_reg_253_pp0_it22[9];
ap_reg_ppstg_tmp_reg_253_pp0_it23[10] <= ap_reg_ppstg_tmp_reg_253_pp0_it22[10];
        ap_reg_ppstg_tmp_reg_253_pp0_it24[0] <= ap_reg_ppstg_tmp_reg_253_pp0_it23[0];
ap_reg_ppstg_tmp_reg_253_pp0_it24[1] <= ap_reg_ppstg_tmp_reg_253_pp0_it23[1];
ap_reg_ppstg_tmp_reg_253_pp0_it24[2] <= ap_reg_ppstg_tmp_reg_253_pp0_it23[2];
ap_reg_ppstg_tmp_reg_253_pp0_it24[3] <= ap_reg_ppstg_tmp_reg_253_pp0_it23[3];
ap_reg_ppstg_tmp_reg_253_pp0_it24[4] <= ap_reg_ppstg_tmp_reg_253_pp0_it23[4];
ap_reg_ppstg_tmp_reg_253_pp0_it24[5] <= ap_reg_ppstg_tmp_reg_253_pp0_it23[5];
ap_reg_ppstg_tmp_reg_253_pp0_it24[6] <= ap_reg_ppstg_tmp_reg_253_pp0_it23[6];
ap_reg_ppstg_tmp_reg_253_pp0_it24[7] <= ap_reg_ppstg_tmp_reg_253_pp0_it23[7];
ap_reg_ppstg_tmp_reg_253_pp0_it24[8] <= ap_reg_ppstg_tmp_reg_253_pp0_it23[8];
ap_reg_ppstg_tmp_reg_253_pp0_it24[9] <= ap_reg_ppstg_tmp_reg_253_pp0_it23[9];
ap_reg_ppstg_tmp_reg_253_pp0_it24[10] <= ap_reg_ppstg_tmp_reg_253_pp0_it23[10];
        ap_reg_ppstg_tmp_reg_253_pp0_it25[0] <= ap_reg_ppstg_tmp_reg_253_pp0_it24[0];
ap_reg_ppstg_tmp_reg_253_pp0_it25[1] <= ap_reg_ppstg_tmp_reg_253_pp0_it24[1];
ap_reg_ppstg_tmp_reg_253_pp0_it25[2] <= ap_reg_ppstg_tmp_reg_253_pp0_it24[2];
ap_reg_ppstg_tmp_reg_253_pp0_it25[3] <= ap_reg_ppstg_tmp_reg_253_pp0_it24[3];
ap_reg_ppstg_tmp_reg_253_pp0_it25[4] <= ap_reg_ppstg_tmp_reg_253_pp0_it24[4];
ap_reg_ppstg_tmp_reg_253_pp0_it25[5] <= ap_reg_ppstg_tmp_reg_253_pp0_it24[5];
ap_reg_ppstg_tmp_reg_253_pp0_it25[6] <= ap_reg_ppstg_tmp_reg_253_pp0_it24[6];
ap_reg_ppstg_tmp_reg_253_pp0_it25[7] <= ap_reg_ppstg_tmp_reg_253_pp0_it24[7];
ap_reg_ppstg_tmp_reg_253_pp0_it25[8] <= ap_reg_ppstg_tmp_reg_253_pp0_it24[8];
ap_reg_ppstg_tmp_reg_253_pp0_it25[9] <= ap_reg_ppstg_tmp_reg_253_pp0_it24[9];
ap_reg_ppstg_tmp_reg_253_pp0_it25[10] <= ap_reg_ppstg_tmp_reg_253_pp0_it24[10];
        ap_reg_ppstg_tmp_reg_253_pp0_it26[0] <= ap_reg_ppstg_tmp_reg_253_pp0_it25[0];
ap_reg_ppstg_tmp_reg_253_pp0_it26[1] <= ap_reg_ppstg_tmp_reg_253_pp0_it25[1];
ap_reg_ppstg_tmp_reg_253_pp0_it26[2] <= ap_reg_ppstg_tmp_reg_253_pp0_it25[2];
ap_reg_ppstg_tmp_reg_253_pp0_it26[3] <= ap_reg_ppstg_tmp_reg_253_pp0_it25[3];
ap_reg_ppstg_tmp_reg_253_pp0_it26[4] <= ap_reg_ppstg_tmp_reg_253_pp0_it25[4];
ap_reg_ppstg_tmp_reg_253_pp0_it26[5] <= ap_reg_ppstg_tmp_reg_253_pp0_it25[5];
ap_reg_ppstg_tmp_reg_253_pp0_it26[6] <= ap_reg_ppstg_tmp_reg_253_pp0_it25[6];
ap_reg_ppstg_tmp_reg_253_pp0_it26[7] <= ap_reg_ppstg_tmp_reg_253_pp0_it25[7];
ap_reg_ppstg_tmp_reg_253_pp0_it26[8] <= ap_reg_ppstg_tmp_reg_253_pp0_it25[8];
ap_reg_ppstg_tmp_reg_253_pp0_it26[9] <= ap_reg_ppstg_tmp_reg_253_pp0_it25[9];
ap_reg_ppstg_tmp_reg_253_pp0_it26[10] <= ap_reg_ppstg_tmp_reg_253_pp0_it25[10];
        ap_reg_ppstg_tmp_reg_253_pp0_it27[0] <= ap_reg_ppstg_tmp_reg_253_pp0_it26[0];
ap_reg_ppstg_tmp_reg_253_pp0_it27[1] <= ap_reg_ppstg_tmp_reg_253_pp0_it26[1];
ap_reg_ppstg_tmp_reg_253_pp0_it27[2] <= ap_reg_ppstg_tmp_reg_253_pp0_it26[2];
ap_reg_ppstg_tmp_reg_253_pp0_it27[3] <= ap_reg_ppstg_tmp_reg_253_pp0_it26[3];
ap_reg_ppstg_tmp_reg_253_pp0_it27[4] <= ap_reg_ppstg_tmp_reg_253_pp0_it26[4];
ap_reg_ppstg_tmp_reg_253_pp0_it27[5] <= ap_reg_ppstg_tmp_reg_253_pp0_it26[5];
ap_reg_ppstg_tmp_reg_253_pp0_it27[6] <= ap_reg_ppstg_tmp_reg_253_pp0_it26[6];
ap_reg_ppstg_tmp_reg_253_pp0_it27[7] <= ap_reg_ppstg_tmp_reg_253_pp0_it26[7];
ap_reg_ppstg_tmp_reg_253_pp0_it27[8] <= ap_reg_ppstg_tmp_reg_253_pp0_it26[8];
ap_reg_ppstg_tmp_reg_253_pp0_it27[9] <= ap_reg_ppstg_tmp_reg_253_pp0_it26[9];
ap_reg_ppstg_tmp_reg_253_pp0_it27[10] <= ap_reg_ppstg_tmp_reg_253_pp0_it26[10];
        ap_reg_ppstg_tmp_reg_253_pp0_it28[0] <= ap_reg_ppstg_tmp_reg_253_pp0_it27[0];
ap_reg_ppstg_tmp_reg_253_pp0_it28[1] <= ap_reg_ppstg_tmp_reg_253_pp0_it27[1];
ap_reg_ppstg_tmp_reg_253_pp0_it28[2] <= ap_reg_ppstg_tmp_reg_253_pp0_it27[2];
ap_reg_ppstg_tmp_reg_253_pp0_it28[3] <= ap_reg_ppstg_tmp_reg_253_pp0_it27[3];
ap_reg_ppstg_tmp_reg_253_pp0_it28[4] <= ap_reg_ppstg_tmp_reg_253_pp0_it27[4];
ap_reg_ppstg_tmp_reg_253_pp0_it28[5] <= ap_reg_ppstg_tmp_reg_253_pp0_it27[5];
ap_reg_ppstg_tmp_reg_253_pp0_it28[6] <= ap_reg_ppstg_tmp_reg_253_pp0_it27[6];
ap_reg_ppstg_tmp_reg_253_pp0_it28[7] <= ap_reg_ppstg_tmp_reg_253_pp0_it27[7];
ap_reg_ppstg_tmp_reg_253_pp0_it28[8] <= ap_reg_ppstg_tmp_reg_253_pp0_it27[8];
ap_reg_ppstg_tmp_reg_253_pp0_it28[9] <= ap_reg_ppstg_tmp_reg_253_pp0_it27[9];
ap_reg_ppstg_tmp_reg_253_pp0_it28[10] <= ap_reg_ppstg_tmp_reg_253_pp0_it27[10];
        ap_reg_ppstg_tmp_reg_253_pp0_it29[0] <= ap_reg_ppstg_tmp_reg_253_pp0_it28[0];
ap_reg_ppstg_tmp_reg_253_pp0_it29[1] <= ap_reg_ppstg_tmp_reg_253_pp0_it28[1];
ap_reg_ppstg_tmp_reg_253_pp0_it29[2] <= ap_reg_ppstg_tmp_reg_253_pp0_it28[2];
ap_reg_ppstg_tmp_reg_253_pp0_it29[3] <= ap_reg_ppstg_tmp_reg_253_pp0_it28[3];
ap_reg_ppstg_tmp_reg_253_pp0_it29[4] <= ap_reg_ppstg_tmp_reg_253_pp0_it28[4];
ap_reg_ppstg_tmp_reg_253_pp0_it29[5] <= ap_reg_ppstg_tmp_reg_253_pp0_it28[5];
ap_reg_ppstg_tmp_reg_253_pp0_it29[6] <= ap_reg_ppstg_tmp_reg_253_pp0_it28[6];
ap_reg_ppstg_tmp_reg_253_pp0_it29[7] <= ap_reg_ppstg_tmp_reg_253_pp0_it28[7];
ap_reg_ppstg_tmp_reg_253_pp0_it29[8] <= ap_reg_ppstg_tmp_reg_253_pp0_it28[8];
ap_reg_ppstg_tmp_reg_253_pp0_it29[9] <= ap_reg_ppstg_tmp_reg_253_pp0_it28[9];
ap_reg_ppstg_tmp_reg_253_pp0_it29[10] <= ap_reg_ppstg_tmp_reg_253_pp0_it28[10];
        ap_reg_ppstg_tmp_reg_253_pp0_it3[0] <= ap_reg_ppstg_tmp_reg_253_pp0_it2[0];
ap_reg_ppstg_tmp_reg_253_pp0_it3[1] <= ap_reg_ppstg_tmp_reg_253_pp0_it2[1];
ap_reg_ppstg_tmp_reg_253_pp0_it3[2] <= ap_reg_ppstg_tmp_reg_253_pp0_it2[2];
ap_reg_ppstg_tmp_reg_253_pp0_it3[3] <= ap_reg_ppstg_tmp_reg_253_pp0_it2[3];
ap_reg_ppstg_tmp_reg_253_pp0_it3[4] <= ap_reg_ppstg_tmp_reg_253_pp0_it2[4];
ap_reg_ppstg_tmp_reg_253_pp0_it3[5] <= ap_reg_ppstg_tmp_reg_253_pp0_it2[5];
ap_reg_ppstg_tmp_reg_253_pp0_it3[6] <= ap_reg_ppstg_tmp_reg_253_pp0_it2[6];
ap_reg_ppstg_tmp_reg_253_pp0_it3[7] <= ap_reg_ppstg_tmp_reg_253_pp0_it2[7];
ap_reg_ppstg_tmp_reg_253_pp0_it3[8] <= ap_reg_ppstg_tmp_reg_253_pp0_it2[8];
ap_reg_ppstg_tmp_reg_253_pp0_it3[9] <= ap_reg_ppstg_tmp_reg_253_pp0_it2[9];
ap_reg_ppstg_tmp_reg_253_pp0_it3[10] <= ap_reg_ppstg_tmp_reg_253_pp0_it2[10];
        ap_reg_ppstg_tmp_reg_253_pp0_it30[0] <= ap_reg_ppstg_tmp_reg_253_pp0_it29[0];
ap_reg_ppstg_tmp_reg_253_pp0_it30[1] <= ap_reg_ppstg_tmp_reg_253_pp0_it29[1];
ap_reg_ppstg_tmp_reg_253_pp0_it30[2] <= ap_reg_ppstg_tmp_reg_253_pp0_it29[2];
ap_reg_ppstg_tmp_reg_253_pp0_it30[3] <= ap_reg_ppstg_tmp_reg_253_pp0_it29[3];
ap_reg_ppstg_tmp_reg_253_pp0_it30[4] <= ap_reg_ppstg_tmp_reg_253_pp0_it29[4];
ap_reg_ppstg_tmp_reg_253_pp0_it30[5] <= ap_reg_ppstg_tmp_reg_253_pp0_it29[5];
ap_reg_ppstg_tmp_reg_253_pp0_it30[6] <= ap_reg_ppstg_tmp_reg_253_pp0_it29[6];
ap_reg_ppstg_tmp_reg_253_pp0_it30[7] <= ap_reg_ppstg_tmp_reg_253_pp0_it29[7];
ap_reg_ppstg_tmp_reg_253_pp0_it30[8] <= ap_reg_ppstg_tmp_reg_253_pp0_it29[8];
ap_reg_ppstg_tmp_reg_253_pp0_it30[9] <= ap_reg_ppstg_tmp_reg_253_pp0_it29[9];
ap_reg_ppstg_tmp_reg_253_pp0_it30[10] <= ap_reg_ppstg_tmp_reg_253_pp0_it29[10];
        ap_reg_ppstg_tmp_reg_253_pp0_it31[0] <= ap_reg_ppstg_tmp_reg_253_pp0_it30[0];
ap_reg_ppstg_tmp_reg_253_pp0_it31[1] <= ap_reg_ppstg_tmp_reg_253_pp0_it30[1];
ap_reg_ppstg_tmp_reg_253_pp0_it31[2] <= ap_reg_ppstg_tmp_reg_253_pp0_it30[2];
ap_reg_ppstg_tmp_reg_253_pp0_it31[3] <= ap_reg_ppstg_tmp_reg_253_pp0_it30[3];
ap_reg_ppstg_tmp_reg_253_pp0_it31[4] <= ap_reg_ppstg_tmp_reg_253_pp0_it30[4];
ap_reg_ppstg_tmp_reg_253_pp0_it31[5] <= ap_reg_ppstg_tmp_reg_253_pp0_it30[5];
ap_reg_ppstg_tmp_reg_253_pp0_it31[6] <= ap_reg_ppstg_tmp_reg_253_pp0_it30[6];
ap_reg_ppstg_tmp_reg_253_pp0_it31[7] <= ap_reg_ppstg_tmp_reg_253_pp0_it30[7];
ap_reg_ppstg_tmp_reg_253_pp0_it31[8] <= ap_reg_ppstg_tmp_reg_253_pp0_it30[8];
ap_reg_ppstg_tmp_reg_253_pp0_it31[9] <= ap_reg_ppstg_tmp_reg_253_pp0_it30[9];
ap_reg_ppstg_tmp_reg_253_pp0_it31[10] <= ap_reg_ppstg_tmp_reg_253_pp0_it30[10];
        ap_reg_ppstg_tmp_reg_253_pp0_it32[0] <= ap_reg_ppstg_tmp_reg_253_pp0_it31[0];
ap_reg_ppstg_tmp_reg_253_pp0_it32[1] <= ap_reg_ppstg_tmp_reg_253_pp0_it31[1];
ap_reg_ppstg_tmp_reg_253_pp0_it32[2] <= ap_reg_ppstg_tmp_reg_253_pp0_it31[2];
ap_reg_ppstg_tmp_reg_253_pp0_it32[3] <= ap_reg_ppstg_tmp_reg_253_pp0_it31[3];
ap_reg_ppstg_tmp_reg_253_pp0_it32[4] <= ap_reg_ppstg_tmp_reg_253_pp0_it31[4];
ap_reg_ppstg_tmp_reg_253_pp0_it32[5] <= ap_reg_ppstg_tmp_reg_253_pp0_it31[5];
ap_reg_ppstg_tmp_reg_253_pp0_it32[6] <= ap_reg_ppstg_tmp_reg_253_pp0_it31[6];
ap_reg_ppstg_tmp_reg_253_pp0_it32[7] <= ap_reg_ppstg_tmp_reg_253_pp0_it31[7];
ap_reg_ppstg_tmp_reg_253_pp0_it32[8] <= ap_reg_ppstg_tmp_reg_253_pp0_it31[8];
ap_reg_ppstg_tmp_reg_253_pp0_it32[9] <= ap_reg_ppstg_tmp_reg_253_pp0_it31[9];
ap_reg_ppstg_tmp_reg_253_pp0_it32[10] <= ap_reg_ppstg_tmp_reg_253_pp0_it31[10];
        ap_reg_ppstg_tmp_reg_253_pp0_it33[0] <= ap_reg_ppstg_tmp_reg_253_pp0_it32[0];
ap_reg_ppstg_tmp_reg_253_pp0_it33[1] <= ap_reg_ppstg_tmp_reg_253_pp0_it32[1];
ap_reg_ppstg_tmp_reg_253_pp0_it33[2] <= ap_reg_ppstg_tmp_reg_253_pp0_it32[2];
ap_reg_ppstg_tmp_reg_253_pp0_it33[3] <= ap_reg_ppstg_tmp_reg_253_pp0_it32[3];
ap_reg_ppstg_tmp_reg_253_pp0_it33[4] <= ap_reg_ppstg_tmp_reg_253_pp0_it32[4];
ap_reg_ppstg_tmp_reg_253_pp0_it33[5] <= ap_reg_ppstg_tmp_reg_253_pp0_it32[5];
ap_reg_ppstg_tmp_reg_253_pp0_it33[6] <= ap_reg_ppstg_tmp_reg_253_pp0_it32[6];
ap_reg_ppstg_tmp_reg_253_pp0_it33[7] <= ap_reg_ppstg_tmp_reg_253_pp0_it32[7];
ap_reg_ppstg_tmp_reg_253_pp0_it33[8] <= ap_reg_ppstg_tmp_reg_253_pp0_it32[8];
ap_reg_ppstg_tmp_reg_253_pp0_it33[9] <= ap_reg_ppstg_tmp_reg_253_pp0_it32[9];
ap_reg_ppstg_tmp_reg_253_pp0_it33[10] <= ap_reg_ppstg_tmp_reg_253_pp0_it32[10];
        ap_reg_ppstg_tmp_reg_253_pp0_it34[0] <= ap_reg_ppstg_tmp_reg_253_pp0_it33[0];
ap_reg_ppstg_tmp_reg_253_pp0_it34[1] <= ap_reg_ppstg_tmp_reg_253_pp0_it33[1];
ap_reg_ppstg_tmp_reg_253_pp0_it34[2] <= ap_reg_ppstg_tmp_reg_253_pp0_it33[2];
ap_reg_ppstg_tmp_reg_253_pp0_it34[3] <= ap_reg_ppstg_tmp_reg_253_pp0_it33[3];
ap_reg_ppstg_tmp_reg_253_pp0_it34[4] <= ap_reg_ppstg_tmp_reg_253_pp0_it33[4];
ap_reg_ppstg_tmp_reg_253_pp0_it34[5] <= ap_reg_ppstg_tmp_reg_253_pp0_it33[5];
ap_reg_ppstg_tmp_reg_253_pp0_it34[6] <= ap_reg_ppstg_tmp_reg_253_pp0_it33[6];
ap_reg_ppstg_tmp_reg_253_pp0_it34[7] <= ap_reg_ppstg_tmp_reg_253_pp0_it33[7];
ap_reg_ppstg_tmp_reg_253_pp0_it34[8] <= ap_reg_ppstg_tmp_reg_253_pp0_it33[8];
ap_reg_ppstg_tmp_reg_253_pp0_it34[9] <= ap_reg_ppstg_tmp_reg_253_pp0_it33[9];
ap_reg_ppstg_tmp_reg_253_pp0_it34[10] <= ap_reg_ppstg_tmp_reg_253_pp0_it33[10];
        ap_reg_ppstg_tmp_reg_253_pp0_it35[0] <= ap_reg_ppstg_tmp_reg_253_pp0_it34[0];
ap_reg_ppstg_tmp_reg_253_pp0_it35[1] <= ap_reg_ppstg_tmp_reg_253_pp0_it34[1];
ap_reg_ppstg_tmp_reg_253_pp0_it35[2] <= ap_reg_ppstg_tmp_reg_253_pp0_it34[2];
ap_reg_ppstg_tmp_reg_253_pp0_it35[3] <= ap_reg_ppstg_tmp_reg_253_pp0_it34[3];
ap_reg_ppstg_tmp_reg_253_pp0_it35[4] <= ap_reg_ppstg_tmp_reg_253_pp0_it34[4];
ap_reg_ppstg_tmp_reg_253_pp0_it35[5] <= ap_reg_ppstg_tmp_reg_253_pp0_it34[5];
ap_reg_ppstg_tmp_reg_253_pp0_it35[6] <= ap_reg_ppstg_tmp_reg_253_pp0_it34[6];
ap_reg_ppstg_tmp_reg_253_pp0_it35[7] <= ap_reg_ppstg_tmp_reg_253_pp0_it34[7];
ap_reg_ppstg_tmp_reg_253_pp0_it35[8] <= ap_reg_ppstg_tmp_reg_253_pp0_it34[8];
ap_reg_ppstg_tmp_reg_253_pp0_it35[9] <= ap_reg_ppstg_tmp_reg_253_pp0_it34[9];
ap_reg_ppstg_tmp_reg_253_pp0_it35[10] <= ap_reg_ppstg_tmp_reg_253_pp0_it34[10];
        ap_reg_ppstg_tmp_reg_253_pp0_it4[0] <= ap_reg_ppstg_tmp_reg_253_pp0_it3[0];
ap_reg_ppstg_tmp_reg_253_pp0_it4[1] <= ap_reg_ppstg_tmp_reg_253_pp0_it3[1];
ap_reg_ppstg_tmp_reg_253_pp0_it4[2] <= ap_reg_ppstg_tmp_reg_253_pp0_it3[2];
ap_reg_ppstg_tmp_reg_253_pp0_it4[3] <= ap_reg_ppstg_tmp_reg_253_pp0_it3[3];
ap_reg_ppstg_tmp_reg_253_pp0_it4[4] <= ap_reg_ppstg_tmp_reg_253_pp0_it3[4];
ap_reg_ppstg_tmp_reg_253_pp0_it4[5] <= ap_reg_ppstg_tmp_reg_253_pp0_it3[5];
ap_reg_ppstg_tmp_reg_253_pp0_it4[6] <= ap_reg_ppstg_tmp_reg_253_pp0_it3[6];
ap_reg_ppstg_tmp_reg_253_pp0_it4[7] <= ap_reg_ppstg_tmp_reg_253_pp0_it3[7];
ap_reg_ppstg_tmp_reg_253_pp0_it4[8] <= ap_reg_ppstg_tmp_reg_253_pp0_it3[8];
ap_reg_ppstg_tmp_reg_253_pp0_it4[9] <= ap_reg_ppstg_tmp_reg_253_pp0_it3[9];
ap_reg_ppstg_tmp_reg_253_pp0_it4[10] <= ap_reg_ppstg_tmp_reg_253_pp0_it3[10];
        ap_reg_ppstg_tmp_reg_253_pp0_it5[0] <= ap_reg_ppstg_tmp_reg_253_pp0_it4[0];
ap_reg_ppstg_tmp_reg_253_pp0_it5[1] <= ap_reg_ppstg_tmp_reg_253_pp0_it4[1];
ap_reg_ppstg_tmp_reg_253_pp0_it5[2] <= ap_reg_ppstg_tmp_reg_253_pp0_it4[2];
ap_reg_ppstg_tmp_reg_253_pp0_it5[3] <= ap_reg_ppstg_tmp_reg_253_pp0_it4[3];
ap_reg_ppstg_tmp_reg_253_pp0_it5[4] <= ap_reg_ppstg_tmp_reg_253_pp0_it4[4];
ap_reg_ppstg_tmp_reg_253_pp0_it5[5] <= ap_reg_ppstg_tmp_reg_253_pp0_it4[5];
ap_reg_ppstg_tmp_reg_253_pp0_it5[6] <= ap_reg_ppstg_tmp_reg_253_pp0_it4[6];
ap_reg_ppstg_tmp_reg_253_pp0_it5[7] <= ap_reg_ppstg_tmp_reg_253_pp0_it4[7];
ap_reg_ppstg_tmp_reg_253_pp0_it5[8] <= ap_reg_ppstg_tmp_reg_253_pp0_it4[8];
ap_reg_ppstg_tmp_reg_253_pp0_it5[9] <= ap_reg_ppstg_tmp_reg_253_pp0_it4[9];
ap_reg_ppstg_tmp_reg_253_pp0_it5[10] <= ap_reg_ppstg_tmp_reg_253_pp0_it4[10];
        ap_reg_ppstg_tmp_reg_253_pp0_it6[0] <= ap_reg_ppstg_tmp_reg_253_pp0_it5[0];
ap_reg_ppstg_tmp_reg_253_pp0_it6[1] <= ap_reg_ppstg_tmp_reg_253_pp0_it5[1];
ap_reg_ppstg_tmp_reg_253_pp0_it6[2] <= ap_reg_ppstg_tmp_reg_253_pp0_it5[2];
ap_reg_ppstg_tmp_reg_253_pp0_it6[3] <= ap_reg_ppstg_tmp_reg_253_pp0_it5[3];
ap_reg_ppstg_tmp_reg_253_pp0_it6[4] <= ap_reg_ppstg_tmp_reg_253_pp0_it5[4];
ap_reg_ppstg_tmp_reg_253_pp0_it6[5] <= ap_reg_ppstg_tmp_reg_253_pp0_it5[5];
ap_reg_ppstg_tmp_reg_253_pp0_it6[6] <= ap_reg_ppstg_tmp_reg_253_pp0_it5[6];
ap_reg_ppstg_tmp_reg_253_pp0_it6[7] <= ap_reg_ppstg_tmp_reg_253_pp0_it5[7];
ap_reg_ppstg_tmp_reg_253_pp0_it6[8] <= ap_reg_ppstg_tmp_reg_253_pp0_it5[8];
ap_reg_ppstg_tmp_reg_253_pp0_it6[9] <= ap_reg_ppstg_tmp_reg_253_pp0_it5[9];
ap_reg_ppstg_tmp_reg_253_pp0_it6[10] <= ap_reg_ppstg_tmp_reg_253_pp0_it5[10];
        ap_reg_ppstg_tmp_reg_253_pp0_it7[0] <= ap_reg_ppstg_tmp_reg_253_pp0_it6[0];
ap_reg_ppstg_tmp_reg_253_pp0_it7[1] <= ap_reg_ppstg_tmp_reg_253_pp0_it6[1];
ap_reg_ppstg_tmp_reg_253_pp0_it7[2] <= ap_reg_ppstg_tmp_reg_253_pp0_it6[2];
ap_reg_ppstg_tmp_reg_253_pp0_it7[3] <= ap_reg_ppstg_tmp_reg_253_pp0_it6[3];
ap_reg_ppstg_tmp_reg_253_pp0_it7[4] <= ap_reg_ppstg_tmp_reg_253_pp0_it6[4];
ap_reg_ppstg_tmp_reg_253_pp0_it7[5] <= ap_reg_ppstg_tmp_reg_253_pp0_it6[5];
ap_reg_ppstg_tmp_reg_253_pp0_it7[6] <= ap_reg_ppstg_tmp_reg_253_pp0_it6[6];
ap_reg_ppstg_tmp_reg_253_pp0_it7[7] <= ap_reg_ppstg_tmp_reg_253_pp0_it6[7];
ap_reg_ppstg_tmp_reg_253_pp0_it7[8] <= ap_reg_ppstg_tmp_reg_253_pp0_it6[8];
ap_reg_ppstg_tmp_reg_253_pp0_it7[9] <= ap_reg_ppstg_tmp_reg_253_pp0_it6[9];
ap_reg_ppstg_tmp_reg_253_pp0_it7[10] <= ap_reg_ppstg_tmp_reg_253_pp0_it6[10];
        ap_reg_ppstg_tmp_reg_253_pp0_it8[0] <= ap_reg_ppstg_tmp_reg_253_pp0_it7[0];
ap_reg_ppstg_tmp_reg_253_pp0_it8[1] <= ap_reg_ppstg_tmp_reg_253_pp0_it7[1];
ap_reg_ppstg_tmp_reg_253_pp0_it8[2] <= ap_reg_ppstg_tmp_reg_253_pp0_it7[2];
ap_reg_ppstg_tmp_reg_253_pp0_it8[3] <= ap_reg_ppstg_tmp_reg_253_pp0_it7[3];
ap_reg_ppstg_tmp_reg_253_pp0_it8[4] <= ap_reg_ppstg_tmp_reg_253_pp0_it7[4];
ap_reg_ppstg_tmp_reg_253_pp0_it8[5] <= ap_reg_ppstg_tmp_reg_253_pp0_it7[5];
ap_reg_ppstg_tmp_reg_253_pp0_it8[6] <= ap_reg_ppstg_tmp_reg_253_pp0_it7[6];
ap_reg_ppstg_tmp_reg_253_pp0_it8[7] <= ap_reg_ppstg_tmp_reg_253_pp0_it7[7];
ap_reg_ppstg_tmp_reg_253_pp0_it8[8] <= ap_reg_ppstg_tmp_reg_253_pp0_it7[8];
ap_reg_ppstg_tmp_reg_253_pp0_it8[9] <= ap_reg_ppstg_tmp_reg_253_pp0_it7[9];
ap_reg_ppstg_tmp_reg_253_pp0_it8[10] <= ap_reg_ppstg_tmp_reg_253_pp0_it7[10];
        ap_reg_ppstg_tmp_reg_253_pp0_it9[0] <= ap_reg_ppstg_tmp_reg_253_pp0_it8[0];
ap_reg_ppstg_tmp_reg_253_pp0_it9[1] <= ap_reg_ppstg_tmp_reg_253_pp0_it8[1];
ap_reg_ppstg_tmp_reg_253_pp0_it9[2] <= ap_reg_ppstg_tmp_reg_253_pp0_it8[2];
ap_reg_ppstg_tmp_reg_253_pp0_it9[3] <= ap_reg_ppstg_tmp_reg_253_pp0_it8[3];
ap_reg_ppstg_tmp_reg_253_pp0_it9[4] <= ap_reg_ppstg_tmp_reg_253_pp0_it8[4];
ap_reg_ppstg_tmp_reg_253_pp0_it9[5] <= ap_reg_ppstg_tmp_reg_253_pp0_it8[5];
ap_reg_ppstg_tmp_reg_253_pp0_it9[6] <= ap_reg_ppstg_tmp_reg_253_pp0_it8[6];
ap_reg_ppstg_tmp_reg_253_pp0_it9[7] <= ap_reg_ppstg_tmp_reg_253_pp0_it8[7];
ap_reg_ppstg_tmp_reg_253_pp0_it9[8] <= ap_reg_ppstg_tmp_reg_253_pp0_it8[8];
ap_reg_ppstg_tmp_reg_253_pp0_it9[9] <= ap_reg_ppstg_tmp_reg_253_pp0_it8[9];
ap_reg_ppstg_tmp_reg_253_pp0_it9[10] <= ap_reg_ppstg_tmp_reg_253_pp0_it8[10];
        ap_reg_ppstg_tmp_s_reg_284_pp0_it10 <= ap_reg_ppstg_tmp_s_reg_284_pp0_it9;
        ap_reg_ppstg_tmp_s_reg_284_pp0_it11 <= ap_reg_ppstg_tmp_s_reg_284_pp0_it10;
        ap_reg_ppstg_tmp_s_reg_284_pp0_it12 <= ap_reg_ppstg_tmp_s_reg_284_pp0_it11;
        ap_reg_ppstg_tmp_s_reg_284_pp0_it13 <= ap_reg_ppstg_tmp_s_reg_284_pp0_it12;
        ap_reg_ppstg_tmp_s_reg_284_pp0_it2 <= tmp_s_reg_284;
        ap_reg_ppstg_tmp_s_reg_284_pp0_it3 <= ap_reg_ppstg_tmp_s_reg_284_pp0_it2;
        ap_reg_ppstg_tmp_s_reg_284_pp0_it4 <= ap_reg_ppstg_tmp_s_reg_284_pp0_it3;
        ap_reg_ppstg_tmp_s_reg_284_pp0_it5 <= ap_reg_ppstg_tmp_s_reg_284_pp0_it4;
        ap_reg_ppstg_tmp_s_reg_284_pp0_it6 <= ap_reg_ppstg_tmp_s_reg_284_pp0_it5;
        ap_reg_ppstg_tmp_s_reg_284_pp0_it7 <= ap_reg_ppstg_tmp_s_reg_284_pp0_it6;
        ap_reg_ppstg_tmp_s_reg_284_pp0_it8 <= ap_reg_ppstg_tmp_s_reg_284_pp0_it7;
        ap_reg_ppstg_tmp_s_reg_284_pp0_it9 <= ap_reg_ppstg_tmp_s_reg_284_pp0_it8;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it13) & (ap_reg_ppstg_exitcond1_reg_244_pp0_it12 == ap_const_lv1_0))) begin
        arctan_V_reg_300 <= grp_cordic_atan_fu_148_ap_return;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        exitcond1_reg_244 <= exitcond1_fu_154_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond1_reg_244 == ap_const_lv1_0))) begin
        imag_V_load_reg_278 <= imag_V_q0;
        real_V_load_reg_272 <= real_V_q0;
        tmp_s_reg_284 <= tmp_s_fu_172_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond1_reg_244 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_s_fu_172_p2))) begin
        tmp_129_reg_288 <= real_V_q0[ap_const_lv32_1F];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond1_reg_244 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_s_fu_172_p2) & ~(ap_const_lv1_0 == tmp_129_fu_178_p3))) begin
        tmp_130_reg_292 <= imag_V_q0[ap_const_lv32_1F];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_fu_154_p2 == ap_const_lv1_0))) begin
        tmp_reg_253[0] <= tmp_fu_166_p1[0];
tmp_reg_253[1] <= tmp_fu_166_p1[1];
tmp_reg_253[2] <= tmp_fu_166_p1[2];
tmp_reg_253[3] <= tmp_fu_166_p1[3];
tmp_reg_253[4] <= tmp_fu_166_p1[4];
tmp_reg_253[5] <= tmp_fu_166_p1[5];
tmp_reg_253[6] <= tmp_fu_166_p1[6];
tmp_reg_253[7] <= tmp_fu_166_p1[7];
tmp_reg_253[8] <= tmp_fu_166_p1[8];
tmp_reg_253[9] <= tmp_fu_166_p1[9];
tmp_reg_253[10] <= tmp_fu_166_p1[10];
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm)) | (ap_ST_st39_fsm_2 == ap_CS_fsm))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st39_fsm_2 == ap_CS_fsm)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// grp_cordic_atan_fu_148_ap_ce assign process. ///
always @ (ap_CS_fsm or ap_reg_ppstg_exitcond1_reg_244_pp0_it1 or ap_reg_ppstg_exitcond1_reg_244_pp0_it2 or ap_reg_ppstg_exitcond1_reg_244_pp0_it3 or ap_reg_ppstg_exitcond1_reg_244_pp0_it4 or ap_reg_ppstg_exitcond1_reg_244_pp0_it5 or ap_reg_ppstg_exitcond1_reg_244_pp0_it6 or ap_reg_ppstg_exitcond1_reg_244_pp0_it7 or ap_reg_ppstg_exitcond1_reg_244_pp0_it8 or ap_reg_ppstg_exitcond1_reg_244_pp0_it9 or ap_reg_ppstg_exitcond1_reg_244_pp0_it10 or ap_reg_ppstg_exitcond1_reg_244_pp0_it11 or ap_reg_ppstg_exitcond1_reg_244_pp0_it12)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & ((ap_reg_ppstg_exitcond1_reg_244_pp0_it12 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_244_pp0_it1 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_244_pp0_it2 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_244_pp0_it3 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_244_pp0_it4 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_244_pp0_it5 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_244_pp0_it6 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_244_pp0_it7 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_244_pp0_it8 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_244_pp0_it9 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_244_pp0_it10 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_244_pp0_it11 == ap_const_lv1_0)))) begin
        grp_cordic_atan_fu_148_ap_ce = ap_const_logic_1;
    end else begin
        grp_cordic_atan_fu_148_ap_ce = ap_const_logic_0;
    end
end

/// grp_cordic_sqrt_fu_139_ap_ce assign process. ///
always @ (ap_CS_fsm or exitcond1_reg_244 or ap_reg_ppstg_exitcond1_reg_244_pp0_it1 or ap_reg_ppstg_exitcond1_reg_244_pp0_it2 or ap_reg_ppstg_exitcond1_reg_244_pp0_it3 or ap_reg_ppstg_exitcond1_reg_244_pp0_it4 or ap_reg_ppstg_exitcond1_reg_244_pp0_it5 or ap_reg_ppstg_exitcond1_reg_244_pp0_it6 or ap_reg_ppstg_exitcond1_reg_244_pp0_it7 or ap_reg_ppstg_exitcond1_reg_244_pp0_it8 or ap_reg_ppstg_exitcond1_reg_244_pp0_it9 or ap_reg_ppstg_exitcond1_reg_244_pp0_it10 or ap_reg_ppstg_exitcond1_reg_244_pp0_it11 or ap_reg_ppstg_exitcond1_reg_244_pp0_it12 or ap_reg_ppstg_exitcond1_reg_244_pp0_it13 or ap_reg_ppstg_exitcond1_reg_244_pp0_it14 or ap_reg_ppstg_exitcond1_reg_244_pp0_it15 or ap_reg_ppstg_exitcond1_reg_244_pp0_it16 or ap_reg_ppstg_exitcond1_reg_244_pp0_it17 or ap_reg_ppstg_exitcond1_reg_244_pp0_it18 or ap_reg_ppstg_exitcond1_reg_244_pp0_it19 or ap_reg_ppstg_exitcond1_reg_244_pp0_it20 or ap_reg_ppstg_exitcond1_reg_244_pp0_it21 or ap_reg_ppstg_exitcond1_reg_244_pp0_it22 or ap_reg_ppstg_exitcond1_reg_244_pp0_it23 or ap_reg_ppstg_exitcond1_reg_244_pp0_it24 or ap_reg_ppstg_exitcond1_reg_244_pp0_it25 or ap_reg_ppstg_exitcond1_reg_244_pp0_it26 or ap_reg_ppstg_exitcond1_reg_244_pp0_it27 or ap_reg_ppstg_exitcond1_reg_244_pp0_it28 or ap_reg_ppstg_exitcond1_reg_244_pp0_it29 or ap_reg_ppstg_exitcond1_reg_244_pp0_it30 or ap_reg_ppstg_exitcond1_reg_244_pp0_it31 or ap_reg_ppstg_exitcond1_reg_244_pp0_it32 or ap_reg_ppstg_exitcond1_reg_244_pp0_it33 or ap_reg_ppstg_exitcond1_reg_244_pp0_it34 or ap_reg_ppstg_exitcond1_reg_244_pp0_it35)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & ((exitcond1_reg_244 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_244_pp0_it12 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_244_pp0_it1 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_244_pp0_it2 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_244_pp0_it3 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_244_pp0_it4 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_244_pp0_it5 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_244_pp0_it6 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_244_pp0_it7 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_244_pp0_it8 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_244_pp0_it9 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_244_pp0_it10 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_244_pp0_it11 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_244_pp0_it13 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_244_pp0_it14 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_244_pp0_it15 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_244_pp0_it16 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_244_pp0_it17 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_244_pp0_it18 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_244_pp0_it19 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_244_pp0_it20 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_244_pp0_it21 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_244_pp0_it22 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_244_pp0_it23 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_244_pp0_it24 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_244_pp0_it25 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_244_pp0_it26 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_244_pp0_it27 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_244_pp0_it28 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_244_pp0_it29 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_244_pp0_it30 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_244_pp0_it31 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_244_pp0_it32 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_244_pp0_it33 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_244_pp0_it34 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_244_pp0_it35 == ap_const_lv1_0)))) begin
        grp_cordic_sqrt_fu_139_ap_ce = ap_const_logic_1;
    end else begin
        grp_cordic_sqrt_fu_139_ap_ce = ap_const_logic_0;
    end
end

/// imag_V_ce0 assign process. ///
always @ (ap_CS_fsm or exitcond1_fu_154_p2 or ap_reg_ppiten_pp0_it0)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_fu_154_p2 == ap_const_lv1_0))) begin
        imag_V_ce0 = ap_const_logic_1;
    end else begin
        imag_V_ce0 = ap_const_logic_0;
    end
end

/// magFrame_V_ce0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it36 or ap_reg_ppstg_exitcond1_reg_244_pp0_it35)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it36) & (ap_reg_ppstg_exitcond1_reg_244_pp0_it35 == ap_const_lv1_0))) begin
        magFrame_V_ce0 = ap_const_logic_1;
    end else begin
        magFrame_V_ce0 = ap_const_logic_0;
    end
end

/// magFrame_V_we0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it36 or ap_reg_ppstg_exitcond1_reg_244_pp0_it35)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it36) & (ap_reg_ppstg_exitcond1_reg_244_pp0_it35 == ap_const_lv1_0))) begin
        magFrame_V_we0 = ap_const_logic_1;
    end else begin
        magFrame_V_we0 = ap_const_logic_0;
    end
end

/// phaseFrame_V_address1 assign process. ///
always @ (ap_reg_ppstg_tmp_reg_253_pp0_it13 or ap_reg_ppstg_tmp_s_reg_284_pp0_it13 or phaseFrame_V_addr_2_gep_fu_99_p3 or phaseFrame_V_addr_gep_fu_107_p3 or ap_sig_bdd_595 or ap_sig_bdd_597 or ap_sig_bdd_545)
begin
    if (ap_sig_bdd_545) begin
        if (~(ap_const_lv1_0 == ap_reg_ppstg_tmp_s_reg_284_pp0_it13)) begin
            phaseFrame_V_address1 = phaseFrame_V_addr_gep_fu_107_p3;
        end else if (ap_sig_bdd_597) begin
            phaseFrame_V_address1 = phaseFrame_V_addr_2_gep_fu_99_p3;
        end else if (ap_sig_bdd_595) begin
            phaseFrame_V_address1 = ap_reg_ppstg_tmp_reg_253_pp0_it13;
        end else begin
            phaseFrame_V_address1 = ap_reg_ppstg_tmp_reg_253_pp0_it13;
        end
    end else begin
        phaseFrame_V_address1 = ap_reg_ppstg_tmp_reg_253_pp0_it13;
    end
end

/// phaseFrame_V_ce0 assign process. ///
always @ (ap_CS_fsm or exitcond1_reg_244 or ap_reg_ppiten_pp0_it1 or tmp_s_fu_172_p2 or tmp_129_fu_178_p3 or or_cond_fu_206_p2)
begin
    if ((((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond1_reg_244 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_s_fu_172_p2) & (ap_const_lv1_0 == tmp_129_fu_178_p3) & (ap_const_lv1_0 == or_cond_fu_206_p2)) | ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond1_reg_244 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_s_fu_172_p2) & (ap_const_lv1_0 == tmp_129_fu_178_p3) & ~(ap_const_lv1_0 == or_cond_fu_206_p2)))) begin
        phaseFrame_V_ce0 = ap_const_logic_1;
    end else begin
        phaseFrame_V_ce0 = ap_const_logic_0;
    end
end

/// phaseFrame_V_ce1 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it14 or ap_reg_ppstg_exitcond1_reg_244_pp0_it13 or ap_reg_ppstg_tmp_s_reg_284_pp0_it13 or ap_reg_ppstg_tmp_129_reg_288_pp0_it13 or ap_reg_ppstg_tmp_130_reg_292_pp0_it13)
begin
    if ((((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it14) & (ap_reg_ppstg_exitcond1_reg_244_pp0_it13 == ap_const_lv1_0) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_s_reg_284_pp0_it13) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_129_reg_288_pp0_it13) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_130_reg_292_pp0_it13)) | ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it14) & (ap_reg_ppstg_exitcond1_reg_244_pp0_it13 == ap_const_lv1_0) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_s_reg_284_pp0_it13) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_129_reg_288_pp0_it13) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_130_reg_292_pp0_it13)) | ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it14) & (ap_reg_ppstg_exitcond1_reg_244_pp0_it13 == ap_const_lv1_0) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_s_reg_284_pp0_it13)))) begin
        phaseFrame_V_ce1 = ap_const_logic_1;
    end else begin
        phaseFrame_V_ce1 = ap_const_logic_0;
    end
end

/// phaseFrame_V_d0 assign process. ///
always @ (or_cond_fu_206_p2 or ap_sig_bdd_339)
begin
    if (ap_sig_bdd_339) begin
        if (~(ap_const_lv1_0 == or_cond_fu_206_p2)) begin
            phaseFrame_V_d0 = ap_const_lv26_1921FB;
        end else if ((ap_const_lv1_0 == or_cond_fu_206_p2)) begin
            phaseFrame_V_d0 = ap_const_lv26_3E6DE05;
        end else begin
            phaseFrame_V_d0 = ap_const_lv26_1921FB;
        end
    end else begin
        phaseFrame_V_d0 = ap_const_lv26_1921FB;
    end
end

/// phaseFrame_V_d1 assign process. ///
always @ (ap_reg_ppstg_tmp_s_reg_284_pp0_it13 or r_V_cast_cast_fu_221_p1 or r_V_cast_cast_310_fu_235_p1 or arctan_V_2_cast8_fu_240_p1 or ap_sig_bdd_595 or ap_sig_bdd_597 or ap_sig_bdd_545)
begin
    if (ap_sig_bdd_545) begin
        if (~(ap_const_lv1_0 == ap_reg_ppstg_tmp_s_reg_284_pp0_it13)) begin
            phaseFrame_V_d1 = arctan_V_2_cast8_fu_240_p1;
        end else if (ap_sig_bdd_597) begin
            phaseFrame_V_d1 = r_V_cast_cast_310_fu_235_p1;
        end else if (ap_sig_bdd_595) begin
            phaseFrame_V_d1 = r_V_cast_cast_fu_221_p1;
        end else begin
            phaseFrame_V_d1 = arctan_V_2_cast8_fu_240_p1;
        end
    end else begin
        phaseFrame_V_d1 = arctan_V_2_cast8_fu_240_p1;
    end
end

/// phaseFrame_V_we0 assign process. ///
always @ (ap_CS_fsm or exitcond1_reg_244 or ap_reg_ppiten_pp0_it1 or tmp_s_fu_172_p2 or tmp_129_fu_178_p3 or or_cond_fu_206_p2)
begin
    if ((((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond1_reg_244 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_s_fu_172_p2) & (ap_const_lv1_0 == tmp_129_fu_178_p3) & (ap_const_lv1_0 == or_cond_fu_206_p2)) | ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond1_reg_244 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_s_fu_172_p2) & (ap_const_lv1_0 == tmp_129_fu_178_p3) & ~(ap_const_lv1_0 == or_cond_fu_206_p2)))) begin
        phaseFrame_V_we0 = ap_const_logic_1;
    end else begin
        phaseFrame_V_we0 = ap_const_logic_0;
    end
end

/// phaseFrame_V_we1 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it14 or ap_reg_ppstg_exitcond1_reg_244_pp0_it13 or ap_reg_ppstg_tmp_s_reg_284_pp0_it13 or ap_reg_ppstg_tmp_129_reg_288_pp0_it13 or ap_reg_ppstg_tmp_130_reg_292_pp0_it13)
begin
    if ((((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it14) & (ap_reg_ppstg_exitcond1_reg_244_pp0_it13 == ap_const_lv1_0) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_s_reg_284_pp0_it13) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_129_reg_288_pp0_it13) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_130_reg_292_pp0_it13)) | ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it14) & (ap_reg_ppstg_exitcond1_reg_244_pp0_it13 == ap_const_lv1_0) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_s_reg_284_pp0_it13) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_129_reg_288_pp0_it13) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_130_reg_292_pp0_it13)) | ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it14) & (ap_reg_ppstg_exitcond1_reg_244_pp0_it13 == ap_const_lv1_0) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_s_reg_284_pp0_it13)))) begin
        phaseFrame_V_we1 = ap_const_logic_1;
    end else begin
        phaseFrame_V_we1 = ap_const_logic_0;
    end
end

/// real_V_ce0 assign process. ///
always @ (ap_CS_fsm or exitcond1_fu_154_p2 or ap_reg_ppiten_pp0_it0)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_fu_154_p2 == ap_const_lv1_0))) begin
        real_V_ce0 = ap_const_logic_1;
    end else begin
        real_V_ce0 = ap_const_logic_0;
    end
end
always @ (ap_start or ap_CS_fsm or exitcond1_fu_154_p2 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it35 or ap_reg_ppiten_pp0_it36)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        ap_ST_pp0_stg0_fsm_1 : 
            if ((~((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it36) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it35)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(exitcond1_fu_154_p2 == ap_const_lv1_0) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(exitcond1_fu_154_p2 == ap_const_lv1_0) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
                ap_NS_fsm = ap_ST_st39_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st39_fsm_2;
            end
        ap_ST_st39_fsm_2 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
        default : 
            ap_NS_fsm = 'bx;
    endcase
end

/// ap_sig_bdd_339 assign process. ///
always @ (ap_CS_fsm or exitcond1_reg_244 or ap_reg_ppiten_pp0_it1 or tmp_s_fu_172_p2 or tmp_129_fu_178_p3)
begin
    ap_sig_bdd_339 = ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond1_reg_244 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_s_fu_172_p2) & (ap_const_lv1_0 == tmp_129_fu_178_p3));
end

/// ap_sig_bdd_545 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it14 or ap_reg_ppstg_exitcond1_reg_244_pp0_it13)
begin
    ap_sig_bdd_545 = ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it14) & (ap_reg_ppstg_exitcond1_reg_244_pp0_it13 == ap_const_lv1_0));
end

/// ap_sig_bdd_595 assign process. ///
always @ (ap_reg_ppstg_tmp_s_reg_284_pp0_it13 or ap_reg_ppstg_tmp_129_reg_288_pp0_it13 or ap_reg_ppstg_tmp_130_reg_292_pp0_it13)
begin
    ap_sig_bdd_595 = ((ap_const_lv1_0 == ap_reg_ppstg_tmp_s_reg_284_pp0_it13) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_129_reg_288_pp0_it13) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_130_reg_292_pp0_it13));
end

/// ap_sig_bdd_597 assign process. ///
always @ (ap_reg_ppstg_tmp_s_reg_284_pp0_it13 or ap_reg_ppstg_tmp_129_reg_288_pp0_it13 or ap_reg_ppstg_tmp_130_reg_292_pp0_it13)
begin
    ap_sig_bdd_597 = ((ap_const_lv1_0 == ap_reg_ppstg_tmp_s_reg_284_pp0_it13) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_129_reg_288_pp0_it13) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_130_reg_292_pp0_it13));
end
assign arctan_V_2_cast8_fu_240_p1 = $signed(arctan_V_reg_300);
assign exitcond1_fu_154_p2 = (i_reg_127 == ap_const_lv11_400? 1'b1: 1'b0);
assign grp_cordic_atan_fu_148_x_V = real_V_load_reg_272;
assign grp_cordic_atan_fu_148_y_V = imag_V_load_reg_278;
assign grp_cordic_sqrt_fu_139_x_V = real_V_q0;
assign grp_cordic_sqrt_fu_139_y_V = imag_V_q0;
assign i_2_fu_160_p2 = (i_reg_127 + ap_const_lv11_1);
assign imag_V_address0 = tmp_fu_166_p1;
assign magFrame_V_address0 = ap_reg_ppstg_tmp_reg_253_pp0_it35;
assign magFrame_V_d0 = grp_cordic_sqrt_fu_139_ap_return;
assign not2_fu_194_p2 = (real_V_q0 == ap_const_lv32_0? 1'b1: 1'b0);
assign not3_fu_200_p2 = ($signed(imag_V_q0) > $signed(32'b00000000000000000000000000000000)? 1'b1: 1'b0);
assign or_cond_fu_206_p2 = (not2_fu_194_p2 & not3_fu_200_p2);
assign phaseFrame_V_addr_2_gep_fu_99_p3 = ap_reg_ppstg_tmp_reg_253_pp0_it13;
assign phaseFrame_V_addr_gep_fu_107_p3 = ap_reg_ppstg_tmp_reg_253_pp0_it13;
assign phaseFrame_V_address0 = tmp_reg_253;
assign r_V_cast_cast_310_fu_235_p1 = $signed(r_V_s_fu_229_p2);
assign r_V_cast_cast_fu_221_p1 = $unsigned(r_V_fu_215_p2);
assign r_V_fu_215_p0 = $signed(arctan_V_reg_300);
assign r_V_fu_215_p2 = (r_V_fu_215_p0 + ap_const_lv23_3243F6);
assign r_V_s_fu_229_p0 = $signed(arctan_V_reg_300);
assign r_V_s_fu_229_p2 = (r_V_s_fu_229_p0 + ap_const_lv24_CDBC0A);
assign real_V_address0 = tmp_fu_166_p1;
assign tmp_129_fu_178_p3 = real_V_q0[ap_const_lv32_1F];
assign tmp_fu_166_p1 = $unsigned(i_reg_127);
assign tmp_s_fu_172_p2 = ($signed(real_V_q0) > $signed(32'b00000000000000000000000000000000)? 1'b1: 1'b0);
always @ (posedge ap_clk)
begin
    tmp_reg_253[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_253_pp0_it1[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_253_pp0_it2[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_253_pp0_it3[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_253_pp0_it4[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_253_pp0_it5[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_253_pp0_it6[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_253_pp0_it7[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_253_pp0_it8[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_253_pp0_it9[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_253_pp0_it10[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_253_pp0_it11[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_253_pp0_it12[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_253_pp0_it13[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_253_pp0_it14[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_253_pp0_it15[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_253_pp0_it16[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_253_pp0_it17[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_253_pp0_it18[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_253_pp0_it19[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_253_pp0_it20[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_253_pp0_it21[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_253_pp0_it22[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_253_pp0_it23[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_253_pp0_it24[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_253_pp0_it25[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_253_pp0_it26[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_253_pp0_it27[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_253_pp0_it28[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_253_pp0_it29[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_253_pp0_it30[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_253_pp0_it31[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_253_pp0_it32[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_253_pp0_it33[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_253_pp0_it34[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_253_pp0_it35[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
end



endmodule //cal_mag_phase

