// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.2
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module cal_mag_phase (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        magFrame_V_address0,
        magFrame_V_ce0,
        magFrame_V_we0,
        magFrame_V_d0,
        phaseFrame_V_address0,
        phaseFrame_V_ce0,
        phaseFrame_V_we0,
        phaseFrame_V_d0,
        phaseFrame_V_address1,
        phaseFrame_V_ce1,
        phaseFrame_V_we1,
        phaseFrame_V_d1,
        real_V_address0,
        real_V_ce0,
        real_V_q0,
        imag_V_address0,
        imag_V_ce0,
        imag_V_q0
);

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] magFrame_V_address0;
output   magFrame_V_ce0;
output   magFrame_V_we0;
output  [31:0] magFrame_V_d0;
output  [9:0] phaseFrame_V_address0;
output   phaseFrame_V_ce0;
output   phaseFrame_V_we0;
output  [10:0] phaseFrame_V_d0;
output  [9:0] phaseFrame_V_address1;
output   phaseFrame_V_ce1;
output   phaseFrame_V_we1;
output  [10:0] phaseFrame_V_d1;
output  [9:0] real_V_address0;
output   real_V_ce0;
input  [31:0] real_V_q0;
output  [9:0] imag_V_address0;
output   imag_V_ce0;
input  [31:0] imag_V_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg magFrame_V_ce0;
reg magFrame_V_we0;
reg phaseFrame_V_ce0;
reg phaseFrame_V_we0;
reg[10:0] phaseFrame_V_d0;
reg[9:0] phaseFrame_V_address1;
reg phaseFrame_V_ce1;
reg phaseFrame_V_we1;
reg[10:0] phaseFrame_V_d1;
reg real_V_ce0;
reg imag_V_ce0;
reg   [1:0] ap_CS_fsm = 2'b00;
reg   [10:0] i_reg_163;
wire   [0:0] exitcond1_fu_184_p2;
reg   [0:0] exitcond1_reg_692;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
reg    ap_reg_ppiten_pp0_it3 = 1'b0;
reg    ap_reg_ppiten_pp0_it4 = 1'b0;
reg    ap_reg_ppiten_pp0_it5 = 1'b0;
reg    ap_reg_ppiten_pp0_it6 = 1'b0;
reg    ap_reg_ppiten_pp0_it7 = 1'b0;
reg    ap_reg_ppiten_pp0_it8 = 1'b0;
reg    ap_reg_ppiten_pp0_it9 = 1'b0;
reg    ap_reg_ppiten_pp0_it10 = 1'b0;
reg    ap_reg_ppiten_pp0_it11 = 1'b0;
reg    ap_reg_ppiten_pp0_it12 = 1'b0;
reg    ap_reg_ppiten_pp0_it13 = 1'b0;
reg    ap_reg_ppiten_pp0_it14 = 1'b0;
reg    ap_reg_ppiten_pp0_it15 = 1'b0;
reg    ap_reg_ppiten_pp0_it16 = 1'b0;
reg    ap_reg_ppiten_pp0_it17 = 1'b0;
reg    ap_reg_ppiten_pp0_it18 = 1'b0;
reg    ap_reg_ppiten_pp0_it19 = 1'b0;
reg    ap_reg_ppiten_pp0_it20 = 1'b0;
reg    ap_reg_ppiten_pp0_it21 = 1'b0;
reg    ap_reg_ppiten_pp0_it22 = 1'b0;
reg    ap_reg_ppiten_pp0_it23 = 1'b0;
reg    ap_reg_ppiten_pp0_it24 = 1'b0;
reg    ap_reg_ppiten_pp0_it25 = 1'b0;
reg    ap_reg_ppiten_pp0_it26 = 1'b0;
reg    ap_reg_ppiten_pp0_it27 = 1'b0;
reg    ap_reg_ppiten_pp0_it28 = 1'b0;
reg    ap_reg_ppiten_pp0_it29 = 1'b0;
reg    ap_reg_ppiten_pp0_it30 = 1'b0;
reg    ap_reg_ppiten_pp0_it31 = 1'b0;
reg    ap_reg_ppiten_pp0_it32 = 1'b0;
reg    ap_reg_ppiten_pp0_it33 = 1'b0;
reg    ap_reg_ppiten_pp0_it34 = 1'b0;
reg    ap_reg_ppiten_pp0_it35 = 1'b0;
reg    ap_reg_ppiten_pp0_it36 = 1'b0;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_692_pp0_it1;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_692_pp0_it2;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_692_pp0_it3;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_692_pp0_it4;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_692_pp0_it5;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_692_pp0_it6;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_692_pp0_it7;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_692_pp0_it8;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_692_pp0_it9;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_692_pp0_it10;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_692_pp0_it11;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_692_pp0_it12;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_692_pp0_it13;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_692_pp0_it14;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_692_pp0_it15;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_692_pp0_it16;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_692_pp0_it17;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_692_pp0_it18;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_692_pp0_it19;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_692_pp0_it20;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_692_pp0_it21;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_692_pp0_it22;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_692_pp0_it23;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_692_pp0_it24;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_692_pp0_it25;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_692_pp0_it26;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_692_pp0_it27;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_692_pp0_it28;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_692_pp0_it29;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_692_pp0_it30;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_692_pp0_it31;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_692_pp0_it32;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_692_pp0_it33;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_692_pp0_it34;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_692_pp0_it35;
wire   [10:0] i_3_fu_190_p2;
wire   [63:0] tmp_fu_196_p1;
reg   [63:0] tmp_reg_701;
reg   [63:0] ap_reg_ppstg_tmp_reg_701_pp0_it1;
reg   [63:0] ap_reg_ppstg_tmp_reg_701_pp0_it2;
reg   [63:0] ap_reg_ppstg_tmp_reg_701_pp0_it3;
reg   [63:0] ap_reg_ppstg_tmp_reg_701_pp0_it4;
reg   [63:0] ap_reg_ppstg_tmp_reg_701_pp0_it5;
reg   [63:0] ap_reg_ppstg_tmp_reg_701_pp0_it6;
reg   [63:0] ap_reg_ppstg_tmp_reg_701_pp0_it7;
reg   [63:0] ap_reg_ppstg_tmp_reg_701_pp0_it8;
reg   [63:0] ap_reg_ppstg_tmp_reg_701_pp0_it9;
reg   [63:0] ap_reg_ppstg_tmp_reg_701_pp0_it10;
reg   [63:0] ap_reg_ppstg_tmp_reg_701_pp0_it11;
reg   [63:0] ap_reg_ppstg_tmp_reg_701_pp0_it12;
reg   [63:0] ap_reg_ppstg_tmp_reg_701_pp0_it13;
reg   [63:0] ap_reg_ppstg_tmp_reg_701_pp0_it14;
reg   [63:0] ap_reg_ppstg_tmp_reg_701_pp0_it15;
reg   [63:0] ap_reg_ppstg_tmp_reg_701_pp0_it16;
reg   [63:0] ap_reg_ppstg_tmp_reg_701_pp0_it17;
reg   [63:0] ap_reg_ppstg_tmp_reg_701_pp0_it18;
reg   [63:0] ap_reg_ppstg_tmp_reg_701_pp0_it19;
reg   [63:0] ap_reg_ppstg_tmp_reg_701_pp0_it20;
reg   [63:0] ap_reg_ppstg_tmp_reg_701_pp0_it21;
reg   [63:0] ap_reg_ppstg_tmp_reg_701_pp0_it22;
reg   [63:0] ap_reg_ppstg_tmp_reg_701_pp0_it23;
reg   [63:0] ap_reg_ppstg_tmp_reg_701_pp0_it24;
reg   [63:0] ap_reg_ppstg_tmp_reg_701_pp0_it25;
reg   [63:0] ap_reg_ppstg_tmp_reg_701_pp0_it26;
reg   [63:0] ap_reg_ppstg_tmp_reg_701_pp0_it27;
reg   [63:0] ap_reg_ppstg_tmp_reg_701_pp0_it28;
reg   [63:0] ap_reg_ppstg_tmp_reg_701_pp0_it29;
reg   [63:0] ap_reg_ppstg_tmp_reg_701_pp0_it30;
reg   [63:0] ap_reg_ppstg_tmp_reg_701_pp0_it31;
reg   [63:0] ap_reg_ppstg_tmp_reg_701_pp0_it32;
reg   [63:0] ap_reg_ppstg_tmp_reg_701_pp0_it33;
reg   [63:0] ap_reg_ppstg_tmp_reg_701_pp0_it34;
reg   [63:0] ap_reg_ppstg_tmp_reg_701_pp0_it35;
wire   [0:0] tmp_i_fu_202_p2;
reg   [0:0] tmp_i_reg_720;
reg   [0:0] ap_reg_ppstg_tmp_i_reg_720_pp0_it2;
reg   [0:0] ap_reg_ppstg_tmp_i_reg_720_pp0_it3;
reg   [0:0] ap_reg_ppstg_tmp_i_reg_720_pp0_it4;
wire   [31:0] y_iteration_V_17_fu_220_p3;
reg   [31:0] y_iteration_V_17_reg_724;
wire   [31:0] x_iteration_V_39_fu_228_p3;
reg   [31:0] x_iteration_V_39_reg_731;
reg   [0:0] tmp_138_reg_738;
reg   [0:0] ap_reg_ppstg_tmp_138_reg_738_pp0_it2;
reg   [0:0] ap_reg_ppstg_tmp_138_reg_738_pp0_it3;
wire   [0:0] tmp_144_fu_244_p3;
reg   [0:0] tmp_144_reg_746;
reg   [0:0] ap_reg_ppstg_tmp_144_reg_746_pp0_it2;
reg   [0:0] ap_reg_ppstg_tmp_144_reg_746_pp0_it3;
reg   [0:0] ap_reg_ppstg_tmp_144_reg_746_pp0_it4;
reg   [0:0] tmp_145_reg_750;
reg   [0:0] ap_reg_ppstg_tmp_145_reg_750_pp0_it2;
reg   [0:0] ap_reg_ppstg_tmp_145_reg_750_pp0_it3;
reg   [0:0] ap_reg_ppstg_tmp_145_reg_750_pp0_it4;
wire   [0:0] tmp_139_fu_304_p3;
reg   [0:0] tmp_139_reg_757;
reg   [0:0] ap_reg_ppstg_tmp_139_reg_757_pp0_it3;
wire   [31:0] y_iteration_V_20_fu_368_p3;
reg   [31:0] y_iteration_V_20_reg_762;
wire   [31:0] x_iteration_V_41_fu_376_p3;
reg   [31:0] x_iteration_V_41_reg_768;
reg   [0:0] tmp_140_reg_774;
reg   [0:0] ap_reg_ppstg_tmp_140_reg_774_pp0_it3;
reg   [29:0] tmp_318_i_reg_781;
reg   [29:0] tmp_320_i_reg_787;
wire   [0:0] tmp_141_fu_455_p3;
reg   [0:0] tmp_141_reg_792;
wire   [31:0] y_iteration_V_22_fu_519_p3;
reg   [31:0] y_iteration_V_22_reg_797;
reg   [0:0] tmp_142_reg_803;
reg   [27:0] tmp_338_i_reg_809;
wire   [4:0] tmp4_fu_631_p2;
reg   [4:0] tmp4_reg_814;
wire   [7:0] tmp5_fu_643_p2;
reg   [7:0] tmp5_reg_819;
wire   [31:0] grp_cordic_sqrt_fu_175_x_V;
wire   [31:0] grp_cordic_sqrt_fu_175_y_V;
wire   [31:0] grp_cordic_sqrt_fu_175_ap_return;
reg    grp_cordic_sqrt_fu_175_ap_ce;
wire   [9:0] phaseFrame_V_addr_2_gep_fu_135_p3;
wire   [9:0] phaseFrame_V_addr_gep_fu_143_p3;
wire   [0:0] or_cond_fu_272_p2;
wire   [10:0] r_V_cast_cast_fu_671_p1;
wire   [10:0] r_V_cast_cast_116_fu_682_p1;
wire   [10:0] p_Val2_450_i_cast_cast_fu_687_p1;
wire   [31:0] y_iteration_V_fu_214_p2;
wire   [31:0] x_iteration_V_fu_208_p2;
wire   [0:0] not2_fu_260_p2;
wire   [0:0] not3_fu_266_p2;
wire   [31:0] y_iteration_V_18_fu_282_p2;
wire   [31:0] y_iteration_V_3_fu_286_p2;
wire   [31:0] x_iteration_V_27_fu_278_p2;
wire   [31:0] y_iteration_V_19_fu_290_p3;
wire   [30:0] tmp_309_i_fu_312_p4;
wire   [31:0] x_iteration_V_40_fu_297_p3;
wire   [31:0] x_iteration_V_30_fu_326_p1;
wire   [30:0] tmp_311_i_fu_332_p4;
wire   [31:0] y_iteration_V_5_fu_346_p1;
wire   [31:0] r_V_161_fu_342_p1;
wire   [31:0] r_V_162_fu_352_p1;
wire   [31:0] y_iteration_V_6_fu_362_p1;
wire   [31:0] y_iteration_V_5_fu_346_p2;
wire   [31:0] y_iteration_V_6_fu_362_p2;
wire   [31:0] x_iteration_V_30_fu_326_p2;
wire   [31:0] x_iteration_V_31_fu_356_p2;
wire   [31:0] x_iteration_V_33_fu_415_p1;
wire   [31:0] y_iteration_V_8_fu_423_p1;
wire   [31:0] r_V_164_fu_420_p1;
wire   [31:0] r_V_165_fu_428_p1;
wire   [31:0] y_iteration_V_9_fu_436_p1;
wire   [31:0] y_iteration_V_8_fu_423_p2;
wire   [31:0] y_iteration_V_9_fu_436_p2;
wire   [31:0] x_iteration_V_33_fu_415_p2;
wire   [31:0] x_iteration_V_34_fu_431_p2;
wire   [31:0] y_iteration_V_21_fu_441_p3;
wire   [28:0] tmp_327_i_fu_463_p4;
wire   [31:0] x_iteration_V_42_fu_448_p3;
wire   [31:0] x_iteration_V_36_fu_477_p1;
wire   [28:0] tmp_329_i_fu_483_p4;
wire   [31:0] y_iteration_V_11_fu_497_p1;
wire   [31:0] r_V_167_fu_493_p1;
wire   [31:0] r_V_168_fu_503_p1;
wire   [31:0] y_iteration_V_12_fu_513_p1;
wire   [31:0] y_iteration_V_11_fu_497_p2;
wire   [31:0] y_iteration_V_12_fu_513_p2;
wire   [31:0] x_iteration_V_36_fu_477_p2;
wire   [31:0] x_iteration_V_37_fu_507_p2;
wire   [31:0] x_iteration_V_43_fu_527_p3;
wire   [7:0] r_V_145_1_i_fu_553_p3;
wire   [7:0] r_V_150_1_i_fu_560_p3;
wire   [31:0] y_iteration_V_14_fu_591_p1;
wire   [31:0] r_V_169_fu_588_p1;
wire   [31:0] y_iteration_V_15_fu_596_p1;
wire   [31:0] y_iteration_V_14_fu_591_p2;
wire   [31:0] y_iteration_V_15_fu_596_p2;
wire   [31:0] y_iteration_V_23_fu_601_p3;
wire   [0:0] tmp_143_fu_615_p3;
wire   [4:0] p_Val2_440_v_i_cast_cast_fu_581_p3;
wire   [4:0] p_Val2_447_v_i_cast_cast_fu_608_p3;
wire   [7:0] p_Val2_330_fu_567_p3;
wire   [7:0] p_Val2_450_v_i_cast_cast_fu_623_p3;
wire   [7:0] tmp6_fu_637_p2;
wire   [7:0] p_Val2_433_v_i_cast_cast_fu_574_p3;
wire   [7:0] p_Val2_345_fu_652_p1;
wire   [7:0] p_Val2_345_fu_652_p2;
wire   [8:0] r_V_fu_665_p0;
wire   [8:0] r_V_fu_665_p2;
wire   [9:0] r_V_s_fu_676_p0;
wire   [9:0] r_V_s_fu_676_p2;
reg   [1:0] ap_NS_fsm;
reg    ap_sig_bdd_783;
reg    ap_sig_bdd_785;
reg    ap_sig_bdd_663;
reg    ap_sig_bdd_372;
parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 2'b00;
parameter    ap_ST_pp0_stg0_fsm_1 = 2'b1;
parameter    ap_ST_st39_fsm_2 = 2'b10;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv11_79B = 11'b11110011011;
parameter    ap_const_lv11_64 = 11'b1100100;
parameter    ap_const_lv11_400 = 11'b10000000000;
parameter    ap_const_lv11_1 = 11'b1;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv8_B1 = 8'b10110001;
parameter    ap_const_lv8_15 = 8'b10101;
parameter    ap_const_lv8_EB = 8'b11101011;
parameter    ap_const_lv8_4F = 8'b1001111;
parameter    ap_const_lv8_F1 = 8'b11110001;
parameter    ap_const_lv8_F = 8'b1111;
parameter    ap_const_lv5_19 = 5'b11001;
parameter    ap_const_lv5_7 = 5'b111;
parameter    ap_const_lv5_1D = 5'b11101;
parameter    ap_const_lv5_3 = 5'b11;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv8_1 = 8'b1;
parameter    ap_const_lv9_C9 = 9'b11001001;
parameter    ap_const_lv10_337 = 10'b1100110111;
parameter    ap_true = 1'b1;


cordic_sqrt grp_cordic_sqrt_fu_175(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .x_V( grp_cordic_sqrt_fu_175_x_V ),
    .y_V( grp_cordic_sqrt_fu_175_y_V ),
    .ap_return( grp_cordic_sqrt_fu_175_ap_return ),
    .ap_ce( grp_cordic_sqrt_fu_175_ap_ce )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & ~(exitcond1_fu_184_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (exitcond1_fu_184_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0)) | ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & ~(exitcond1_fu_184_p2 == ap_const_lv1_0)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it10 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it10
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it10 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it10 <= ap_reg_ppiten_pp0_it9;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it10 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it11 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it11
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it11 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it11 <= ap_reg_ppiten_pp0_it10;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it11 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it12 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it12
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it12 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it12 <= ap_reg_ppiten_pp0_it11;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it12 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it13 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it13
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it13 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it13 <= ap_reg_ppiten_pp0_it12;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it13 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it14 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it14
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it14 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it14 <= ap_reg_ppiten_pp0_it13;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it14 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it15 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it15
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it15 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it15 <= ap_reg_ppiten_pp0_it14;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it15 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it16 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it16
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it16 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it16 <= ap_reg_ppiten_pp0_it15;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it16 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it17 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it17
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it17 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it17 <= ap_reg_ppiten_pp0_it16;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it17 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it18 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it18
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it18 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it18 <= ap_reg_ppiten_pp0_it17;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it18 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it19 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it19
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it19 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it19 <= ap_reg_ppiten_pp0_it18;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it19 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it20 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it20
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it20 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it20 <= ap_reg_ppiten_pp0_it19;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it20 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it21 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it21
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it21 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it21 <= ap_reg_ppiten_pp0_it20;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it21 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it22 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it22
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it22 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it22 <= ap_reg_ppiten_pp0_it21;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it22 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it23 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it23
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it23 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it23 <= ap_reg_ppiten_pp0_it22;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it23 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it24 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it24
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it24 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it24 <= ap_reg_ppiten_pp0_it23;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it24 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it25 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it25
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it25 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it25 <= ap_reg_ppiten_pp0_it24;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it25 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it26 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it26
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it26 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it26 <= ap_reg_ppiten_pp0_it25;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it26 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it27 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it27
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it27 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it27 <= ap_reg_ppiten_pp0_it26;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it27 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it28 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it28
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it28 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it28 <= ap_reg_ppiten_pp0_it27;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it28 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it29 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it29
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it29 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it29 <= ap_reg_ppiten_pp0_it28;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it29 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it3 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it3
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it30 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it30
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it30 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it30 <= ap_reg_ppiten_pp0_it29;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it30 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it31 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it31
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it31 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it31 <= ap_reg_ppiten_pp0_it30;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it31 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it32 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it32
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it32 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it32 <= ap_reg_ppiten_pp0_it31;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it32 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it33 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it33
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it33 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it33 <= ap_reg_ppiten_pp0_it32;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it33 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it34 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it34
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it34 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it34 <= ap_reg_ppiten_pp0_it33;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it34 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it35 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it35
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it35 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it35 <= ap_reg_ppiten_pp0_it34;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it35 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it36 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it36
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it36 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it36 <= ap_reg_ppiten_pp0_it35;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it36 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it4 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it4
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it5 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it5
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it6 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it6
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it7 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it7
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it8 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it8
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it9 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it9
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it9 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it9 <= ap_reg_ppiten_pp0_it8;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it9 <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_fu_184_p2 == ap_const_lv1_0))) begin
        i_reg_163 <= i_3_fu_190_p2;
    end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
        i_reg_163 <= ap_const_lv11_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
        ap_reg_ppstg_exitcond1_reg_692_pp0_it1 <= exitcond1_reg_692;
        ap_reg_ppstg_exitcond1_reg_692_pp0_it10 <= ap_reg_ppstg_exitcond1_reg_692_pp0_it9;
        ap_reg_ppstg_exitcond1_reg_692_pp0_it11 <= ap_reg_ppstg_exitcond1_reg_692_pp0_it10;
        ap_reg_ppstg_exitcond1_reg_692_pp0_it12 <= ap_reg_ppstg_exitcond1_reg_692_pp0_it11;
        ap_reg_ppstg_exitcond1_reg_692_pp0_it13 <= ap_reg_ppstg_exitcond1_reg_692_pp0_it12;
        ap_reg_ppstg_exitcond1_reg_692_pp0_it14 <= ap_reg_ppstg_exitcond1_reg_692_pp0_it13;
        ap_reg_ppstg_exitcond1_reg_692_pp0_it15 <= ap_reg_ppstg_exitcond1_reg_692_pp0_it14;
        ap_reg_ppstg_exitcond1_reg_692_pp0_it16 <= ap_reg_ppstg_exitcond1_reg_692_pp0_it15;
        ap_reg_ppstg_exitcond1_reg_692_pp0_it17 <= ap_reg_ppstg_exitcond1_reg_692_pp0_it16;
        ap_reg_ppstg_exitcond1_reg_692_pp0_it18 <= ap_reg_ppstg_exitcond1_reg_692_pp0_it17;
        ap_reg_ppstg_exitcond1_reg_692_pp0_it19 <= ap_reg_ppstg_exitcond1_reg_692_pp0_it18;
        ap_reg_ppstg_exitcond1_reg_692_pp0_it2 <= ap_reg_ppstg_exitcond1_reg_692_pp0_it1;
        ap_reg_ppstg_exitcond1_reg_692_pp0_it20 <= ap_reg_ppstg_exitcond1_reg_692_pp0_it19;
        ap_reg_ppstg_exitcond1_reg_692_pp0_it21 <= ap_reg_ppstg_exitcond1_reg_692_pp0_it20;
        ap_reg_ppstg_exitcond1_reg_692_pp0_it22 <= ap_reg_ppstg_exitcond1_reg_692_pp0_it21;
        ap_reg_ppstg_exitcond1_reg_692_pp0_it23 <= ap_reg_ppstg_exitcond1_reg_692_pp0_it22;
        ap_reg_ppstg_exitcond1_reg_692_pp0_it24 <= ap_reg_ppstg_exitcond1_reg_692_pp0_it23;
        ap_reg_ppstg_exitcond1_reg_692_pp0_it25 <= ap_reg_ppstg_exitcond1_reg_692_pp0_it24;
        ap_reg_ppstg_exitcond1_reg_692_pp0_it26 <= ap_reg_ppstg_exitcond1_reg_692_pp0_it25;
        ap_reg_ppstg_exitcond1_reg_692_pp0_it27 <= ap_reg_ppstg_exitcond1_reg_692_pp0_it26;
        ap_reg_ppstg_exitcond1_reg_692_pp0_it28 <= ap_reg_ppstg_exitcond1_reg_692_pp0_it27;
        ap_reg_ppstg_exitcond1_reg_692_pp0_it29 <= ap_reg_ppstg_exitcond1_reg_692_pp0_it28;
        ap_reg_ppstg_exitcond1_reg_692_pp0_it3 <= ap_reg_ppstg_exitcond1_reg_692_pp0_it2;
        ap_reg_ppstg_exitcond1_reg_692_pp0_it30 <= ap_reg_ppstg_exitcond1_reg_692_pp0_it29;
        ap_reg_ppstg_exitcond1_reg_692_pp0_it31 <= ap_reg_ppstg_exitcond1_reg_692_pp0_it30;
        ap_reg_ppstg_exitcond1_reg_692_pp0_it32 <= ap_reg_ppstg_exitcond1_reg_692_pp0_it31;
        ap_reg_ppstg_exitcond1_reg_692_pp0_it33 <= ap_reg_ppstg_exitcond1_reg_692_pp0_it32;
        ap_reg_ppstg_exitcond1_reg_692_pp0_it34 <= ap_reg_ppstg_exitcond1_reg_692_pp0_it33;
        ap_reg_ppstg_exitcond1_reg_692_pp0_it35 <= ap_reg_ppstg_exitcond1_reg_692_pp0_it34;
        ap_reg_ppstg_exitcond1_reg_692_pp0_it4 <= ap_reg_ppstg_exitcond1_reg_692_pp0_it3;
        ap_reg_ppstg_exitcond1_reg_692_pp0_it5 <= ap_reg_ppstg_exitcond1_reg_692_pp0_it4;
        ap_reg_ppstg_exitcond1_reg_692_pp0_it6 <= ap_reg_ppstg_exitcond1_reg_692_pp0_it5;
        ap_reg_ppstg_exitcond1_reg_692_pp0_it7 <= ap_reg_ppstg_exitcond1_reg_692_pp0_it6;
        ap_reg_ppstg_exitcond1_reg_692_pp0_it8 <= ap_reg_ppstg_exitcond1_reg_692_pp0_it7;
        ap_reg_ppstg_exitcond1_reg_692_pp0_it9 <= ap_reg_ppstg_exitcond1_reg_692_pp0_it8;
        ap_reg_ppstg_tmp_138_reg_738_pp0_it2 <= tmp_138_reg_738;
        ap_reg_ppstg_tmp_138_reg_738_pp0_it3 <= ap_reg_ppstg_tmp_138_reg_738_pp0_it2;
        ap_reg_ppstg_tmp_139_reg_757_pp0_it3 <= tmp_139_reg_757;
        ap_reg_ppstg_tmp_140_reg_774_pp0_it3 <= tmp_140_reg_774;
        ap_reg_ppstg_tmp_144_reg_746_pp0_it2 <= tmp_144_reg_746;
        ap_reg_ppstg_tmp_144_reg_746_pp0_it3 <= ap_reg_ppstg_tmp_144_reg_746_pp0_it2;
        ap_reg_ppstg_tmp_144_reg_746_pp0_it4 <= ap_reg_ppstg_tmp_144_reg_746_pp0_it3;
        ap_reg_ppstg_tmp_145_reg_750_pp0_it2 <= tmp_145_reg_750;
        ap_reg_ppstg_tmp_145_reg_750_pp0_it3 <= ap_reg_ppstg_tmp_145_reg_750_pp0_it2;
        ap_reg_ppstg_tmp_145_reg_750_pp0_it4 <= ap_reg_ppstg_tmp_145_reg_750_pp0_it3;
        ap_reg_ppstg_tmp_i_reg_720_pp0_it2 <= tmp_i_reg_720;
        ap_reg_ppstg_tmp_i_reg_720_pp0_it3 <= ap_reg_ppstg_tmp_i_reg_720_pp0_it2;
        ap_reg_ppstg_tmp_i_reg_720_pp0_it4 <= ap_reg_ppstg_tmp_i_reg_720_pp0_it3;
        ap_reg_ppstg_tmp_reg_701_pp0_it1[0] <= tmp_reg_701[0];
ap_reg_ppstg_tmp_reg_701_pp0_it1[1] <= tmp_reg_701[1];
ap_reg_ppstg_tmp_reg_701_pp0_it1[2] <= tmp_reg_701[2];
ap_reg_ppstg_tmp_reg_701_pp0_it1[3] <= tmp_reg_701[3];
ap_reg_ppstg_tmp_reg_701_pp0_it1[4] <= tmp_reg_701[4];
ap_reg_ppstg_tmp_reg_701_pp0_it1[5] <= tmp_reg_701[5];
ap_reg_ppstg_tmp_reg_701_pp0_it1[6] <= tmp_reg_701[6];
ap_reg_ppstg_tmp_reg_701_pp0_it1[7] <= tmp_reg_701[7];
ap_reg_ppstg_tmp_reg_701_pp0_it1[8] <= tmp_reg_701[8];
ap_reg_ppstg_tmp_reg_701_pp0_it1[9] <= tmp_reg_701[9];
ap_reg_ppstg_tmp_reg_701_pp0_it1[10] <= tmp_reg_701[10];
        ap_reg_ppstg_tmp_reg_701_pp0_it10[0] <= ap_reg_ppstg_tmp_reg_701_pp0_it9[0];
ap_reg_ppstg_tmp_reg_701_pp0_it10[1] <= ap_reg_ppstg_tmp_reg_701_pp0_it9[1];
ap_reg_ppstg_tmp_reg_701_pp0_it10[2] <= ap_reg_ppstg_tmp_reg_701_pp0_it9[2];
ap_reg_ppstg_tmp_reg_701_pp0_it10[3] <= ap_reg_ppstg_tmp_reg_701_pp0_it9[3];
ap_reg_ppstg_tmp_reg_701_pp0_it10[4] <= ap_reg_ppstg_tmp_reg_701_pp0_it9[4];
ap_reg_ppstg_tmp_reg_701_pp0_it10[5] <= ap_reg_ppstg_tmp_reg_701_pp0_it9[5];
ap_reg_ppstg_tmp_reg_701_pp0_it10[6] <= ap_reg_ppstg_tmp_reg_701_pp0_it9[6];
ap_reg_ppstg_tmp_reg_701_pp0_it10[7] <= ap_reg_ppstg_tmp_reg_701_pp0_it9[7];
ap_reg_ppstg_tmp_reg_701_pp0_it10[8] <= ap_reg_ppstg_tmp_reg_701_pp0_it9[8];
ap_reg_ppstg_tmp_reg_701_pp0_it10[9] <= ap_reg_ppstg_tmp_reg_701_pp0_it9[9];
ap_reg_ppstg_tmp_reg_701_pp0_it10[10] <= ap_reg_ppstg_tmp_reg_701_pp0_it9[10];
        ap_reg_ppstg_tmp_reg_701_pp0_it11[0] <= ap_reg_ppstg_tmp_reg_701_pp0_it10[0];
ap_reg_ppstg_tmp_reg_701_pp0_it11[1] <= ap_reg_ppstg_tmp_reg_701_pp0_it10[1];
ap_reg_ppstg_tmp_reg_701_pp0_it11[2] <= ap_reg_ppstg_tmp_reg_701_pp0_it10[2];
ap_reg_ppstg_tmp_reg_701_pp0_it11[3] <= ap_reg_ppstg_tmp_reg_701_pp0_it10[3];
ap_reg_ppstg_tmp_reg_701_pp0_it11[4] <= ap_reg_ppstg_tmp_reg_701_pp0_it10[4];
ap_reg_ppstg_tmp_reg_701_pp0_it11[5] <= ap_reg_ppstg_tmp_reg_701_pp0_it10[5];
ap_reg_ppstg_tmp_reg_701_pp0_it11[6] <= ap_reg_ppstg_tmp_reg_701_pp0_it10[6];
ap_reg_ppstg_tmp_reg_701_pp0_it11[7] <= ap_reg_ppstg_tmp_reg_701_pp0_it10[7];
ap_reg_ppstg_tmp_reg_701_pp0_it11[8] <= ap_reg_ppstg_tmp_reg_701_pp0_it10[8];
ap_reg_ppstg_tmp_reg_701_pp0_it11[9] <= ap_reg_ppstg_tmp_reg_701_pp0_it10[9];
ap_reg_ppstg_tmp_reg_701_pp0_it11[10] <= ap_reg_ppstg_tmp_reg_701_pp0_it10[10];
        ap_reg_ppstg_tmp_reg_701_pp0_it12[0] <= ap_reg_ppstg_tmp_reg_701_pp0_it11[0];
ap_reg_ppstg_tmp_reg_701_pp0_it12[1] <= ap_reg_ppstg_tmp_reg_701_pp0_it11[1];
ap_reg_ppstg_tmp_reg_701_pp0_it12[2] <= ap_reg_ppstg_tmp_reg_701_pp0_it11[2];
ap_reg_ppstg_tmp_reg_701_pp0_it12[3] <= ap_reg_ppstg_tmp_reg_701_pp0_it11[3];
ap_reg_ppstg_tmp_reg_701_pp0_it12[4] <= ap_reg_ppstg_tmp_reg_701_pp0_it11[4];
ap_reg_ppstg_tmp_reg_701_pp0_it12[5] <= ap_reg_ppstg_tmp_reg_701_pp0_it11[5];
ap_reg_ppstg_tmp_reg_701_pp0_it12[6] <= ap_reg_ppstg_tmp_reg_701_pp0_it11[6];
ap_reg_ppstg_tmp_reg_701_pp0_it12[7] <= ap_reg_ppstg_tmp_reg_701_pp0_it11[7];
ap_reg_ppstg_tmp_reg_701_pp0_it12[8] <= ap_reg_ppstg_tmp_reg_701_pp0_it11[8];
ap_reg_ppstg_tmp_reg_701_pp0_it12[9] <= ap_reg_ppstg_tmp_reg_701_pp0_it11[9];
ap_reg_ppstg_tmp_reg_701_pp0_it12[10] <= ap_reg_ppstg_tmp_reg_701_pp0_it11[10];
        ap_reg_ppstg_tmp_reg_701_pp0_it13[0] <= ap_reg_ppstg_tmp_reg_701_pp0_it12[0];
ap_reg_ppstg_tmp_reg_701_pp0_it13[1] <= ap_reg_ppstg_tmp_reg_701_pp0_it12[1];
ap_reg_ppstg_tmp_reg_701_pp0_it13[2] <= ap_reg_ppstg_tmp_reg_701_pp0_it12[2];
ap_reg_ppstg_tmp_reg_701_pp0_it13[3] <= ap_reg_ppstg_tmp_reg_701_pp0_it12[3];
ap_reg_ppstg_tmp_reg_701_pp0_it13[4] <= ap_reg_ppstg_tmp_reg_701_pp0_it12[4];
ap_reg_ppstg_tmp_reg_701_pp0_it13[5] <= ap_reg_ppstg_tmp_reg_701_pp0_it12[5];
ap_reg_ppstg_tmp_reg_701_pp0_it13[6] <= ap_reg_ppstg_tmp_reg_701_pp0_it12[6];
ap_reg_ppstg_tmp_reg_701_pp0_it13[7] <= ap_reg_ppstg_tmp_reg_701_pp0_it12[7];
ap_reg_ppstg_tmp_reg_701_pp0_it13[8] <= ap_reg_ppstg_tmp_reg_701_pp0_it12[8];
ap_reg_ppstg_tmp_reg_701_pp0_it13[9] <= ap_reg_ppstg_tmp_reg_701_pp0_it12[9];
ap_reg_ppstg_tmp_reg_701_pp0_it13[10] <= ap_reg_ppstg_tmp_reg_701_pp0_it12[10];
        ap_reg_ppstg_tmp_reg_701_pp0_it14[0] <= ap_reg_ppstg_tmp_reg_701_pp0_it13[0];
ap_reg_ppstg_tmp_reg_701_pp0_it14[1] <= ap_reg_ppstg_tmp_reg_701_pp0_it13[1];
ap_reg_ppstg_tmp_reg_701_pp0_it14[2] <= ap_reg_ppstg_tmp_reg_701_pp0_it13[2];
ap_reg_ppstg_tmp_reg_701_pp0_it14[3] <= ap_reg_ppstg_tmp_reg_701_pp0_it13[3];
ap_reg_ppstg_tmp_reg_701_pp0_it14[4] <= ap_reg_ppstg_tmp_reg_701_pp0_it13[4];
ap_reg_ppstg_tmp_reg_701_pp0_it14[5] <= ap_reg_ppstg_tmp_reg_701_pp0_it13[5];
ap_reg_ppstg_tmp_reg_701_pp0_it14[6] <= ap_reg_ppstg_tmp_reg_701_pp0_it13[6];
ap_reg_ppstg_tmp_reg_701_pp0_it14[7] <= ap_reg_ppstg_tmp_reg_701_pp0_it13[7];
ap_reg_ppstg_tmp_reg_701_pp0_it14[8] <= ap_reg_ppstg_tmp_reg_701_pp0_it13[8];
ap_reg_ppstg_tmp_reg_701_pp0_it14[9] <= ap_reg_ppstg_tmp_reg_701_pp0_it13[9];
ap_reg_ppstg_tmp_reg_701_pp0_it14[10] <= ap_reg_ppstg_tmp_reg_701_pp0_it13[10];
        ap_reg_ppstg_tmp_reg_701_pp0_it15[0] <= ap_reg_ppstg_tmp_reg_701_pp0_it14[0];
ap_reg_ppstg_tmp_reg_701_pp0_it15[1] <= ap_reg_ppstg_tmp_reg_701_pp0_it14[1];
ap_reg_ppstg_tmp_reg_701_pp0_it15[2] <= ap_reg_ppstg_tmp_reg_701_pp0_it14[2];
ap_reg_ppstg_tmp_reg_701_pp0_it15[3] <= ap_reg_ppstg_tmp_reg_701_pp0_it14[3];
ap_reg_ppstg_tmp_reg_701_pp0_it15[4] <= ap_reg_ppstg_tmp_reg_701_pp0_it14[4];
ap_reg_ppstg_tmp_reg_701_pp0_it15[5] <= ap_reg_ppstg_tmp_reg_701_pp0_it14[5];
ap_reg_ppstg_tmp_reg_701_pp0_it15[6] <= ap_reg_ppstg_tmp_reg_701_pp0_it14[6];
ap_reg_ppstg_tmp_reg_701_pp0_it15[7] <= ap_reg_ppstg_tmp_reg_701_pp0_it14[7];
ap_reg_ppstg_tmp_reg_701_pp0_it15[8] <= ap_reg_ppstg_tmp_reg_701_pp0_it14[8];
ap_reg_ppstg_tmp_reg_701_pp0_it15[9] <= ap_reg_ppstg_tmp_reg_701_pp0_it14[9];
ap_reg_ppstg_tmp_reg_701_pp0_it15[10] <= ap_reg_ppstg_tmp_reg_701_pp0_it14[10];
        ap_reg_ppstg_tmp_reg_701_pp0_it16[0] <= ap_reg_ppstg_tmp_reg_701_pp0_it15[0];
ap_reg_ppstg_tmp_reg_701_pp0_it16[1] <= ap_reg_ppstg_tmp_reg_701_pp0_it15[1];
ap_reg_ppstg_tmp_reg_701_pp0_it16[2] <= ap_reg_ppstg_tmp_reg_701_pp0_it15[2];
ap_reg_ppstg_tmp_reg_701_pp0_it16[3] <= ap_reg_ppstg_tmp_reg_701_pp0_it15[3];
ap_reg_ppstg_tmp_reg_701_pp0_it16[4] <= ap_reg_ppstg_tmp_reg_701_pp0_it15[4];
ap_reg_ppstg_tmp_reg_701_pp0_it16[5] <= ap_reg_ppstg_tmp_reg_701_pp0_it15[5];
ap_reg_ppstg_tmp_reg_701_pp0_it16[6] <= ap_reg_ppstg_tmp_reg_701_pp0_it15[6];
ap_reg_ppstg_tmp_reg_701_pp0_it16[7] <= ap_reg_ppstg_tmp_reg_701_pp0_it15[7];
ap_reg_ppstg_tmp_reg_701_pp0_it16[8] <= ap_reg_ppstg_tmp_reg_701_pp0_it15[8];
ap_reg_ppstg_tmp_reg_701_pp0_it16[9] <= ap_reg_ppstg_tmp_reg_701_pp0_it15[9];
ap_reg_ppstg_tmp_reg_701_pp0_it16[10] <= ap_reg_ppstg_tmp_reg_701_pp0_it15[10];
        ap_reg_ppstg_tmp_reg_701_pp0_it17[0] <= ap_reg_ppstg_tmp_reg_701_pp0_it16[0];
ap_reg_ppstg_tmp_reg_701_pp0_it17[1] <= ap_reg_ppstg_tmp_reg_701_pp0_it16[1];
ap_reg_ppstg_tmp_reg_701_pp0_it17[2] <= ap_reg_ppstg_tmp_reg_701_pp0_it16[2];
ap_reg_ppstg_tmp_reg_701_pp0_it17[3] <= ap_reg_ppstg_tmp_reg_701_pp0_it16[3];
ap_reg_ppstg_tmp_reg_701_pp0_it17[4] <= ap_reg_ppstg_tmp_reg_701_pp0_it16[4];
ap_reg_ppstg_tmp_reg_701_pp0_it17[5] <= ap_reg_ppstg_tmp_reg_701_pp0_it16[5];
ap_reg_ppstg_tmp_reg_701_pp0_it17[6] <= ap_reg_ppstg_tmp_reg_701_pp0_it16[6];
ap_reg_ppstg_tmp_reg_701_pp0_it17[7] <= ap_reg_ppstg_tmp_reg_701_pp0_it16[7];
ap_reg_ppstg_tmp_reg_701_pp0_it17[8] <= ap_reg_ppstg_tmp_reg_701_pp0_it16[8];
ap_reg_ppstg_tmp_reg_701_pp0_it17[9] <= ap_reg_ppstg_tmp_reg_701_pp0_it16[9];
ap_reg_ppstg_tmp_reg_701_pp0_it17[10] <= ap_reg_ppstg_tmp_reg_701_pp0_it16[10];
        ap_reg_ppstg_tmp_reg_701_pp0_it18[0] <= ap_reg_ppstg_tmp_reg_701_pp0_it17[0];
ap_reg_ppstg_tmp_reg_701_pp0_it18[1] <= ap_reg_ppstg_tmp_reg_701_pp0_it17[1];
ap_reg_ppstg_tmp_reg_701_pp0_it18[2] <= ap_reg_ppstg_tmp_reg_701_pp0_it17[2];
ap_reg_ppstg_tmp_reg_701_pp0_it18[3] <= ap_reg_ppstg_tmp_reg_701_pp0_it17[3];
ap_reg_ppstg_tmp_reg_701_pp0_it18[4] <= ap_reg_ppstg_tmp_reg_701_pp0_it17[4];
ap_reg_ppstg_tmp_reg_701_pp0_it18[5] <= ap_reg_ppstg_tmp_reg_701_pp0_it17[5];
ap_reg_ppstg_tmp_reg_701_pp0_it18[6] <= ap_reg_ppstg_tmp_reg_701_pp0_it17[6];
ap_reg_ppstg_tmp_reg_701_pp0_it18[7] <= ap_reg_ppstg_tmp_reg_701_pp0_it17[7];
ap_reg_ppstg_tmp_reg_701_pp0_it18[8] <= ap_reg_ppstg_tmp_reg_701_pp0_it17[8];
ap_reg_ppstg_tmp_reg_701_pp0_it18[9] <= ap_reg_ppstg_tmp_reg_701_pp0_it17[9];
ap_reg_ppstg_tmp_reg_701_pp0_it18[10] <= ap_reg_ppstg_tmp_reg_701_pp0_it17[10];
        ap_reg_ppstg_tmp_reg_701_pp0_it19[0] <= ap_reg_ppstg_tmp_reg_701_pp0_it18[0];
ap_reg_ppstg_tmp_reg_701_pp0_it19[1] <= ap_reg_ppstg_tmp_reg_701_pp0_it18[1];
ap_reg_ppstg_tmp_reg_701_pp0_it19[2] <= ap_reg_ppstg_tmp_reg_701_pp0_it18[2];
ap_reg_ppstg_tmp_reg_701_pp0_it19[3] <= ap_reg_ppstg_tmp_reg_701_pp0_it18[3];
ap_reg_ppstg_tmp_reg_701_pp0_it19[4] <= ap_reg_ppstg_tmp_reg_701_pp0_it18[4];
ap_reg_ppstg_tmp_reg_701_pp0_it19[5] <= ap_reg_ppstg_tmp_reg_701_pp0_it18[5];
ap_reg_ppstg_tmp_reg_701_pp0_it19[6] <= ap_reg_ppstg_tmp_reg_701_pp0_it18[6];
ap_reg_ppstg_tmp_reg_701_pp0_it19[7] <= ap_reg_ppstg_tmp_reg_701_pp0_it18[7];
ap_reg_ppstg_tmp_reg_701_pp0_it19[8] <= ap_reg_ppstg_tmp_reg_701_pp0_it18[8];
ap_reg_ppstg_tmp_reg_701_pp0_it19[9] <= ap_reg_ppstg_tmp_reg_701_pp0_it18[9];
ap_reg_ppstg_tmp_reg_701_pp0_it19[10] <= ap_reg_ppstg_tmp_reg_701_pp0_it18[10];
        ap_reg_ppstg_tmp_reg_701_pp0_it2[0] <= ap_reg_ppstg_tmp_reg_701_pp0_it1[0];
ap_reg_ppstg_tmp_reg_701_pp0_it2[1] <= ap_reg_ppstg_tmp_reg_701_pp0_it1[1];
ap_reg_ppstg_tmp_reg_701_pp0_it2[2] <= ap_reg_ppstg_tmp_reg_701_pp0_it1[2];
ap_reg_ppstg_tmp_reg_701_pp0_it2[3] <= ap_reg_ppstg_tmp_reg_701_pp0_it1[3];
ap_reg_ppstg_tmp_reg_701_pp0_it2[4] <= ap_reg_ppstg_tmp_reg_701_pp0_it1[4];
ap_reg_ppstg_tmp_reg_701_pp0_it2[5] <= ap_reg_ppstg_tmp_reg_701_pp0_it1[5];
ap_reg_ppstg_tmp_reg_701_pp0_it2[6] <= ap_reg_ppstg_tmp_reg_701_pp0_it1[6];
ap_reg_ppstg_tmp_reg_701_pp0_it2[7] <= ap_reg_ppstg_tmp_reg_701_pp0_it1[7];
ap_reg_ppstg_tmp_reg_701_pp0_it2[8] <= ap_reg_ppstg_tmp_reg_701_pp0_it1[8];
ap_reg_ppstg_tmp_reg_701_pp0_it2[9] <= ap_reg_ppstg_tmp_reg_701_pp0_it1[9];
ap_reg_ppstg_tmp_reg_701_pp0_it2[10] <= ap_reg_ppstg_tmp_reg_701_pp0_it1[10];
        ap_reg_ppstg_tmp_reg_701_pp0_it20[0] <= ap_reg_ppstg_tmp_reg_701_pp0_it19[0];
ap_reg_ppstg_tmp_reg_701_pp0_it20[1] <= ap_reg_ppstg_tmp_reg_701_pp0_it19[1];
ap_reg_ppstg_tmp_reg_701_pp0_it20[2] <= ap_reg_ppstg_tmp_reg_701_pp0_it19[2];
ap_reg_ppstg_tmp_reg_701_pp0_it20[3] <= ap_reg_ppstg_tmp_reg_701_pp0_it19[3];
ap_reg_ppstg_tmp_reg_701_pp0_it20[4] <= ap_reg_ppstg_tmp_reg_701_pp0_it19[4];
ap_reg_ppstg_tmp_reg_701_pp0_it20[5] <= ap_reg_ppstg_tmp_reg_701_pp0_it19[5];
ap_reg_ppstg_tmp_reg_701_pp0_it20[6] <= ap_reg_ppstg_tmp_reg_701_pp0_it19[6];
ap_reg_ppstg_tmp_reg_701_pp0_it20[7] <= ap_reg_ppstg_tmp_reg_701_pp0_it19[7];
ap_reg_ppstg_tmp_reg_701_pp0_it20[8] <= ap_reg_ppstg_tmp_reg_701_pp0_it19[8];
ap_reg_ppstg_tmp_reg_701_pp0_it20[9] <= ap_reg_ppstg_tmp_reg_701_pp0_it19[9];
ap_reg_ppstg_tmp_reg_701_pp0_it20[10] <= ap_reg_ppstg_tmp_reg_701_pp0_it19[10];
        ap_reg_ppstg_tmp_reg_701_pp0_it21[0] <= ap_reg_ppstg_tmp_reg_701_pp0_it20[0];
ap_reg_ppstg_tmp_reg_701_pp0_it21[1] <= ap_reg_ppstg_tmp_reg_701_pp0_it20[1];
ap_reg_ppstg_tmp_reg_701_pp0_it21[2] <= ap_reg_ppstg_tmp_reg_701_pp0_it20[2];
ap_reg_ppstg_tmp_reg_701_pp0_it21[3] <= ap_reg_ppstg_tmp_reg_701_pp0_it20[3];
ap_reg_ppstg_tmp_reg_701_pp0_it21[4] <= ap_reg_ppstg_tmp_reg_701_pp0_it20[4];
ap_reg_ppstg_tmp_reg_701_pp0_it21[5] <= ap_reg_ppstg_tmp_reg_701_pp0_it20[5];
ap_reg_ppstg_tmp_reg_701_pp0_it21[6] <= ap_reg_ppstg_tmp_reg_701_pp0_it20[6];
ap_reg_ppstg_tmp_reg_701_pp0_it21[7] <= ap_reg_ppstg_tmp_reg_701_pp0_it20[7];
ap_reg_ppstg_tmp_reg_701_pp0_it21[8] <= ap_reg_ppstg_tmp_reg_701_pp0_it20[8];
ap_reg_ppstg_tmp_reg_701_pp0_it21[9] <= ap_reg_ppstg_tmp_reg_701_pp0_it20[9];
ap_reg_ppstg_tmp_reg_701_pp0_it21[10] <= ap_reg_ppstg_tmp_reg_701_pp0_it20[10];
        ap_reg_ppstg_tmp_reg_701_pp0_it22[0] <= ap_reg_ppstg_tmp_reg_701_pp0_it21[0];
ap_reg_ppstg_tmp_reg_701_pp0_it22[1] <= ap_reg_ppstg_tmp_reg_701_pp0_it21[1];
ap_reg_ppstg_tmp_reg_701_pp0_it22[2] <= ap_reg_ppstg_tmp_reg_701_pp0_it21[2];
ap_reg_ppstg_tmp_reg_701_pp0_it22[3] <= ap_reg_ppstg_tmp_reg_701_pp0_it21[3];
ap_reg_ppstg_tmp_reg_701_pp0_it22[4] <= ap_reg_ppstg_tmp_reg_701_pp0_it21[4];
ap_reg_ppstg_tmp_reg_701_pp0_it22[5] <= ap_reg_ppstg_tmp_reg_701_pp0_it21[5];
ap_reg_ppstg_tmp_reg_701_pp0_it22[6] <= ap_reg_ppstg_tmp_reg_701_pp0_it21[6];
ap_reg_ppstg_tmp_reg_701_pp0_it22[7] <= ap_reg_ppstg_tmp_reg_701_pp0_it21[7];
ap_reg_ppstg_tmp_reg_701_pp0_it22[8] <= ap_reg_ppstg_tmp_reg_701_pp0_it21[8];
ap_reg_ppstg_tmp_reg_701_pp0_it22[9] <= ap_reg_ppstg_tmp_reg_701_pp0_it21[9];
ap_reg_ppstg_tmp_reg_701_pp0_it22[10] <= ap_reg_ppstg_tmp_reg_701_pp0_it21[10];
        ap_reg_ppstg_tmp_reg_701_pp0_it23[0] <= ap_reg_ppstg_tmp_reg_701_pp0_it22[0];
ap_reg_ppstg_tmp_reg_701_pp0_it23[1] <= ap_reg_ppstg_tmp_reg_701_pp0_it22[1];
ap_reg_ppstg_tmp_reg_701_pp0_it23[2] <= ap_reg_ppstg_tmp_reg_701_pp0_it22[2];
ap_reg_ppstg_tmp_reg_701_pp0_it23[3] <= ap_reg_ppstg_tmp_reg_701_pp0_it22[3];
ap_reg_ppstg_tmp_reg_701_pp0_it23[4] <= ap_reg_ppstg_tmp_reg_701_pp0_it22[4];
ap_reg_ppstg_tmp_reg_701_pp0_it23[5] <= ap_reg_ppstg_tmp_reg_701_pp0_it22[5];
ap_reg_ppstg_tmp_reg_701_pp0_it23[6] <= ap_reg_ppstg_tmp_reg_701_pp0_it22[6];
ap_reg_ppstg_tmp_reg_701_pp0_it23[7] <= ap_reg_ppstg_tmp_reg_701_pp0_it22[7];
ap_reg_ppstg_tmp_reg_701_pp0_it23[8] <= ap_reg_ppstg_tmp_reg_701_pp0_it22[8];
ap_reg_ppstg_tmp_reg_701_pp0_it23[9] <= ap_reg_ppstg_tmp_reg_701_pp0_it22[9];
ap_reg_ppstg_tmp_reg_701_pp0_it23[10] <= ap_reg_ppstg_tmp_reg_701_pp0_it22[10];
        ap_reg_ppstg_tmp_reg_701_pp0_it24[0] <= ap_reg_ppstg_tmp_reg_701_pp0_it23[0];
ap_reg_ppstg_tmp_reg_701_pp0_it24[1] <= ap_reg_ppstg_tmp_reg_701_pp0_it23[1];
ap_reg_ppstg_tmp_reg_701_pp0_it24[2] <= ap_reg_ppstg_tmp_reg_701_pp0_it23[2];
ap_reg_ppstg_tmp_reg_701_pp0_it24[3] <= ap_reg_ppstg_tmp_reg_701_pp0_it23[3];
ap_reg_ppstg_tmp_reg_701_pp0_it24[4] <= ap_reg_ppstg_tmp_reg_701_pp0_it23[4];
ap_reg_ppstg_tmp_reg_701_pp0_it24[5] <= ap_reg_ppstg_tmp_reg_701_pp0_it23[5];
ap_reg_ppstg_tmp_reg_701_pp0_it24[6] <= ap_reg_ppstg_tmp_reg_701_pp0_it23[6];
ap_reg_ppstg_tmp_reg_701_pp0_it24[7] <= ap_reg_ppstg_tmp_reg_701_pp0_it23[7];
ap_reg_ppstg_tmp_reg_701_pp0_it24[8] <= ap_reg_ppstg_tmp_reg_701_pp0_it23[8];
ap_reg_ppstg_tmp_reg_701_pp0_it24[9] <= ap_reg_ppstg_tmp_reg_701_pp0_it23[9];
ap_reg_ppstg_tmp_reg_701_pp0_it24[10] <= ap_reg_ppstg_tmp_reg_701_pp0_it23[10];
        ap_reg_ppstg_tmp_reg_701_pp0_it25[0] <= ap_reg_ppstg_tmp_reg_701_pp0_it24[0];
ap_reg_ppstg_tmp_reg_701_pp0_it25[1] <= ap_reg_ppstg_tmp_reg_701_pp0_it24[1];
ap_reg_ppstg_tmp_reg_701_pp0_it25[2] <= ap_reg_ppstg_tmp_reg_701_pp0_it24[2];
ap_reg_ppstg_tmp_reg_701_pp0_it25[3] <= ap_reg_ppstg_tmp_reg_701_pp0_it24[3];
ap_reg_ppstg_tmp_reg_701_pp0_it25[4] <= ap_reg_ppstg_tmp_reg_701_pp0_it24[4];
ap_reg_ppstg_tmp_reg_701_pp0_it25[5] <= ap_reg_ppstg_tmp_reg_701_pp0_it24[5];
ap_reg_ppstg_tmp_reg_701_pp0_it25[6] <= ap_reg_ppstg_tmp_reg_701_pp0_it24[6];
ap_reg_ppstg_tmp_reg_701_pp0_it25[7] <= ap_reg_ppstg_tmp_reg_701_pp0_it24[7];
ap_reg_ppstg_tmp_reg_701_pp0_it25[8] <= ap_reg_ppstg_tmp_reg_701_pp0_it24[8];
ap_reg_ppstg_tmp_reg_701_pp0_it25[9] <= ap_reg_ppstg_tmp_reg_701_pp0_it24[9];
ap_reg_ppstg_tmp_reg_701_pp0_it25[10] <= ap_reg_ppstg_tmp_reg_701_pp0_it24[10];
        ap_reg_ppstg_tmp_reg_701_pp0_it26[0] <= ap_reg_ppstg_tmp_reg_701_pp0_it25[0];
ap_reg_ppstg_tmp_reg_701_pp0_it26[1] <= ap_reg_ppstg_tmp_reg_701_pp0_it25[1];
ap_reg_ppstg_tmp_reg_701_pp0_it26[2] <= ap_reg_ppstg_tmp_reg_701_pp0_it25[2];
ap_reg_ppstg_tmp_reg_701_pp0_it26[3] <= ap_reg_ppstg_tmp_reg_701_pp0_it25[3];
ap_reg_ppstg_tmp_reg_701_pp0_it26[4] <= ap_reg_ppstg_tmp_reg_701_pp0_it25[4];
ap_reg_ppstg_tmp_reg_701_pp0_it26[5] <= ap_reg_ppstg_tmp_reg_701_pp0_it25[5];
ap_reg_ppstg_tmp_reg_701_pp0_it26[6] <= ap_reg_ppstg_tmp_reg_701_pp0_it25[6];
ap_reg_ppstg_tmp_reg_701_pp0_it26[7] <= ap_reg_ppstg_tmp_reg_701_pp0_it25[7];
ap_reg_ppstg_tmp_reg_701_pp0_it26[8] <= ap_reg_ppstg_tmp_reg_701_pp0_it25[8];
ap_reg_ppstg_tmp_reg_701_pp0_it26[9] <= ap_reg_ppstg_tmp_reg_701_pp0_it25[9];
ap_reg_ppstg_tmp_reg_701_pp0_it26[10] <= ap_reg_ppstg_tmp_reg_701_pp0_it25[10];
        ap_reg_ppstg_tmp_reg_701_pp0_it27[0] <= ap_reg_ppstg_tmp_reg_701_pp0_it26[0];
ap_reg_ppstg_tmp_reg_701_pp0_it27[1] <= ap_reg_ppstg_tmp_reg_701_pp0_it26[1];
ap_reg_ppstg_tmp_reg_701_pp0_it27[2] <= ap_reg_ppstg_tmp_reg_701_pp0_it26[2];
ap_reg_ppstg_tmp_reg_701_pp0_it27[3] <= ap_reg_ppstg_tmp_reg_701_pp0_it26[3];
ap_reg_ppstg_tmp_reg_701_pp0_it27[4] <= ap_reg_ppstg_tmp_reg_701_pp0_it26[4];
ap_reg_ppstg_tmp_reg_701_pp0_it27[5] <= ap_reg_ppstg_tmp_reg_701_pp0_it26[5];
ap_reg_ppstg_tmp_reg_701_pp0_it27[6] <= ap_reg_ppstg_tmp_reg_701_pp0_it26[6];
ap_reg_ppstg_tmp_reg_701_pp0_it27[7] <= ap_reg_ppstg_tmp_reg_701_pp0_it26[7];
ap_reg_ppstg_tmp_reg_701_pp0_it27[8] <= ap_reg_ppstg_tmp_reg_701_pp0_it26[8];
ap_reg_ppstg_tmp_reg_701_pp0_it27[9] <= ap_reg_ppstg_tmp_reg_701_pp0_it26[9];
ap_reg_ppstg_tmp_reg_701_pp0_it27[10] <= ap_reg_ppstg_tmp_reg_701_pp0_it26[10];
        ap_reg_ppstg_tmp_reg_701_pp0_it28[0] <= ap_reg_ppstg_tmp_reg_701_pp0_it27[0];
ap_reg_ppstg_tmp_reg_701_pp0_it28[1] <= ap_reg_ppstg_tmp_reg_701_pp0_it27[1];
ap_reg_ppstg_tmp_reg_701_pp0_it28[2] <= ap_reg_ppstg_tmp_reg_701_pp0_it27[2];
ap_reg_ppstg_tmp_reg_701_pp0_it28[3] <= ap_reg_ppstg_tmp_reg_701_pp0_it27[3];
ap_reg_ppstg_tmp_reg_701_pp0_it28[4] <= ap_reg_ppstg_tmp_reg_701_pp0_it27[4];
ap_reg_ppstg_tmp_reg_701_pp0_it28[5] <= ap_reg_ppstg_tmp_reg_701_pp0_it27[5];
ap_reg_ppstg_tmp_reg_701_pp0_it28[6] <= ap_reg_ppstg_tmp_reg_701_pp0_it27[6];
ap_reg_ppstg_tmp_reg_701_pp0_it28[7] <= ap_reg_ppstg_tmp_reg_701_pp0_it27[7];
ap_reg_ppstg_tmp_reg_701_pp0_it28[8] <= ap_reg_ppstg_tmp_reg_701_pp0_it27[8];
ap_reg_ppstg_tmp_reg_701_pp0_it28[9] <= ap_reg_ppstg_tmp_reg_701_pp0_it27[9];
ap_reg_ppstg_tmp_reg_701_pp0_it28[10] <= ap_reg_ppstg_tmp_reg_701_pp0_it27[10];
        ap_reg_ppstg_tmp_reg_701_pp0_it29[0] <= ap_reg_ppstg_tmp_reg_701_pp0_it28[0];
ap_reg_ppstg_tmp_reg_701_pp0_it29[1] <= ap_reg_ppstg_tmp_reg_701_pp0_it28[1];
ap_reg_ppstg_tmp_reg_701_pp0_it29[2] <= ap_reg_ppstg_tmp_reg_701_pp0_it28[2];
ap_reg_ppstg_tmp_reg_701_pp0_it29[3] <= ap_reg_ppstg_tmp_reg_701_pp0_it28[3];
ap_reg_ppstg_tmp_reg_701_pp0_it29[4] <= ap_reg_ppstg_tmp_reg_701_pp0_it28[4];
ap_reg_ppstg_tmp_reg_701_pp0_it29[5] <= ap_reg_ppstg_tmp_reg_701_pp0_it28[5];
ap_reg_ppstg_tmp_reg_701_pp0_it29[6] <= ap_reg_ppstg_tmp_reg_701_pp0_it28[6];
ap_reg_ppstg_tmp_reg_701_pp0_it29[7] <= ap_reg_ppstg_tmp_reg_701_pp0_it28[7];
ap_reg_ppstg_tmp_reg_701_pp0_it29[8] <= ap_reg_ppstg_tmp_reg_701_pp0_it28[8];
ap_reg_ppstg_tmp_reg_701_pp0_it29[9] <= ap_reg_ppstg_tmp_reg_701_pp0_it28[9];
ap_reg_ppstg_tmp_reg_701_pp0_it29[10] <= ap_reg_ppstg_tmp_reg_701_pp0_it28[10];
        ap_reg_ppstg_tmp_reg_701_pp0_it3[0] <= ap_reg_ppstg_tmp_reg_701_pp0_it2[0];
ap_reg_ppstg_tmp_reg_701_pp0_it3[1] <= ap_reg_ppstg_tmp_reg_701_pp0_it2[1];
ap_reg_ppstg_tmp_reg_701_pp0_it3[2] <= ap_reg_ppstg_tmp_reg_701_pp0_it2[2];
ap_reg_ppstg_tmp_reg_701_pp0_it3[3] <= ap_reg_ppstg_tmp_reg_701_pp0_it2[3];
ap_reg_ppstg_tmp_reg_701_pp0_it3[4] <= ap_reg_ppstg_tmp_reg_701_pp0_it2[4];
ap_reg_ppstg_tmp_reg_701_pp0_it3[5] <= ap_reg_ppstg_tmp_reg_701_pp0_it2[5];
ap_reg_ppstg_tmp_reg_701_pp0_it3[6] <= ap_reg_ppstg_tmp_reg_701_pp0_it2[6];
ap_reg_ppstg_tmp_reg_701_pp0_it3[7] <= ap_reg_ppstg_tmp_reg_701_pp0_it2[7];
ap_reg_ppstg_tmp_reg_701_pp0_it3[8] <= ap_reg_ppstg_tmp_reg_701_pp0_it2[8];
ap_reg_ppstg_tmp_reg_701_pp0_it3[9] <= ap_reg_ppstg_tmp_reg_701_pp0_it2[9];
ap_reg_ppstg_tmp_reg_701_pp0_it3[10] <= ap_reg_ppstg_tmp_reg_701_pp0_it2[10];
        ap_reg_ppstg_tmp_reg_701_pp0_it30[0] <= ap_reg_ppstg_tmp_reg_701_pp0_it29[0];
ap_reg_ppstg_tmp_reg_701_pp0_it30[1] <= ap_reg_ppstg_tmp_reg_701_pp0_it29[1];
ap_reg_ppstg_tmp_reg_701_pp0_it30[2] <= ap_reg_ppstg_tmp_reg_701_pp0_it29[2];
ap_reg_ppstg_tmp_reg_701_pp0_it30[3] <= ap_reg_ppstg_tmp_reg_701_pp0_it29[3];
ap_reg_ppstg_tmp_reg_701_pp0_it30[4] <= ap_reg_ppstg_tmp_reg_701_pp0_it29[4];
ap_reg_ppstg_tmp_reg_701_pp0_it30[5] <= ap_reg_ppstg_tmp_reg_701_pp0_it29[5];
ap_reg_ppstg_tmp_reg_701_pp0_it30[6] <= ap_reg_ppstg_tmp_reg_701_pp0_it29[6];
ap_reg_ppstg_tmp_reg_701_pp0_it30[7] <= ap_reg_ppstg_tmp_reg_701_pp0_it29[7];
ap_reg_ppstg_tmp_reg_701_pp0_it30[8] <= ap_reg_ppstg_tmp_reg_701_pp0_it29[8];
ap_reg_ppstg_tmp_reg_701_pp0_it30[9] <= ap_reg_ppstg_tmp_reg_701_pp0_it29[9];
ap_reg_ppstg_tmp_reg_701_pp0_it30[10] <= ap_reg_ppstg_tmp_reg_701_pp0_it29[10];
        ap_reg_ppstg_tmp_reg_701_pp0_it31[0] <= ap_reg_ppstg_tmp_reg_701_pp0_it30[0];
ap_reg_ppstg_tmp_reg_701_pp0_it31[1] <= ap_reg_ppstg_tmp_reg_701_pp0_it30[1];
ap_reg_ppstg_tmp_reg_701_pp0_it31[2] <= ap_reg_ppstg_tmp_reg_701_pp0_it30[2];
ap_reg_ppstg_tmp_reg_701_pp0_it31[3] <= ap_reg_ppstg_tmp_reg_701_pp0_it30[3];
ap_reg_ppstg_tmp_reg_701_pp0_it31[4] <= ap_reg_ppstg_tmp_reg_701_pp0_it30[4];
ap_reg_ppstg_tmp_reg_701_pp0_it31[5] <= ap_reg_ppstg_tmp_reg_701_pp0_it30[5];
ap_reg_ppstg_tmp_reg_701_pp0_it31[6] <= ap_reg_ppstg_tmp_reg_701_pp0_it30[6];
ap_reg_ppstg_tmp_reg_701_pp0_it31[7] <= ap_reg_ppstg_tmp_reg_701_pp0_it30[7];
ap_reg_ppstg_tmp_reg_701_pp0_it31[8] <= ap_reg_ppstg_tmp_reg_701_pp0_it30[8];
ap_reg_ppstg_tmp_reg_701_pp0_it31[9] <= ap_reg_ppstg_tmp_reg_701_pp0_it30[9];
ap_reg_ppstg_tmp_reg_701_pp0_it31[10] <= ap_reg_ppstg_tmp_reg_701_pp0_it30[10];
        ap_reg_ppstg_tmp_reg_701_pp0_it32[0] <= ap_reg_ppstg_tmp_reg_701_pp0_it31[0];
ap_reg_ppstg_tmp_reg_701_pp0_it32[1] <= ap_reg_ppstg_tmp_reg_701_pp0_it31[1];
ap_reg_ppstg_tmp_reg_701_pp0_it32[2] <= ap_reg_ppstg_tmp_reg_701_pp0_it31[2];
ap_reg_ppstg_tmp_reg_701_pp0_it32[3] <= ap_reg_ppstg_tmp_reg_701_pp0_it31[3];
ap_reg_ppstg_tmp_reg_701_pp0_it32[4] <= ap_reg_ppstg_tmp_reg_701_pp0_it31[4];
ap_reg_ppstg_tmp_reg_701_pp0_it32[5] <= ap_reg_ppstg_tmp_reg_701_pp0_it31[5];
ap_reg_ppstg_tmp_reg_701_pp0_it32[6] <= ap_reg_ppstg_tmp_reg_701_pp0_it31[6];
ap_reg_ppstg_tmp_reg_701_pp0_it32[7] <= ap_reg_ppstg_tmp_reg_701_pp0_it31[7];
ap_reg_ppstg_tmp_reg_701_pp0_it32[8] <= ap_reg_ppstg_tmp_reg_701_pp0_it31[8];
ap_reg_ppstg_tmp_reg_701_pp0_it32[9] <= ap_reg_ppstg_tmp_reg_701_pp0_it31[9];
ap_reg_ppstg_tmp_reg_701_pp0_it32[10] <= ap_reg_ppstg_tmp_reg_701_pp0_it31[10];
        ap_reg_ppstg_tmp_reg_701_pp0_it33[0] <= ap_reg_ppstg_tmp_reg_701_pp0_it32[0];
ap_reg_ppstg_tmp_reg_701_pp0_it33[1] <= ap_reg_ppstg_tmp_reg_701_pp0_it32[1];
ap_reg_ppstg_tmp_reg_701_pp0_it33[2] <= ap_reg_ppstg_tmp_reg_701_pp0_it32[2];
ap_reg_ppstg_tmp_reg_701_pp0_it33[3] <= ap_reg_ppstg_tmp_reg_701_pp0_it32[3];
ap_reg_ppstg_tmp_reg_701_pp0_it33[4] <= ap_reg_ppstg_tmp_reg_701_pp0_it32[4];
ap_reg_ppstg_tmp_reg_701_pp0_it33[5] <= ap_reg_ppstg_tmp_reg_701_pp0_it32[5];
ap_reg_ppstg_tmp_reg_701_pp0_it33[6] <= ap_reg_ppstg_tmp_reg_701_pp0_it32[6];
ap_reg_ppstg_tmp_reg_701_pp0_it33[7] <= ap_reg_ppstg_tmp_reg_701_pp0_it32[7];
ap_reg_ppstg_tmp_reg_701_pp0_it33[8] <= ap_reg_ppstg_tmp_reg_701_pp0_it32[8];
ap_reg_ppstg_tmp_reg_701_pp0_it33[9] <= ap_reg_ppstg_tmp_reg_701_pp0_it32[9];
ap_reg_ppstg_tmp_reg_701_pp0_it33[10] <= ap_reg_ppstg_tmp_reg_701_pp0_it32[10];
        ap_reg_ppstg_tmp_reg_701_pp0_it34[0] <= ap_reg_ppstg_tmp_reg_701_pp0_it33[0];
ap_reg_ppstg_tmp_reg_701_pp0_it34[1] <= ap_reg_ppstg_tmp_reg_701_pp0_it33[1];
ap_reg_ppstg_tmp_reg_701_pp0_it34[2] <= ap_reg_ppstg_tmp_reg_701_pp0_it33[2];
ap_reg_ppstg_tmp_reg_701_pp0_it34[3] <= ap_reg_ppstg_tmp_reg_701_pp0_it33[3];
ap_reg_ppstg_tmp_reg_701_pp0_it34[4] <= ap_reg_ppstg_tmp_reg_701_pp0_it33[4];
ap_reg_ppstg_tmp_reg_701_pp0_it34[5] <= ap_reg_ppstg_tmp_reg_701_pp0_it33[5];
ap_reg_ppstg_tmp_reg_701_pp0_it34[6] <= ap_reg_ppstg_tmp_reg_701_pp0_it33[6];
ap_reg_ppstg_tmp_reg_701_pp0_it34[7] <= ap_reg_ppstg_tmp_reg_701_pp0_it33[7];
ap_reg_ppstg_tmp_reg_701_pp0_it34[8] <= ap_reg_ppstg_tmp_reg_701_pp0_it33[8];
ap_reg_ppstg_tmp_reg_701_pp0_it34[9] <= ap_reg_ppstg_tmp_reg_701_pp0_it33[9];
ap_reg_ppstg_tmp_reg_701_pp0_it34[10] <= ap_reg_ppstg_tmp_reg_701_pp0_it33[10];
        ap_reg_ppstg_tmp_reg_701_pp0_it35[0] <= ap_reg_ppstg_tmp_reg_701_pp0_it34[0];
ap_reg_ppstg_tmp_reg_701_pp0_it35[1] <= ap_reg_ppstg_tmp_reg_701_pp0_it34[1];
ap_reg_ppstg_tmp_reg_701_pp0_it35[2] <= ap_reg_ppstg_tmp_reg_701_pp0_it34[2];
ap_reg_ppstg_tmp_reg_701_pp0_it35[3] <= ap_reg_ppstg_tmp_reg_701_pp0_it34[3];
ap_reg_ppstg_tmp_reg_701_pp0_it35[4] <= ap_reg_ppstg_tmp_reg_701_pp0_it34[4];
ap_reg_ppstg_tmp_reg_701_pp0_it35[5] <= ap_reg_ppstg_tmp_reg_701_pp0_it34[5];
ap_reg_ppstg_tmp_reg_701_pp0_it35[6] <= ap_reg_ppstg_tmp_reg_701_pp0_it34[6];
ap_reg_ppstg_tmp_reg_701_pp0_it35[7] <= ap_reg_ppstg_tmp_reg_701_pp0_it34[7];
ap_reg_ppstg_tmp_reg_701_pp0_it35[8] <= ap_reg_ppstg_tmp_reg_701_pp0_it34[8];
ap_reg_ppstg_tmp_reg_701_pp0_it35[9] <= ap_reg_ppstg_tmp_reg_701_pp0_it34[9];
ap_reg_ppstg_tmp_reg_701_pp0_it35[10] <= ap_reg_ppstg_tmp_reg_701_pp0_it34[10];
        ap_reg_ppstg_tmp_reg_701_pp0_it4[0] <= ap_reg_ppstg_tmp_reg_701_pp0_it3[0];
ap_reg_ppstg_tmp_reg_701_pp0_it4[1] <= ap_reg_ppstg_tmp_reg_701_pp0_it3[1];
ap_reg_ppstg_tmp_reg_701_pp0_it4[2] <= ap_reg_ppstg_tmp_reg_701_pp0_it3[2];
ap_reg_ppstg_tmp_reg_701_pp0_it4[3] <= ap_reg_ppstg_tmp_reg_701_pp0_it3[3];
ap_reg_ppstg_tmp_reg_701_pp0_it4[4] <= ap_reg_ppstg_tmp_reg_701_pp0_it3[4];
ap_reg_ppstg_tmp_reg_701_pp0_it4[5] <= ap_reg_ppstg_tmp_reg_701_pp0_it3[5];
ap_reg_ppstg_tmp_reg_701_pp0_it4[6] <= ap_reg_ppstg_tmp_reg_701_pp0_it3[6];
ap_reg_ppstg_tmp_reg_701_pp0_it4[7] <= ap_reg_ppstg_tmp_reg_701_pp0_it3[7];
ap_reg_ppstg_tmp_reg_701_pp0_it4[8] <= ap_reg_ppstg_tmp_reg_701_pp0_it3[8];
ap_reg_ppstg_tmp_reg_701_pp0_it4[9] <= ap_reg_ppstg_tmp_reg_701_pp0_it3[9];
ap_reg_ppstg_tmp_reg_701_pp0_it4[10] <= ap_reg_ppstg_tmp_reg_701_pp0_it3[10];
        ap_reg_ppstg_tmp_reg_701_pp0_it5[0] <= ap_reg_ppstg_tmp_reg_701_pp0_it4[0];
ap_reg_ppstg_tmp_reg_701_pp0_it5[1] <= ap_reg_ppstg_tmp_reg_701_pp0_it4[1];
ap_reg_ppstg_tmp_reg_701_pp0_it5[2] <= ap_reg_ppstg_tmp_reg_701_pp0_it4[2];
ap_reg_ppstg_tmp_reg_701_pp0_it5[3] <= ap_reg_ppstg_tmp_reg_701_pp0_it4[3];
ap_reg_ppstg_tmp_reg_701_pp0_it5[4] <= ap_reg_ppstg_tmp_reg_701_pp0_it4[4];
ap_reg_ppstg_tmp_reg_701_pp0_it5[5] <= ap_reg_ppstg_tmp_reg_701_pp0_it4[5];
ap_reg_ppstg_tmp_reg_701_pp0_it5[6] <= ap_reg_ppstg_tmp_reg_701_pp0_it4[6];
ap_reg_ppstg_tmp_reg_701_pp0_it5[7] <= ap_reg_ppstg_tmp_reg_701_pp0_it4[7];
ap_reg_ppstg_tmp_reg_701_pp0_it5[8] <= ap_reg_ppstg_tmp_reg_701_pp0_it4[8];
ap_reg_ppstg_tmp_reg_701_pp0_it5[9] <= ap_reg_ppstg_tmp_reg_701_pp0_it4[9];
ap_reg_ppstg_tmp_reg_701_pp0_it5[10] <= ap_reg_ppstg_tmp_reg_701_pp0_it4[10];
        ap_reg_ppstg_tmp_reg_701_pp0_it6[0] <= ap_reg_ppstg_tmp_reg_701_pp0_it5[0];
ap_reg_ppstg_tmp_reg_701_pp0_it6[1] <= ap_reg_ppstg_tmp_reg_701_pp0_it5[1];
ap_reg_ppstg_tmp_reg_701_pp0_it6[2] <= ap_reg_ppstg_tmp_reg_701_pp0_it5[2];
ap_reg_ppstg_tmp_reg_701_pp0_it6[3] <= ap_reg_ppstg_tmp_reg_701_pp0_it5[3];
ap_reg_ppstg_tmp_reg_701_pp0_it6[4] <= ap_reg_ppstg_tmp_reg_701_pp0_it5[4];
ap_reg_ppstg_tmp_reg_701_pp0_it6[5] <= ap_reg_ppstg_tmp_reg_701_pp0_it5[5];
ap_reg_ppstg_tmp_reg_701_pp0_it6[6] <= ap_reg_ppstg_tmp_reg_701_pp0_it5[6];
ap_reg_ppstg_tmp_reg_701_pp0_it6[7] <= ap_reg_ppstg_tmp_reg_701_pp0_it5[7];
ap_reg_ppstg_tmp_reg_701_pp0_it6[8] <= ap_reg_ppstg_tmp_reg_701_pp0_it5[8];
ap_reg_ppstg_tmp_reg_701_pp0_it6[9] <= ap_reg_ppstg_tmp_reg_701_pp0_it5[9];
ap_reg_ppstg_tmp_reg_701_pp0_it6[10] <= ap_reg_ppstg_tmp_reg_701_pp0_it5[10];
        ap_reg_ppstg_tmp_reg_701_pp0_it7[0] <= ap_reg_ppstg_tmp_reg_701_pp0_it6[0];
ap_reg_ppstg_tmp_reg_701_pp0_it7[1] <= ap_reg_ppstg_tmp_reg_701_pp0_it6[1];
ap_reg_ppstg_tmp_reg_701_pp0_it7[2] <= ap_reg_ppstg_tmp_reg_701_pp0_it6[2];
ap_reg_ppstg_tmp_reg_701_pp0_it7[3] <= ap_reg_ppstg_tmp_reg_701_pp0_it6[3];
ap_reg_ppstg_tmp_reg_701_pp0_it7[4] <= ap_reg_ppstg_tmp_reg_701_pp0_it6[4];
ap_reg_ppstg_tmp_reg_701_pp0_it7[5] <= ap_reg_ppstg_tmp_reg_701_pp0_it6[5];
ap_reg_ppstg_tmp_reg_701_pp0_it7[6] <= ap_reg_ppstg_tmp_reg_701_pp0_it6[6];
ap_reg_ppstg_tmp_reg_701_pp0_it7[7] <= ap_reg_ppstg_tmp_reg_701_pp0_it6[7];
ap_reg_ppstg_tmp_reg_701_pp0_it7[8] <= ap_reg_ppstg_tmp_reg_701_pp0_it6[8];
ap_reg_ppstg_tmp_reg_701_pp0_it7[9] <= ap_reg_ppstg_tmp_reg_701_pp0_it6[9];
ap_reg_ppstg_tmp_reg_701_pp0_it7[10] <= ap_reg_ppstg_tmp_reg_701_pp0_it6[10];
        ap_reg_ppstg_tmp_reg_701_pp0_it8[0] <= ap_reg_ppstg_tmp_reg_701_pp0_it7[0];
ap_reg_ppstg_tmp_reg_701_pp0_it8[1] <= ap_reg_ppstg_tmp_reg_701_pp0_it7[1];
ap_reg_ppstg_tmp_reg_701_pp0_it8[2] <= ap_reg_ppstg_tmp_reg_701_pp0_it7[2];
ap_reg_ppstg_tmp_reg_701_pp0_it8[3] <= ap_reg_ppstg_tmp_reg_701_pp0_it7[3];
ap_reg_ppstg_tmp_reg_701_pp0_it8[4] <= ap_reg_ppstg_tmp_reg_701_pp0_it7[4];
ap_reg_ppstg_tmp_reg_701_pp0_it8[5] <= ap_reg_ppstg_tmp_reg_701_pp0_it7[5];
ap_reg_ppstg_tmp_reg_701_pp0_it8[6] <= ap_reg_ppstg_tmp_reg_701_pp0_it7[6];
ap_reg_ppstg_tmp_reg_701_pp0_it8[7] <= ap_reg_ppstg_tmp_reg_701_pp0_it7[7];
ap_reg_ppstg_tmp_reg_701_pp0_it8[8] <= ap_reg_ppstg_tmp_reg_701_pp0_it7[8];
ap_reg_ppstg_tmp_reg_701_pp0_it8[9] <= ap_reg_ppstg_tmp_reg_701_pp0_it7[9];
ap_reg_ppstg_tmp_reg_701_pp0_it8[10] <= ap_reg_ppstg_tmp_reg_701_pp0_it7[10];
        ap_reg_ppstg_tmp_reg_701_pp0_it9[0] <= ap_reg_ppstg_tmp_reg_701_pp0_it8[0];
ap_reg_ppstg_tmp_reg_701_pp0_it9[1] <= ap_reg_ppstg_tmp_reg_701_pp0_it8[1];
ap_reg_ppstg_tmp_reg_701_pp0_it9[2] <= ap_reg_ppstg_tmp_reg_701_pp0_it8[2];
ap_reg_ppstg_tmp_reg_701_pp0_it9[3] <= ap_reg_ppstg_tmp_reg_701_pp0_it8[3];
ap_reg_ppstg_tmp_reg_701_pp0_it9[4] <= ap_reg_ppstg_tmp_reg_701_pp0_it8[4];
ap_reg_ppstg_tmp_reg_701_pp0_it9[5] <= ap_reg_ppstg_tmp_reg_701_pp0_it8[5];
ap_reg_ppstg_tmp_reg_701_pp0_it9[6] <= ap_reg_ppstg_tmp_reg_701_pp0_it8[6];
ap_reg_ppstg_tmp_reg_701_pp0_it9[7] <= ap_reg_ppstg_tmp_reg_701_pp0_it8[7];
ap_reg_ppstg_tmp_reg_701_pp0_it9[8] <= ap_reg_ppstg_tmp_reg_701_pp0_it8[8];
ap_reg_ppstg_tmp_reg_701_pp0_it9[9] <= ap_reg_ppstg_tmp_reg_701_pp0_it8[9];
ap_reg_ppstg_tmp_reg_701_pp0_it9[10] <= ap_reg_ppstg_tmp_reg_701_pp0_it8[10];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        exitcond1_reg_692 <= exitcond1_fu_184_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it4) & (ap_reg_ppstg_exitcond1_reg_692_pp0_it3 == ap_const_lv1_0))) begin
        tmp4_reg_814[1] <= tmp4_fu_631_p2[1];
tmp4_reg_814[2] <= tmp4_fu_631_p2[2];
tmp4_reg_814[3] <= tmp4_fu_631_p2[3];
tmp4_reg_814[4] <= tmp4_fu_631_p2[4];
        tmp5_reg_819[1] <= tmp5_fu_643_p2[1];
tmp5_reg_819[2] <= tmp5_fu_643_p2[2];
tmp5_reg_819[3] <= tmp5_fu_643_p2[3];
tmp5_reg_819[4] <= tmp5_fu_643_p2[4];
tmp5_reg_819[5] <= tmp5_fu_643_p2[5];
tmp5_reg_819[6] <= tmp5_fu_643_p2[6];
tmp5_reg_819[7] <= tmp5_fu_643_p2[7];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond1_reg_692 == ap_const_lv1_0))) begin
        tmp_138_reg_738 <= y_iteration_V_17_fu_220_p3[ap_const_lv32_1F];
        tmp_i_reg_720 <= tmp_i_fu_202_p2;
        x_iteration_V_39_reg_731 <= x_iteration_V_39_fu_228_p3;
        y_iteration_V_17_reg_724 <= y_iteration_V_17_fu_220_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_reg_ppstg_exitcond1_reg_692_pp0_it1 == ap_const_lv1_0))) begin
        tmp_139_reg_757 <= y_iteration_V_19_fu_290_p3[ap_const_lv32_1F];
        tmp_140_reg_774 <= y_iteration_V_20_fu_368_p3[ap_const_lv32_1F];
        tmp_318_i_reg_781 <= {{y_iteration_V_20_fu_368_p3[ap_const_lv32_1F : ap_const_lv32_2]}};
        tmp_320_i_reg_787 <= {{x_iteration_V_41_fu_376_p3[ap_const_lv32_1F : ap_const_lv32_2]}};
        x_iteration_V_41_reg_768 <= x_iteration_V_41_fu_376_p3;
        y_iteration_V_20_reg_762 <= y_iteration_V_20_fu_368_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3) & (ap_reg_ppstg_exitcond1_reg_692_pp0_it2 == ap_const_lv1_0))) begin
        tmp_141_reg_792 <= y_iteration_V_21_fu_441_p3[ap_const_lv32_1F];
        tmp_142_reg_803 <= y_iteration_V_22_fu_519_p3[ap_const_lv32_1F];
        tmp_338_i_reg_809 <= {{x_iteration_V_43_fu_527_p3[ap_const_lv32_1F : ap_const_lv32_4]}};
        y_iteration_V_22_reg_797 <= y_iteration_V_22_fu_519_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond1_reg_692 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_i_fu_202_p2))) begin
        tmp_144_reg_746 <= real_V_q0[ap_const_lv32_1F];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond1_reg_692 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_i_fu_202_p2) & ~(ap_const_lv1_0 == tmp_144_fu_244_p3))) begin
        tmp_145_reg_750 <= imag_V_q0[ap_const_lv32_1F];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_fu_184_p2 == ap_const_lv1_0))) begin
        tmp_reg_701[0] <= tmp_fu_196_p1[0];
tmp_reg_701[1] <= tmp_fu_196_p1[1];
tmp_reg_701[2] <= tmp_fu_196_p1[2];
tmp_reg_701[3] <= tmp_fu_196_p1[3];
tmp_reg_701[4] <= tmp_fu_196_p1[4];
tmp_reg_701[5] <= tmp_fu_196_p1[5];
tmp_reg_701[6] <= tmp_fu_196_p1[6];
tmp_reg_701[7] <= tmp_fu_196_p1[7];
tmp_reg_701[8] <= tmp_fu_196_p1[8];
tmp_reg_701[9] <= tmp_fu_196_p1[9];
tmp_reg_701[10] <= tmp_fu_196_p1[10];
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm)) | (ap_ST_st39_fsm_2 == ap_CS_fsm))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st39_fsm_2 == ap_CS_fsm)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// grp_cordic_sqrt_fu_175_ap_ce assign process. ///
always @ (ap_CS_fsm or exitcond1_reg_692 or ap_reg_ppstg_exitcond1_reg_692_pp0_it1 or ap_reg_ppstg_exitcond1_reg_692_pp0_it2 or ap_reg_ppstg_exitcond1_reg_692_pp0_it3 or ap_reg_ppstg_exitcond1_reg_692_pp0_it4 or ap_reg_ppstg_exitcond1_reg_692_pp0_it5 or ap_reg_ppstg_exitcond1_reg_692_pp0_it6 or ap_reg_ppstg_exitcond1_reg_692_pp0_it7 or ap_reg_ppstg_exitcond1_reg_692_pp0_it8 or ap_reg_ppstg_exitcond1_reg_692_pp0_it9 or ap_reg_ppstg_exitcond1_reg_692_pp0_it10 or ap_reg_ppstg_exitcond1_reg_692_pp0_it11 or ap_reg_ppstg_exitcond1_reg_692_pp0_it12 or ap_reg_ppstg_exitcond1_reg_692_pp0_it13 or ap_reg_ppstg_exitcond1_reg_692_pp0_it14 or ap_reg_ppstg_exitcond1_reg_692_pp0_it15 or ap_reg_ppstg_exitcond1_reg_692_pp0_it16 or ap_reg_ppstg_exitcond1_reg_692_pp0_it17 or ap_reg_ppstg_exitcond1_reg_692_pp0_it18 or ap_reg_ppstg_exitcond1_reg_692_pp0_it19 or ap_reg_ppstg_exitcond1_reg_692_pp0_it20 or ap_reg_ppstg_exitcond1_reg_692_pp0_it21 or ap_reg_ppstg_exitcond1_reg_692_pp0_it22 or ap_reg_ppstg_exitcond1_reg_692_pp0_it23 or ap_reg_ppstg_exitcond1_reg_692_pp0_it24 or ap_reg_ppstg_exitcond1_reg_692_pp0_it25 or ap_reg_ppstg_exitcond1_reg_692_pp0_it26 or ap_reg_ppstg_exitcond1_reg_692_pp0_it27 or ap_reg_ppstg_exitcond1_reg_692_pp0_it28 or ap_reg_ppstg_exitcond1_reg_692_pp0_it29 or ap_reg_ppstg_exitcond1_reg_692_pp0_it30 or ap_reg_ppstg_exitcond1_reg_692_pp0_it31 or ap_reg_ppstg_exitcond1_reg_692_pp0_it32 or ap_reg_ppstg_exitcond1_reg_692_pp0_it33 or ap_reg_ppstg_exitcond1_reg_692_pp0_it34 or ap_reg_ppstg_exitcond1_reg_692_pp0_it35)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & ((exitcond1_reg_692 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_692_pp0_it1 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_692_pp0_it2 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_692_pp0_it3 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_692_pp0_it4 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_692_pp0_it5 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_692_pp0_it6 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_692_pp0_it7 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_692_pp0_it8 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_692_pp0_it9 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_692_pp0_it10 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_692_pp0_it11 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_692_pp0_it12 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_692_pp0_it13 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_692_pp0_it14 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_692_pp0_it15 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_692_pp0_it16 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_692_pp0_it17 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_692_pp0_it18 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_692_pp0_it19 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_692_pp0_it20 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_692_pp0_it21 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_692_pp0_it22 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_692_pp0_it23 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_692_pp0_it24 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_692_pp0_it25 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_692_pp0_it26 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_692_pp0_it27 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_692_pp0_it28 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_692_pp0_it29 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_692_pp0_it30 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_692_pp0_it31 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_692_pp0_it32 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_692_pp0_it33 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_692_pp0_it34 == ap_const_lv1_0) | (ap_reg_ppstg_exitcond1_reg_692_pp0_it35 == ap_const_lv1_0)))) begin
        grp_cordic_sqrt_fu_175_ap_ce = ap_const_logic_1;
    end else begin
        grp_cordic_sqrt_fu_175_ap_ce = ap_const_logic_0;
    end
end

/// imag_V_ce0 assign process. ///
always @ (ap_CS_fsm or exitcond1_fu_184_p2 or ap_reg_ppiten_pp0_it0)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_fu_184_p2 == ap_const_lv1_0))) begin
        imag_V_ce0 = ap_const_logic_1;
    end else begin
        imag_V_ce0 = ap_const_logic_0;
    end
end

/// magFrame_V_ce0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it36 or ap_reg_ppstg_exitcond1_reg_692_pp0_it35)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it36) & (ap_reg_ppstg_exitcond1_reg_692_pp0_it35 == ap_const_lv1_0))) begin
        magFrame_V_ce0 = ap_const_logic_1;
    end else begin
        magFrame_V_ce0 = ap_const_logic_0;
    end
end

/// magFrame_V_we0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it36 or ap_reg_ppstg_exitcond1_reg_692_pp0_it35)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it36) & (ap_reg_ppstg_exitcond1_reg_692_pp0_it35 == ap_const_lv1_0))) begin
        magFrame_V_we0 = ap_const_logic_1;
    end else begin
        magFrame_V_we0 = ap_const_logic_0;
    end
end

/// phaseFrame_V_address1 assign process. ///
always @ (ap_reg_ppstg_tmp_reg_701_pp0_it4 or ap_reg_ppstg_tmp_i_reg_720_pp0_it4 or phaseFrame_V_addr_2_gep_fu_135_p3 or phaseFrame_V_addr_gep_fu_143_p3 or ap_sig_bdd_783 or ap_sig_bdd_785 or ap_sig_bdd_663)
begin
    if (ap_sig_bdd_663) begin
        if (~(ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_720_pp0_it4)) begin
            phaseFrame_V_address1 = phaseFrame_V_addr_gep_fu_143_p3;
        end else if (ap_sig_bdd_785) begin
            phaseFrame_V_address1 = phaseFrame_V_addr_2_gep_fu_135_p3;
        end else if (ap_sig_bdd_783) begin
            phaseFrame_V_address1 = ap_reg_ppstg_tmp_reg_701_pp0_it4;
        end else begin
            phaseFrame_V_address1 = ap_reg_ppstg_tmp_reg_701_pp0_it4;
        end
    end else begin
        phaseFrame_V_address1 = ap_reg_ppstg_tmp_reg_701_pp0_it4;
    end
end

/// phaseFrame_V_ce0 assign process. ///
always @ (ap_CS_fsm or exitcond1_reg_692 or ap_reg_ppiten_pp0_it1 or tmp_i_fu_202_p2 or tmp_144_fu_244_p3 or or_cond_fu_272_p2)
begin
    if ((((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond1_reg_692 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_i_fu_202_p2) & (ap_const_lv1_0 == tmp_144_fu_244_p3) & (ap_const_lv1_0 == or_cond_fu_272_p2)) | ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond1_reg_692 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_i_fu_202_p2) & (ap_const_lv1_0 == tmp_144_fu_244_p3) & ~(ap_const_lv1_0 == or_cond_fu_272_p2)))) begin
        phaseFrame_V_ce0 = ap_const_logic_1;
    end else begin
        phaseFrame_V_ce0 = ap_const_logic_0;
    end
end

/// phaseFrame_V_ce1 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it5 or ap_reg_ppstg_exitcond1_reg_692_pp0_it4 or ap_reg_ppstg_tmp_i_reg_720_pp0_it4 or ap_reg_ppstg_tmp_144_reg_746_pp0_it4 or ap_reg_ppstg_tmp_145_reg_750_pp0_it4)
begin
    if ((((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it5) & (ap_reg_ppstg_exitcond1_reg_692_pp0_it4 == ap_const_lv1_0) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_720_pp0_it4) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_144_reg_746_pp0_it4) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_145_reg_750_pp0_it4)) | ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it5) & (ap_reg_ppstg_exitcond1_reg_692_pp0_it4 == ap_const_lv1_0) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_720_pp0_it4) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_144_reg_746_pp0_it4) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_145_reg_750_pp0_it4)) | ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it5) & (ap_reg_ppstg_exitcond1_reg_692_pp0_it4 == ap_const_lv1_0) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_720_pp0_it4)))) begin
        phaseFrame_V_ce1 = ap_const_logic_1;
    end else begin
        phaseFrame_V_ce1 = ap_const_logic_0;
    end
end

/// phaseFrame_V_d0 assign process. ///
always @ (or_cond_fu_272_p2 or ap_sig_bdd_372)
begin
    if (ap_sig_bdd_372) begin
        if (~(ap_const_lv1_0 == or_cond_fu_272_p2)) begin
            phaseFrame_V_d0 = ap_const_lv11_64;
        end else if ((ap_const_lv1_0 == or_cond_fu_272_p2)) begin
            phaseFrame_V_d0 = ap_const_lv11_79B;
        end else begin
            phaseFrame_V_d0 = ap_const_lv11_64;
        end
    end else begin
        phaseFrame_V_d0 = ap_const_lv11_64;
    end
end

/// phaseFrame_V_d1 assign process. ///
always @ (ap_reg_ppstg_tmp_i_reg_720_pp0_it4 or r_V_cast_cast_fu_671_p1 or r_V_cast_cast_116_fu_682_p1 or p_Val2_450_i_cast_cast_fu_687_p1 or ap_sig_bdd_783 or ap_sig_bdd_785 or ap_sig_bdd_663)
begin
    if (ap_sig_bdd_663) begin
        if (~(ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_720_pp0_it4)) begin
            phaseFrame_V_d1 = p_Val2_450_i_cast_cast_fu_687_p1;
        end else if (ap_sig_bdd_785) begin
            phaseFrame_V_d1 = r_V_cast_cast_116_fu_682_p1;
        end else if (ap_sig_bdd_783) begin
            phaseFrame_V_d1 = r_V_cast_cast_fu_671_p1;
        end else begin
            phaseFrame_V_d1 = p_Val2_450_i_cast_cast_fu_687_p1;
        end
    end else begin
        phaseFrame_V_d1 = p_Val2_450_i_cast_cast_fu_687_p1;
    end
end

/// phaseFrame_V_we0 assign process. ///
always @ (ap_CS_fsm or exitcond1_reg_692 or ap_reg_ppiten_pp0_it1 or tmp_i_fu_202_p2 or tmp_144_fu_244_p3 or or_cond_fu_272_p2)
begin
    if ((((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond1_reg_692 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_i_fu_202_p2) & (ap_const_lv1_0 == tmp_144_fu_244_p3) & (ap_const_lv1_0 == or_cond_fu_272_p2)) | ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond1_reg_692 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_i_fu_202_p2) & (ap_const_lv1_0 == tmp_144_fu_244_p3) & ~(ap_const_lv1_0 == or_cond_fu_272_p2)))) begin
        phaseFrame_V_we0 = ap_const_logic_1;
    end else begin
        phaseFrame_V_we0 = ap_const_logic_0;
    end
end

/// phaseFrame_V_we1 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it5 or ap_reg_ppstg_exitcond1_reg_692_pp0_it4 or ap_reg_ppstg_tmp_i_reg_720_pp0_it4 or ap_reg_ppstg_tmp_144_reg_746_pp0_it4 or ap_reg_ppstg_tmp_145_reg_750_pp0_it4)
begin
    if ((((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it5) & (ap_reg_ppstg_exitcond1_reg_692_pp0_it4 == ap_const_lv1_0) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_720_pp0_it4) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_144_reg_746_pp0_it4) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_145_reg_750_pp0_it4)) | ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it5) & (ap_reg_ppstg_exitcond1_reg_692_pp0_it4 == ap_const_lv1_0) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_720_pp0_it4) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_144_reg_746_pp0_it4) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_145_reg_750_pp0_it4)) | ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it5) & (ap_reg_ppstg_exitcond1_reg_692_pp0_it4 == ap_const_lv1_0) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_720_pp0_it4)))) begin
        phaseFrame_V_we1 = ap_const_logic_1;
    end else begin
        phaseFrame_V_we1 = ap_const_logic_0;
    end
end

/// real_V_ce0 assign process. ///
always @ (ap_CS_fsm or exitcond1_fu_184_p2 or ap_reg_ppiten_pp0_it0)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_fu_184_p2 == ap_const_lv1_0))) begin
        real_V_ce0 = ap_const_logic_1;
    end else begin
        real_V_ce0 = ap_const_logic_0;
    end
end
always @ (ap_start or ap_CS_fsm or exitcond1_fu_184_p2 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it35 or ap_reg_ppiten_pp0_it36)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        ap_ST_pp0_stg0_fsm_1 : 
            if ((~((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it36) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it35)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(exitcond1_fu_184_p2 == ap_const_lv1_0) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(exitcond1_fu_184_p2 == ap_const_lv1_0) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
                ap_NS_fsm = ap_ST_st39_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st39_fsm_2;
            end
        ap_ST_st39_fsm_2 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
        default : 
            ap_NS_fsm = 'bx;
    endcase
end

/// ap_sig_bdd_372 assign process. ///
always @ (ap_CS_fsm or exitcond1_reg_692 or ap_reg_ppiten_pp0_it1 or tmp_i_fu_202_p2 or tmp_144_fu_244_p3)
begin
    ap_sig_bdd_372 = ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond1_reg_692 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_i_fu_202_p2) & (ap_const_lv1_0 == tmp_144_fu_244_p3));
end

/// ap_sig_bdd_663 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it5 or ap_reg_ppstg_exitcond1_reg_692_pp0_it4)
begin
    ap_sig_bdd_663 = ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it5) & (ap_reg_ppstg_exitcond1_reg_692_pp0_it4 == ap_const_lv1_0));
end

/// ap_sig_bdd_783 assign process. ///
always @ (ap_reg_ppstg_tmp_i_reg_720_pp0_it4 or ap_reg_ppstg_tmp_144_reg_746_pp0_it4 or ap_reg_ppstg_tmp_145_reg_750_pp0_it4)
begin
    ap_sig_bdd_783 = ((ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_720_pp0_it4) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_144_reg_746_pp0_it4) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_145_reg_750_pp0_it4));
end

/// ap_sig_bdd_785 assign process. ///
always @ (ap_reg_ppstg_tmp_i_reg_720_pp0_it4 or ap_reg_ppstg_tmp_144_reg_746_pp0_it4 or ap_reg_ppstg_tmp_145_reg_750_pp0_it4)
begin
    ap_sig_bdd_785 = ((ap_const_lv1_0 == ap_reg_ppstg_tmp_i_reg_720_pp0_it4) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_144_reg_746_pp0_it4) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_145_reg_750_pp0_it4));
end
assign exitcond1_fu_184_p2 = (i_reg_163 == ap_const_lv11_400? 1'b1: 1'b0);
assign grp_cordic_sqrt_fu_175_x_V = real_V_q0;
assign grp_cordic_sqrt_fu_175_y_V = imag_V_q0;
assign i_3_fu_190_p2 = (i_reg_163 + ap_const_lv11_1);
assign imag_V_address0 = tmp_fu_196_p1;
assign magFrame_V_address0 = ap_reg_ppstg_tmp_reg_701_pp0_it35;
assign magFrame_V_d0 = grp_cordic_sqrt_fu_175_ap_return;
assign not2_fu_260_p2 = (real_V_q0 == ap_const_lv32_0? 1'b1: 1'b0);
assign not3_fu_266_p2 = ($signed(imag_V_q0) > $signed(32'b00000000000000000000000000000000)? 1'b1: 1'b0);
assign or_cond_fu_272_p2 = (not2_fu_260_p2 & not3_fu_266_p2);
assign p_Val2_330_fu_567_p3 = ((ap_reg_ppstg_tmp_139_reg_757_pp0_it3)? r_V_145_1_i_fu_553_p3: r_V_150_1_i_fu_560_p3);
assign p_Val2_345_fu_652_p1 = $signed(tmp4_reg_814);
assign p_Val2_345_fu_652_p2 = (tmp5_reg_819 + p_Val2_345_fu_652_p1);
assign p_Val2_433_v_i_cast_cast_fu_574_p3 = ((ap_reg_ppstg_tmp_140_reg_774_pp0_it3)? ap_const_lv8_F1: ap_const_lv8_F);
assign p_Val2_440_v_i_cast_cast_fu_581_p3 = ((tmp_141_reg_792)? ap_const_lv5_19: ap_const_lv5_7);
assign p_Val2_447_v_i_cast_cast_fu_608_p3 = ((tmp_142_reg_803)? ap_const_lv5_1D: ap_const_lv5_3);
assign p_Val2_450_i_cast_cast_fu_687_p1 = $signed(p_Val2_345_fu_652_p2);
assign p_Val2_450_v_i_cast_cast_fu_623_p3 = ((tmp_143_fu_615_p3)? ap_const_lv8_FF: ap_const_lv8_1);
assign phaseFrame_V_addr_2_gep_fu_135_p3 = ap_reg_ppstg_tmp_reg_701_pp0_it4;
assign phaseFrame_V_addr_gep_fu_143_p3 = ap_reg_ppstg_tmp_reg_701_pp0_it4;
assign phaseFrame_V_address0 = tmp_reg_701;
assign r_V_145_1_i_fu_553_p3 = ((ap_reg_ppstg_tmp_138_reg_738_pp0_it3)? ap_const_lv8_B1: ap_const_lv8_15);
assign r_V_150_1_i_fu_560_p3 = ((ap_reg_ppstg_tmp_138_reg_738_pp0_it3)? ap_const_lv8_EB: ap_const_lv8_4F);
assign r_V_161_fu_342_p1 = $signed(tmp_311_i_fu_332_p4);
assign r_V_162_fu_352_p1 = $unsigned(tmp_309_i_fu_312_p4);
assign r_V_164_fu_420_p1 = $signed(tmp_320_i_reg_787);
assign r_V_165_fu_428_p1 = $unsigned(tmp_318_i_reg_781);
assign r_V_167_fu_493_p1 = $signed(tmp_329_i_fu_483_p4);
assign r_V_168_fu_503_p1 = $unsigned(tmp_327_i_fu_463_p4);
assign r_V_169_fu_588_p1 = $signed(tmp_338_i_reg_809);
assign r_V_cast_cast_116_fu_682_p1 = $signed(r_V_s_fu_676_p2);
assign r_V_cast_cast_fu_671_p1 = $unsigned(r_V_fu_665_p2);
assign r_V_fu_665_p0 = $signed(p_Val2_345_fu_652_p2);
assign r_V_fu_665_p2 = (r_V_fu_665_p0 + ap_const_lv9_C9);
assign r_V_s_fu_676_p0 = $signed(p_Val2_345_fu_652_p2);
assign r_V_s_fu_676_p2 = (r_V_s_fu_676_p0 + ap_const_lv10_337);
assign real_V_address0 = tmp_fu_196_p1;
assign tmp4_fu_631_p2 = (p_Val2_440_v_i_cast_cast_fu_581_p3 + p_Val2_447_v_i_cast_cast_fu_608_p3);
assign tmp5_fu_643_p2 = (tmp6_fu_637_p2 + p_Val2_433_v_i_cast_cast_fu_574_p3);
assign tmp6_fu_637_p2 = (p_Val2_330_fu_567_p3 + p_Val2_450_v_i_cast_cast_fu_623_p3);
assign tmp_139_fu_304_p3 = y_iteration_V_19_fu_290_p3[ap_const_lv32_1F];
assign tmp_141_fu_455_p3 = y_iteration_V_21_fu_441_p3[ap_const_lv32_1F];
assign tmp_143_fu_615_p3 = y_iteration_V_23_fu_601_p3[ap_const_lv32_1F];
assign tmp_144_fu_244_p3 = real_V_q0[ap_const_lv32_1F];
assign tmp_309_i_fu_312_p4 = {{y_iteration_V_19_fu_290_p3[ap_const_lv32_1F : ap_const_lv32_1]}};
assign tmp_311_i_fu_332_p4 = {{x_iteration_V_40_fu_297_p3[ap_const_lv32_1F : ap_const_lv32_1]}};
assign tmp_327_i_fu_463_p4 = {{y_iteration_V_21_fu_441_p3[ap_const_lv32_1F : ap_const_lv32_3]}};
assign tmp_329_i_fu_483_p4 = {{x_iteration_V_42_fu_448_p3[ap_const_lv32_1F : ap_const_lv32_3]}};
assign tmp_fu_196_p1 = $unsigned(i_reg_163);
assign tmp_i_fu_202_p2 = ($signed(real_V_q0) > $signed(32'b00000000000000000000000000000000)? 1'b1: 1'b0);
assign x_iteration_V_27_fu_278_p2 = (x_iteration_V_39_reg_731 - y_iteration_V_17_reg_724);
assign x_iteration_V_30_fu_326_p1 = $signed(tmp_309_i_fu_312_p4);
assign x_iteration_V_30_fu_326_p2 = (x_iteration_V_40_fu_297_p3 - x_iteration_V_30_fu_326_p1);
assign x_iteration_V_31_fu_356_p2 = (x_iteration_V_40_fu_297_p3 + r_V_162_fu_352_p1);
assign x_iteration_V_33_fu_415_p1 = $signed(tmp_318_i_reg_781);
assign x_iteration_V_33_fu_415_p2 = (x_iteration_V_41_reg_768 - x_iteration_V_33_fu_415_p1);
assign x_iteration_V_34_fu_431_p2 = (x_iteration_V_41_reg_768 + r_V_165_fu_428_p1);
assign x_iteration_V_36_fu_477_p1 = $signed(tmp_327_i_fu_463_p4);
assign x_iteration_V_36_fu_477_p2 = (x_iteration_V_42_fu_448_p3 - x_iteration_V_36_fu_477_p1);
assign x_iteration_V_37_fu_507_p2 = (x_iteration_V_42_fu_448_p3 + r_V_168_fu_503_p1);
assign x_iteration_V_39_fu_228_p3 = ((tmp_i_fu_202_p2)? real_V_q0: x_iteration_V_fu_208_p2);
assign x_iteration_V_40_fu_297_p3 = ((tmp_138_reg_738)? x_iteration_V_27_fu_278_p2: y_iteration_V_18_fu_282_p2);
assign x_iteration_V_41_fu_376_p3 = ((tmp_139_fu_304_p3)? x_iteration_V_30_fu_326_p2: x_iteration_V_31_fu_356_p2);
assign x_iteration_V_42_fu_448_p3 = ((tmp_140_reg_774)? x_iteration_V_33_fu_415_p2: x_iteration_V_34_fu_431_p2);
assign x_iteration_V_43_fu_527_p3 = ((tmp_141_fu_455_p3)? x_iteration_V_36_fu_477_p2: x_iteration_V_37_fu_507_p2);
assign x_iteration_V_fu_208_p2 = (ap_const_lv32_0 - real_V_q0);
assign y_iteration_V_11_fu_497_p1 = r_V_167_fu_493_p1;
assign y_iteration_V_11_fu_497_p2 = (y_iteration_V_21_fu_441_p3 + y_iteration_V_11_fu_497_p1);
assign y_iteration_V_12_fu_513_p1 = r_V_167_fu_493_p1;
assign y_iteration_V_12_fu_513_p2 = (y_iteration_V_21_fu_441_p3 - y_iteration_V_12_fu_513_p1);
assign y_iteration_V_14_fu_591_p1 = r_V_169_fu_588_p1;
assign y_iteration_V_14_fu_591_p2 = (y_iteration_V_22_reg_797 + y_iteration_V_14_fu_591_p1);
assign y_iteration_V_15_fu_596_p1 = r_V_169_fu_588_p1;
assign y_iteration_V_15_fu_596_p2 = (y_iteration_V_22_reg_797 - y_iteration_V_15_fu_596_p1);
assign y_iteration_V_17_fu_220_p3 = ((tmp_i_fu_202_p2)? imag_V_q0: y_iteration_V_fu_214_p2);
assign y_iteration_V_18_fu_282_p2 = (x_iteration_V_39_reg_731 + y_iteration_V_17_reg_724);
assign y_iteration_V_19_fu_290_p3 = ((tmp_138_reg_738)? y_iteration_V_18_fu_282_p2: y_iteration_V_3_fu_286_p2);
assign y_iteration_V_20_fu_368_p3 = ((tmp_139_fu_304_p3)? y_iteration_V_5_fu_346_p2: y_iteration_V_6_fu_362_p2);
assign y_iteration_V_21_fu_441_p3 = ((tmp_140_reg_774)? y_iteration_V_8_fu_423_p2: y_iteration_V_9_fu_436_p2);
assign y_iteration_V_22_fu_519_p3 = ((tmp_141_fu_455_p3)? y_iteration_V_11_fu_497_p2: y_iteration_V_12_fu_513_p2);
assign y_iteration_V_23_fu_601_p3 = ((tmp_142_reg_803)? y_iteration_V_14_fu_591_p2: y_iteration_V_15_fu_596_p2);
assign y_iteration_V_3_fu_286_p2 = (y_iteration_V_17_reg_724 - x_iteration_V_39_reg_731);
assign y_iteration_V_5_fu_346_p1 = r_V_161_fu_342_p1;
assign y_iteration_V_5_fu_346_p2 = (y_iteration_V_19_fu_290_p3 + y_iteration_V_5_fu_346_p1);
assign y_iteration_V_6_fu_362_p1 = r_V_161_fu_342_p1;
assign y_iteration_V_6_fu_362_p2 = (y_iteration_V_19_fu_290_p3 - y_iteration_V_6_fu_362_p1);
assign y_iteration_V_8_fu_423_p1 = r_V_164_fu_420_p1;
assign y_iteration_V_8_fu_423_p2 = (y_iteration_V_20_reg_762 + y_iteration_V_8_fu_423_p1);
assign y_iteration_V_9_fu_436_p1 = r_V_164_fu_420_p1;
assign y_iteration_V_9_fu_436_p2 = (y_iteration_V_20_reg_762 - y_iteration_V_9_fu_436_p1);
assign y_iteration_V_fu_214_p2 = (ap_const_lv32_0 - imag_V_q0);
always @ (posedge ap_clk)
begin
    tmp_reg_701[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_701_pp0_it1[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_701_pp0_it2[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_701_pp0_it3[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_701_pp0_it4[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_701_pp0_it5[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_701_pp0_it6[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_701_pp0_it7[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_701_pp0_it8[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_701_pp0_it9[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_701_pp0_it10[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_701_pp0_it11[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_701_pp0_it12[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_701_pp0_it13[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_701_pp0_it14[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_701_pp0_it15[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_701_pp0_it16[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_701_pp0_it17[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_701_pp0_it18[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_701_pp0_it19[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_701_pp0_it20[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_701_pp0_it21[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_701_pp0_it22[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_701_pp0_it23[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_701_pp0_it24[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_701_pp0_it25[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_701_pp0_it26[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_701_pp0_it27[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_701_pp0_it28[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_701_pp0_it29[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_701_pp0_it30[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_701_pp0_it31[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_701_pp0_it32[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_701_pp0_it33[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_701_pp0_it34[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_reg_701_pp0_it35[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    tmp4_reg_814[0] <= 1'b0;
    tmp5_reg_819[0] <= 1'b1;
end



endmodule //cal_mag_phase

