-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2013.2
-- Copyright (C) 2013 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cal_mag_phase is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    magFrame_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    magFrame_V_ce0 : OUT STD_LOGIC;
    magFrame_V_we0 : OUT STD_LOGIC;
    magFrame_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    phaseFrame_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    phaseFrame_V_ce0 : OUT STD_LOGIC;
    phaseFrame_V_we0 : OUT STD_LOGIC;
    phaseFrame_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    real_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    real_V_ce0 : OUT STD_LOGIC;
    real_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    imag_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    imag_V_ce0 : OUT STD_LOGIC;
    imag_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of cal_mag_phase is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (4 downto 0) := "01011";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (4 downto 0) := "01101";
    constant ap_ST_st15_fsm_14 : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_ST_st16_fsm_15 : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_ST_st17_fsm_16 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_ST_st18_fsm_17 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_ST_st19_fsm_18 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_ST_st20_fsm_19 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_ST_st21_fsm_20 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_ST_st22_fsm_21 : STD_LOGIC_VECTOR (4 downto 0) := "10101";
    constant ap_ST_st23_fsm_22 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_FFE6DE05 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111001101101111000000101";
    constant ap_const_lv32_1921FB : STD_LOGIC_VECTOR (31 downto 0) := "00000000000110010010000111111011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv11_400 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv53_0 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000000000000000000000000";
    constant ap_const_lv22_100000 : STD_LOGIC_VECTOR (21 downto 0) := "0100000000000000000000";
    constant ap_const_lv22_300000 : STD_LOGIC_VECTOR (21 downto 0) := "1100000000000000000000";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv105_136E9DEABB71F9 : STD_LOGIC_VECTOR (104 downto 0) := "000000000000000000000000000000000000000000000000000010011011011101001110111101010101110110111000111111001";
    constant ap_const_lv105_0 : STD_LOGIC_VECTOR (104 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_68 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101000";
    constant ap_const_lv32_3243F6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000001100100100001111110110";
    constant ap_const_lv32_FFCDBC0A : STD_LOGIC_VECTOR (31 downto 0) := "11111111110011011011110000001010";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal cordic_ctab_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal cordic_ctab_V_ce0 : STD_LOGIC;
    signal cordic_ctab_V_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal i_3_fu_280_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_3_reg_727 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_fu_286_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_reg_736 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond6_fu_274_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_20_reg_756 : STD_LOGIC_VECTOR (31 downto 0);
    signal magFrame_V_addr_reg_766 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_21_reg_771 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_fu_291_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_reg_778 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_48_cast_fu_321_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal ai_V_fu_368_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal i_4_fu_382_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_4_reg_800 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_7_fu_392_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal r_V_7_reg_805 : STD_LOGIC_VECTOR (21 downto 0);
    signal exitcond_fu_376_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_264_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_reg_810 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_29_reg_821 : STD_LOGIC_VECTOR (0 downto 0);
    signal OP2_V_cast_fu_428_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal r_V_7_reg_805_temp: signed (22-1 downto 0);
    signal grp_fu_431_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal r_V_19_reg_843 : STD_LOGIC_VECTOR (53 downto 0);
    signal grp_fu_440_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal r_V_21_reg_848 : STD_LOGIC_VECTOR (53 downto 0);
    signal r_V_20_fu_464_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal ai_V_2_fu_513_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_410_p2 : STD_LOGIC_VECTOR (104 downto 0);
    signal mul_i_reg_868 : STD_LOGIC_VECTOR (104 downto 0);
    signal tmp_s_reg_874 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i3_fu_554_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i3_reg_880 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_iteration_V_2_fu_569_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_iteration_V_1_fu_576_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal step_fu_589_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal step_reg_897 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_31_fu_595_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_reg_902 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond5_fu_583_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_iteration_V_5_fu_648_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_iteration_V_5_reg_912 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_iteration_V_5_fu_656_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_iteration_V_5_reg_917 : STD_LOGIC_VECTOR (31 downto 0);
    signal storemerge_i_fu_717_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_reg_163 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_32_fu_664_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_688_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_106_in_in_i_reg_182 : STD_LOGIC_VECTOR (64 downto 0);
    signal ai_V_1_reg_191 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_Val2_24_reg_200 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_2_reg_210 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_31_reg_221 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_29_reg_234 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_V_4_reg_243 : STD_LOGIC_VECTOR (31 downto 0);
    signal step_2_reg_252 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_6_i_fu_631_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal phaseFrame_V_addr_3_gep_fu_137_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal phaseFrame_V_addr_2_gep_fu_147_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal phaseFrame_V_addr_gep_fu_155_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_fu_671_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_s_fu_694_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_shl_fu_299_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal mt8_i_cast_fu_307_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal r_V_17_fu_313_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal mt_i_fu_325_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal mf_i_fu_336_p1 : STD_LOGIC_VECTOR (52 downto 0);
    signal mt_i_cast_fu_332_p1 : STD_LOGIC_VECTOR (52 downto 0);
    signal mt_i_fu_325_p3_temp: signed (52-1 downto 0);
    signal r_V_18_fu_342_p1 : STD_LOGIC_VECTOR (52 downto 0);
    signal mf_i_fu_336_p2 : STD_LOGIC_VECTOR (52 downto 0);
    signal r_V_18_fu_342_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal tmp_28_fu_360_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_assign_5_cast_cast_fu_388_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal t_V_fu_398_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal grp_fu_410_p0 : STD_LOGIC_VECTOR (51 downto 0);
    signal grp_fu_410_p1 : STD_LOGIC_VECTOR (52 downto 0);
    signal grp_fu_431_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_431_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_440_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_440_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal lhs_V_fu_449_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal rhs_V2_i_fu_460_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_19_reg_843_temp: signed (54-1 downto 0);
    signal lhs_V_cast_fu_456_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal rhs_V2_i_fu_460_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal lhs_V_1_fu_473_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal rhs_V_203_i_fu_485_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_21_reg_848_temp: signed (54-1 downto 0);
    signal lhs_V_1_cast_fu_481_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal rhs_V_203_i_fu_485_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal r_V_22_fu_489_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal tmp_30_fu_505_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_mul_i_fu_521_p2 : STD_LOGIC_VECTOR (104 downto 0);
    signal sel_i_fu_526_p3 : STD_LOGIC_VECTOR (104 downto 0);
    signal neg_ti_i_fu_542_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_iteration_V_1_fu_564_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_iteration_V_fu_559_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sh_assign_1_i_cast_fu_603_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_23_fu_607_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_24_fu_619_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_iteration_V_fu_625_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_iteration_V_4_fu_642_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_iteration_V_3_fu_613_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_iteration_V_4_fu_636_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal not2_fu_678_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not3_fu_683_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_7_i_cast_fu_701_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_i_fu_705_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_12_i_fu_711_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_410_ce : STD_LOGIC;
    signal grp_fu_431_ce : STD_LOGIC;
    signal grp_fu_440_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_sig_bdd_577 : BOOLEAN;
    signal ap_sig_bdd_580 : BOOLEAN;
    signal ap_sig_bdd_582 : BOOLEAN;
    signal ap_sig_bdd_584 : BOOLEAN;
    signal ap_sig_bdd_573 : BOOLEAN;

    component combine_mul_52s_53ns_105_11 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (51 downto 0);
        din1 : IN STD_LOGIC_VECTOR (52 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (104 downto 0) );
    end component;


    component combine_mul_32s_22s_54_3 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (21 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (53 downto 0) );
    end component;


    component cal_mag_phase_cordic_ctab_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;



begin
    cordic_ctab_V_U : component cal_mag_phase_cordic_ctab_V
    generic map (
        DataWidth => 20,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => cordic_ctab_V_address0,
        ce0 => cordic_ctab_V_ce0,
        q0 => cordic_ctab_V_q0);

    combine_mul_52s_53ns_105_11_U16 : component combine_mul_52s_53ns_105_11
    generic map (
        ID => 16,
        NUM_STAGE => 11,
        din0_WIDTH => 52,
        din1_WIDTH => 53,
        dout_WIDTH => 105)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_410_p0,
        din1 => grp_fu_410_p1,
        ce => grp_fu_410_ce,
        dout => grp_fu_410_p2);

    combine_mul_32s_22s_54_3_U17 : component combine_mul_32s_22s_54_3
    generic map (
        ID => 17,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 22,
        dout_WIDTH => 54)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_431_p0,
        din1 => grp_fu_431_p1,
        ce => grp_fu_431_ce,
        dout => grp_fu_431_p2);

    combine_mul_32s_22s_54_3_U18 : component combine_mul_32s_22s_54_3
    generic map (
        ID => 18,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 22,
        dout_WIDTH => 54)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_440_p0,
        din1 => grp_fu_440_p1,
        ce => grp_fu_440_ce,
        dout => grp_fu_440_p2);




    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ai_V_1_reg_191 assign process. --
    ai_V_1_reg_191_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st9_fsm_8 = ap_CS_fsm)) then 
                ai_V_1_reg_191(21) <= ai_V_2_fu_513_p3(21);
            elsif ((ap_ST_st4_fsm_3 = ap_CS_fsm)) then 
                ai_V_1_reg_191(21) <= ai_V_fu_368_p3(21);
            end if; 
        end if;
    end process;

    -- i_2_reg_210 assign process. --
    i_2_reg_210_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st9_fsm_8 = ap_CS_fsm)) then 
                i_2_reg_210 <= i_4_reg_800;
            elsif ((ap_ST_st4_fsm_3 = ap_CS_fsm)) then 
                i_2_reg_210 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    -- i_reg_163 assign process. --
    i_reg_163_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_ST_st22_fsm_21 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond5_fu_583_p2)) and (ap_const_lv1_0 = tmp_i3_reg_880) and (ap_const_lv1_0 = tmp_32_fu_664_p3) and not((ap_const_lv1_0 = or_cond_fu_688_p2))) or ((ap_ST_st22_fsm_21 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond5_fu_583_p2)) and (ap_const_lv1_0 = tmp_i3_reg_880) and (ap_const_lv1_0 = tmp_32_fu_664_p3) and (ap_const_lv1_0 = or_cond_fu_688_p2)) or ((ap_ST_st22_fsm_21 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond5_fu_583_p2)) and (ap_const_lv1_0 = tmp_i3_reg_880) and not((ap_const_lv1_0 = tmp_32_fu_664_p3)) and not((ap_const_lv1_0 = tmp_27_reg_778))) or ((ap_ST_st22_fsm_21 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond5_fu_583_p2)) and (ap_const_lv1_0 = tmp_i3_reg_880) and not((ap_const_lv1_0 = tmp_32_fu_664_p3)) and (ap_const_lv1_0 = tmp_27_reg_778)) or ((ap_ST_st22_fsm_21 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond5_fu_583_p2)) and not((ap_const_lv1_0 = tmp_i3_reg_880))))) then 
                i_reg_163 <= i_3_reg_727;
            elsif (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not((ap_start = ap_const_logic_0)))) then 
                i_reg_163 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    -- p_Val2_106_in_in_i_reg_182 assign process. --
    p_Val2_106_in_in_i_reg_182_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st9_fsm_8 = ap_CS_fsm)) then 
                p_Val2_106_in_in_i_reg_182 <= r_V_20_fu_464_p2;
            elsif ((ap_ST_st4_fsm_3 = ap_CS_fsm)) then 
                p_Val2_106_in_in_i_reg_182 <= r_V_48_cast_fu_321_p1;
            end if; 
        end if;
    end process;

    -- p_Val2_24_reg_200 assign process. --
    p_Val2_24_reg_200_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st9_fsm_8 = ap_CS_fsm)) then 
                p_Val2_24_reg_200 <= r_V_22_fu_489_p2(51 downto 20);
            elsif ((ap_ST_st4_fsm_3 = ap_CS_fsm)) then 
                p_Val2_24_reg_200 <= r_V_18_fu_342_p3(51 downto 20);
            end if; 
        end if;
    end process;

    -- p_Val2_29_reg_234 assign process. --
    p_Val2_29_reg_234_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st23_fsm_22 = ap_CS_fsm)) then 
                p_Val2_29_reg_234 <= y_iteration_V_5_reg_912;
            elsif ((ap_ST_st21_fsm_20 = ap_CS_fsm)) then 
                p_Val2_29_reg_234 <= y_iteration_V_2_fu_569_p3;
            end if; 
        end if;
    end process;

    -- p_Val2_31_reg_221 assign process. --
    p_Val2_31_reg_221_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st23_fsm_22 = ap_CS_fsm)) then 
                p_Val2_31_reg_221 <= storemerge_i_fu_717_p3;
            elsif ((ap_ST_st21_fsm_20 = ap_CS_fsm)) then 
                p_Val2_31_reg_221 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    -- step_2_reg_252 assign process. --
    step_2_reg_252_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st23_fsm_22 = ap_CS_fsm)) then 
                step_2_reg_252 <= step_reg_897;
            elsif ((ap_ST_st21_fsm_20 = ap_CS_fsm)) then 
                step_2_reg_252 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    -- t_V_4_reg_243 assign process. --
    t_V_4_reg_243_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st23_fsm_22 = ap_CS_fsm)) then 
                t_V_4_reg_243 <= x_iteration_V_5_reg_917;
            elsif ((ap_ST_st21_fsm_20 = ap_CS_fsm)) then 
                t_V_4_reg_243 <= x_iteration_V_1_fu_576_p3;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then
                i_3_reg_727 <= i_3_fu_280_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st5_fsm_4 = ap_CS_fsm)) then
                i_4_reg_800 <= i_4_fu_382_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st4_fsm_3 = ap_CS_fsm)) then
                magFrame_V_addr_reg_766 <= tmp_reg_736(10 - 1 downto 0);
                p_Val2_21_reg_771 <= imag_V_q0;
                tmp_27_reg_778 <= imag_V_q0(31 downto 31);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st19_fsm_18 = ap_CS_fsm)) then
                mul_i_reg_868 <= grp_fu_410_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st3_fsm_2 = ap_CS_fsm)) then
                p_Val2_20_reg_756 <= real_V_q0;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st8_fsm_7 = ap_CS_fsm)) then
                r_V_19_reg_843 <= grp_fu_431_p2;
                r_V_21_reg_848 <= grp_fu_440_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st5_fsm_4 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond_fu_376_p2))) then
                r_V_7_reg_805 <= r_V_7_fu_392_p2;
                tmp_22_reg_810 <= p_Val2_106_in_in_i_reg_182(51 downto 20);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st22_fsm_21 = ap_CS_fsm)) then
                step_reg_897 <= step_fu_589_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st5_fsm_4 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond_fu_376_p2)))) then
                tmp_29_reg_821 <= p_Val2_106_in_in_i_reg_182(51 downto 51);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st22_fsm_21 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond5_fu_583_p2))) then
                tmp_31_reg_902 <= p_Val2_29_reg_234(31 downto 31);
                x_iteration_V_5_reg_917 <= x_iteration_V_5_fu_656_p3;
                y_iteration_V_5_reg_912 <= y_iteration_V_5_fu_648_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st21_fsm_20 = ap_CS_fsm)) then
                tmp_i3_reg_880 <= tmp_i3_fu_554_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st2_fsm_1 = ap_CS_fsm) and (exitcond6_fu_274_p2 = ap_const_lv1_0))) then
                tmp_reg_736(0) <= tmp_fu_286_p1(0);
    tmp_reg_736(1) <= tmp_fu_286_p1(1);
    tmp_reg_736(2) <= tmp_fu_286_p1(2);
    tmp_reg_736(3) <= tmp_fu_286_p1(3);
    tmp_reg_736(4) <= tmp_fu_286_p1(4);
    tmp_reg_736(5) <= tmp_fu_286_p1(5);
    tmp_reg_736(6) <= tmp_fu_286_p1(6);
    tmp_reg_736(7) <= tmp_fu_286_p1(7);
    tmp_reg_736(8) <= tmp_fu_286_p1(8);
    tmp_reg_736(9) <= tmp_fu_286_p1(9);
    tmp_reg_736(10) <= tmp_fu_286_p1(10);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st20_fsm_19 = ap_CS_fsm)) then
                tmp_s_reg_874 <= sel_i_fu_526_p3(104 downto 73);
            end if;
        end if;
    end process;
    tmp_reg_736(63 downto 11) <= "00000000000000000000000000000000000000000000000000000";
    ai_V_1_reg_191(20 downto 0) <= "100000000000000000000";

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_start , ap_CS_fsm , exitcond6_fu_274_p2 , exitcond_fu_376_p2 , exitcond5_fu_583_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((exitcond6_fu_274_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st3_fsm_2 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st5_fsm_4 => 
                if (not((ap_const_lv1_0 = exitcond_fu_376_p2))) then
                    ap_NS_fsm <= ap_ST_st10_fsm_9;
                else
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                end if;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_st7_fsm_6;
            when ap_ST_st7_fsm_6 => 
                ap_NS_fsm <= ap_ST_st8_fsm_7;
            when ap_ST_st8_fsm_7 => 
                ap_NS_fsm <= ap_ST_st9_fsm_8;
            when ap_ST_st9_fsm_8 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st10_fsm_9 => 
                ap_NS_fsm <= ap_ST_st11_fsm_10;
            when ap_ST_st11_fsm_10 => 
                ap_NS_fsm <= ap_ST_st12_fsm_11;
            when ap_ST_st12_fsm_11 => 
                ap_NS_fsm <= ap_ST_st13_fsm_12;
            when ap_ST_st13_fsm_12 => 
                ap_NS_fsm <= ap_ST_st14_fsm_13;
            when ap_ST_st14_fsm_13 => 
                ap_NS_fsm <= ap_ST_st15_fsm_14;
            when ap_ST_st15_fsm_14 => 
                ap_NS_fsm <= ap_ST_st16_fsm_15;
            when ap_ST_st16_fsm_15 => 
                ap_NS_fsm <= ap_ST_st17_fsm_16;
            when ap_ST_st17_fsm_16 => 
                ap_NS_fsm <= ap_ST_st18_fsm_17;
            when ap_ST_st18_fsm_17 => 
                ap_NS_fsm <= ap_ST_st19_fsm_18;
            when ap_ST_st19_fsm_18 => 
                ap_NS_fsm <= ap_ST_st20_fsm_19;
            when ap_ST_st20_fsm_19 => 
                ap_NS_fsm <= ap_ST_st21_fsm_20;
            when ap_ST_st21_fsm_20 => 
                ap_NS_fsm <= ap_ST_st22_fsm_21;
            when ap_ST_st22_fsm_21 => 
                if (not((ap_const_lv1_0 = exitcond5_fu_583_p2))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st23_fsm_22;
                end if;
            when ap_ST_st23_fsm_22 => 
                ap_NS_fsm <= ap_ST_st22_fsm_21;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    
    r_V_7_reg_805_temp <= signed(r_V_7_reg_805);
    OP2_V_cast_fu_428_p1 <= std_logic_vector(resize(r_V_7_reg_805_temp,54));

    ai_V_2_fu_513_p3 <= 
        ap_const_lv22_100000 when (tmp_30_fu_505_p3(0) = '1') else 
        ap_const_lv22_300000;
    ai_V_fu_368_p3 <= 
        ap_const_lv22_100000 when (tmp_28_fu_360_p3(0) = '1') else 
        ap_const_lv22_300000;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_start, ap_CS_fsm, exitcond6_fu_274_p2)
    begin
        if (((not((ap_const_logic_1 = ap_start)) and (ap_ST_st1_fsm_0 = ap_CS_fsm)) or ((ap_ST_st2_fsm_1 = ap_CS_fsm) and not((exitcond6_fu_274_p2 = ap_const_lv1_0))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_CS_fsm)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_ST_st1_fsm_0 = ap_CS_fsm))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_CS_fsm, exitcond6_fu_274_p2)
    begin
        if (((ap_ST_st2_fsm_1 = ap_CS_fsm) and not((exitcond6_fu_274_p2 = ap_const_lv1_0)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_bdd_573 assign process. --
    ap_sig_bdd_573_assign_proc : process(ap_CS_fsm, exitcond5_fu_583_p2)
    begin
                ap_sig_bdd_573 <= ((ap_ST_st22_fsm_21 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond5_fu_583_p2)));
    end process;


    -- ap_sig_bdd_577 assign process. --
    ap_sig_bdd_577_assign_proc : process(tmp_27_reg_778, tmp_i3_reg_880, tmp_32_fu_664_p3)
    begin
                ap_sig_bdd_577 <= ((ap_const_lv1_0 = tmp_i3_reg_880) and not((ap_const_lv1_0 = tmp_32_fu_664_p3)) and (ap_const_lv1_0 = tmp_27_reg_778));
    end process;


    -- ap_sig_bdd_580 assign process. --
    ap_sig_bdd_580_assign_proc : process(tmp_i3_reg_880, tmp_32_fu_664_p3, or_cond_fu_688_p2)
    begin
                ap_sig_bdd_580 <= ((ap_const_lv1_0 = tmp_i3_reg_880) and (ap_const_lv1_0 = tmp_32_fu_664_p3) and (ap_const_lv1_0 = or_cond_fu_688_p2));
    end process;


    -- ap_sig_bdd_582 assign process. --
    ap_sig_bdd_582_assign_proc : process(tmp_i3_reg_880, tmp_32_fu_664_p3, or_cond_fu_688_p2)
    begin
                ap_sig_bdd_582 <= ((ap_const_lv1_0 = tmp_i3_reg_880) and (ap_const_lv1_0 = tmp_32_fu_664_p3) and not((ap_const_lv1_0 = or_cond_fu_688_p2)));
    end process;


    -- ap_sig_bdd_584 assign process. --
    ap_sig_bdd_584_assign_proc : process(tmp_27_reg_778, tmp_i3_reg_880, tmp_32_fu_664_p3)
    begin
                ap_sig_bdd_584 <= ((ap_const_lv1_0 = tmp_i3_reg_880) and not((ap_const_lv1_0 = tmp_32_fu_664_p3)) and not((ap_const_lv1_0 = tmp_27_reg_778)));
    end process;

    cordic_ctab_V_address0 <= tmp_6_i_fu_631_p1(6 - 1 downto 0);

    -- cordic_ctab_V_ce0 assign process. --
    cordic_ctab_V_ce0_assign_proc : process(ap_CS_fsm, exitcond5_fu_583_p2)
    begin
        if (((ap_ST_st22_fsm_21 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond5_fu_583_p2))) then 
            cordic_ctab_V_ce0 <= ap_const_logic_1;
        else 
            cordic_ctab_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond5_fu_583_p2 <= "1" when (step_2_reg_252 = ap_const_lv7_40) else "0";
    exitcond6_fu_274_p2 <= "1" when (i_reg_163 = ap_const_lv11_400) else "0";
    exitcond_fu_376_p2 <= "1" when (i_2_reg_210 = ap_const_lv7_40) else "0";
    grp_fu_264_p4 <= p_Val2_106_in_in_i_reg_182(51 downto 20);

    -- grp_fu_410_ce assign process. --
    grp_fu_410_ce_assign_proc : process(ap_CS_fsm, exitcond_fu_376_p2)
    begin
        if ((((ap_ST_st5_fsm_4 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond_fu_376_p2))) or (ap_ST_st19_fsm_18 = ap_CS_fsm) or (ap_ST_st10_fsm_9 = ap_CS_fsm) or (ap_ST_st11_fsm_10 = ap_CS_fsm) or (ap_ST_st12_fsm_11 = ap_CS_fsm) or (ap_ST_st13_fsm_12 = ap_CS_fsm) or (ap_ST_st14_fsm_13 = ap_CS_fsm) or (ap_ST_st15_fsm_14 = ap_CS_fsm) or (ap_ST_st16_fsm_15 = ap_CS_fsm) or (ap_ST_st17_fsm_16 = ap_CS_fsm) or (ap_ST_st18_fsm_17 = ap_CS_fsm))) then 
            grp_fu_410_ce <= ap_const_logic_1;
        else 
            grp_fu_410_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_410_p0 <= t_V_fu_398_p3;
    grp_fu_410_p1 <= ap_const_lv105_136E9DEABB71F9(53 - 1 downto 0);
    grp_fu_431_ce <= ap_const_logic_1;
    grp_fu_431_p0 <= p_Val2_24_reg_200;
    grp_fu_431_p1 <= OP2_V_cast_fu_428_p1(22 - 1 downto 0);
    grp_fu_440_ce <= ap_const_logic_1;
    grp_fu_440_p0 <= tmp_22_reg_810;
    grp_fu_440_p1 <= OP2_V_cast_fu_428_p1(22 - 1 downto 0);
    i_3_fu_280_p2 <= std_logic_vector(unsigned(i_reg_163) + unsigned(ap_const_lv11_1));
    i_4_fu_382_p2 <= std_logic_vector(unsigned(i_2_reg_210) + unsigned(ap_const_lv7_1));
    imag_V_address0 <= tmp_reg_736(10 - 1 downto 0);

    -- imag_V_ce0 assign process. --
    imag_V_ce0_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_st3_fsm_2 = ap_CS_fsm)) then 
            imag_V_ce0 <= ap_const_logic_1;
        else 
            imag_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    lhs_V_1_cast_fu_481_p1 <= std_logic_vector(resize(unsigned(lhs_V_1_fu_473_p3),65));
    lhs_V_1_fu_473_p3 <= (p_Val2_24_reg_200 & ap_const_lv20_0);
    lhs_V_cast_fu_456_p1 <= std_logic_vector(resize(unsigned(lhs_V_fu_449_p3),65));
    lhs_V_fu_449_p3 <= (tmp_22_reg_810 & ap_const_lv20_0);
    magFrame_V_address0 <= magFrame_V_addr_reg_766;

    -- magFrame_V_ce0 assign process. --
    magFrame_V_ce0_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_st21_fsm_20 = ap_CS_fsm)) then 
            magFrame_V_ce0 <= ap_const_logic_1;
        else 
            magFrame_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    magFrame_V_d0 <= 
        neg_ti_i_fu_542_p2 when (tmp_29_reg_821(0) = '1') else 
        tmp_s_reg_874;

    -- magFrame_V_we0 assign process. --
    magFrame_V_we0_assign_proc : process(ap_CS_fsm)
    begin
        if (((ap_ST_st21_fsm_20 = ap_CS_fsm))) then 
            magFrame_V_we0 <= ap_const_logic_1;
        else 
            magFrame_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    mf_i_fu_336_p1 <= mt_i_cast_fu_332_p1;
    mf_i_fu_336_p2 <= std_logic_vector(unsigned(ap_const_lv53_0) - unsigned(mf_i_fu_336_p1));
    mt8_i_cast_fu_307_p2 <= std_logic_vector(unsigned(ap_const_lv52_0) - unsigned(p_shl_fu_299_p3));
    
    mt_i_fu_325_p3_temp <= signed(mt_i_fu_325_p3);
    mt_i_cast_fu_332_p1 <= std_logic_vector(resize(mt_i_fu_325_p3_temp,53));

    mt_i_fu_325_p3 <= (p_Val2_20_reg_756 & ap_const_lv20_0);
    neg_mul_i_fu_521_p2 <= std_logic_vector(unsigned(ap_const_lv105_0) - unsigned(mul_i_reg_868));
    neg_ti_i_fu_542_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(tmp_s_reg_874));
    not2_fu_678_p2 <= "1" when (p_Val2_20_reg_756 = ap_const_lv32_0) else "0";
    not3_fu_683_p2 <= "1" when (signed(p_Val2_21_reg_771) > signed(ap_const_lv32_0)) else "0";
    or_cond_fu_688_p2 <= (not2_fu_678_p2 and not3_fu_683_p2);
    p_Val2_7_i_cast_fu_701_p1 <= std_logic_vector(resize(unsigned(cordic_ctab_V_q0),32));
    p_shl_fu_299_p3 <= (imag_V_q0 & ap_const_lv20_0);
    phaseFrame_V_addr_2_gep_fu_147_p3 <= tmp_reg_736(10 - 1 downto 0);
    phaseFrame_V_addr_3_gep_fu_137_p3 <= tmp_reg_736(10 - 1 downto 0);
    phaseFrame_V_addr_gep_fu_155_p3 <= tmp_reg_736(10 - 1 downto 0);

    -- phaseFrame_V_address0 assign process. --
    phaseFrame_V_address0_assign_proc : process(ap_CS_fsm, tmp_reg_736, tmp_27_reg_778, tmp_i3_reg_880, exitcond5_fu_583_p2, tmp_32_fu_664_p3, or_cond_fu_688_p2, phaseFrame_V_addr_3_gep_fu_137_p3, phaseFrame_V_addr_2_gep_fu_147_p3, phaseFrame_V_addr_gep_fu_155_p3)
    begin
        if (((ap_ST_st22_fsm_21 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond5_fu_583_p2)) and not((ap_const_lv1_0 = tmp_i3_reg_880)))) then 
            phaseFrame_V_address0 <= phaseFrame_V_addr_gep_fu_155_p3;
        elsif (((ap_ST_st22_fsm_21 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond5_fu_583_p2)) and (ap_const_lv1_0 = tmp_i3_reg_880) and not((ap_const_lv1_0 = tmp_32_fu_664_p3)) and not((ap_const_lv1_0 = tmp_27_reg_778)))) then 
            phaseFrame_V_address0 <= phaseFrame_V_addr_2_gep_fu_147_p3;
        elsif ((((ap_ST_st22_fsm_21 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond5_fu_583_p2)) and (ap_const_lv1_0 = tmp_i3_reg_880) and (ap_const_lv1_0 = tmp_32_fu_664_p3) and not((ap_const_lv1_0 = or_cond_fu_688_p2))) or ((ap_ST_st22_fsm_21 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond5_fu_583_p2)) and (ap_const_lv1_0 = tmp_i3_reg_880) and (ap_const_lv1_0 = tmp_32_fu_664_p3) and (ap_const_lv1_0 = or_cond_fu_688_p2)))) then 
            phaseFrame_V_address0 <= phaseFrame_V_addr_3_gep_fu_137_p3;
        elsif (((ap_ST_st22_fsm_21 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond5_fu_583_p2)) and (ap_const_lv1_0 = tmp_i3_reg_880) and not((ap_const_lv1_0 = tmp_32_fu_664_p3)) and (ap_const_lv1_0 = tmp_27_reg_778))) then 
            phaseFrame_V_address0 <= tmp_reg_736(10 - 1 downto 0);
        else 
            phaseFrame_V_address0 <= tmp_reg_736(10 - 1 downto 0);
        end if; 
    end process;


    -- phaseFrame_V_ce0 assign process. --
    phaseFrame_V_ce0_assign_proc : process(ap_CS_fsm, tmp_27_reg_778, tmp_i3_reg_880, exitcond5_fu_583_p2, tmp_32_fu_664_p3, or_cond_fu_688_p2)
    begin
        if ((((ap_ST_st22_fsm_21 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond5_fu_583_p2)) and (ap_const_lv1_0 = tmp_i3_reg_880) and (ap_const_lv1_0 = tmp_32_fu_664_p3) and not((ap_const_lv1_0 = or_cond_fu_688_p2))) or ((ap_ST_st22_fsm_21 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond5_fu_583_p2)) and (ap_const_lv1_0 = tmp_i3_reg_880) and (ap_const_lv1_0 = tmp_32_fu_664_p3) and (ap_const_lv1_0 = or_cond_fu_688_p2)) or ((ap_ST_st22_fsm_21 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond5_fu_583_p2)) and (ap_const_lv1_0 = tmp_i3_reg_880) and not((ap_const_lv1_0 = tmp_32_fu_664_p3)) and not((ap_const_lv1_0 = tmp_27_reg_778))) or ((ap_ST_st22_fsm_21 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond5_fu_583_p2)) and (ap_const_lv1_0 = tmp_i3_reg_880) and not((ap_const_lv1_0 = tmp_32_fu_664_p3)) and (ap_const_lv1_0 = tmp_27_reg_778)) or ((ap_ST_st22_fsm_21 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond5_fu_583_p2)) and not((ap_const_lv1_0 = tmp_i3_reg_880))))) then 
            phaseFrame_V_ce0 <= ap_const_logic_1;
        else 
            phaseFrame_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- phaseFrame_V_d0 assign process. --
    phaseFrame_V_d0_assign_proc : process(tmp_i3_reg_880, p_Val2_31_reg_221, r_V_fu_671_p2, r_V_s_fu_694_p2, ap_sig_bdd_577, ap_sig_bdd_580, ap_sig_bdd_582, ap_sig_bdd_584, ap_sig_bdd_573)
    begin
        if (ap_sig_bdd_573) then
            if (not((ap_const_lv1_0 = tmp_i3_reg_880))) then 
                phaseFrame_V_d0 <= p_Val2_31_reg_221;
            elsif (ap_sig_bdd_584) then 
                phaseFrame_V_d0 <= r_V_s_fu_694_p2;
            elsif (ap_sig_bdd_582) then 
                phaseFrame_V_d0 <= ap_const_lv32_1921FB;
            elsif (ap_sig_bdd_580) then 
                phaseFrame_V_d0 <= ap_const_lv32_FFE6DE05;
            elsif (ap_sig_bdd_577) then 
                phaseFrame_V_d0 <= r_V_fu_671_p2;
            else 
                phaseFrame_V_d0 <= r_V_s_fu_694_p2;
            end if;
        else 
            phaseFrame_V_d0 <= r_V_s_fu_694_p2;
        end if; 
    end process;


    -- phaseFrame_V_we0 assign process. --
    phaseFrame_V_we0_assign_proc : process(ap_CS_fsm, tmp_27_reg_778, tmp_i3_reg_880, exitcond5_fu_583_p2, tmp_32_fu_664_p3, or_cond_fu_688_p2)
    begin
        if ((((ap_ST_st22_fsm_21 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond5_fu_583_p2)) and (ap_const_lv1_0 = tmp_i3_reg_880) and (ap_const_lv1_0 = tmp_32_fu_664_p3) and not((ap_const_lv1_0 = or_cond_fu_688_p2))) or ((ap_ST_st22_fsm_21 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond5_fu_583_p2)) and (ap_const_lv1_0 = tmp_i3_reg_880) and (ap_const_lv1_0 = tmp_32_fu_664_p3) and (ap_const_lv1_0 = or_cond_fu_688_p2)) or ((ap_ST_st22_fsm_21 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond5_fu_583_p2)) and (ap_const_lv1_0 = tmp_i3_reg_880) and not((ap_const_lv1_0 = tmp_32_fu_664_p3)) and not((ap_const_lv1_0 = tmp_27_reg_778))) or ((ap_ST_st22_fsm_21 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond5_fu_583_p2)) and (ap_const_lv1_0 = tmp_i3_reg_880) and not((ap_const_lv1_0 = tmp_32_fu_664_p3)) and (ap_const_lv1_0 = tmp_27_reg_778)) or ((ap_ST_st22_fsm_21 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond5_fu_583_p2)) and not((ap_const_lv1_0 = tmp_i3_reg_880))))) then 
            phaseFrame_V_we0 <= ap_const_logic_1;
        else 
            phaseFrame_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    r_V_12_i_fu_711_p2 <= std_logic_vector(unsigned(p_Val2_7_i_cast_fu_701_p1) + unsigned(p_Val2_31_reg_221));
    r_V_17_fu_313_p3 <= 
        mt8_i_cast_fu_307_p2 when (tmp_27_fu_291_p3(0) = '1') else 
        p_shl_fu_299_p3;
    r_V_18_fu_342_p1 <= mt_i_cast_fu_332_p1;
    r_V_18_fu_342_p3 <= 
        r_V_18_fu_342_p1 when (tmp_27_fu_291_p3(0) = '1') else 
        mf_i_fu_336_p2;
    r_V_20_fu_464_p2 <= std_logic_vector(unsigned(lhs_V_cast_fu_456_p1) - unsigned(rhs_V2_i_fu_460_p1));
    r_V_22_fu_489_p2 <= std_logic_vector(unsigned(lhs_V_1_cast_fu_481_p1) + unsigned(rhs_V_203_i_fu_485_p1));
    r_V_23_fu_607_p2 <= std_logic_vector(shift_right(signed(p_Val2_29_reg_234),to_integer(unsigned('0' & sh_assign_1_i_cast_fu_603_p1(31-1 downto 0)))));
    r_V_24_fu_619_p2 <= std_logic_vector(shift_right(signed(t_V_4_reg_243),to_integer(unsigned('0' & sh_assign_1_i_cast_fu_603_p1(31-1 downto 0)))));
    r_V_48_cast_fu_321_p1 <= std_logic_vector(resize(unsigned(r_V_17_fu_313_p3),65));
    r_V_7_fu_392_p2 <= std_logic_vector(shift_right(signed(ai_V_1_reg_191),to_integer(unsigned('0' & sh_assign_5_cast_cast_fu_388_p1(22-1 downto 0)))));
    r_V_fu_671_p2 <= std_logic_vector(unsigned(p_Val2_31_reg_221) + unsigned(ap_const_lv32_3243F6));
    r_V_i_fu_705_p2 <= std_logic_vector(unsigned(p_Val2_31_reg_221) - unsigned(p_Val2_7_i_cast_fu_701_p1));
    r_V_s_fu_694_p2 <= std_logic_vector(unsigned(p_Val2_31_reg_221) + unsigned(ap_const_lv32_FFCDBC0A));
    real_V_address0 <= tmp_fu_286_p1(10 - 1 downto 0);

    -- real_V_ce0 assign process. --
    real_V_ce0_assign_proc : process(ap_CS_fsm, exitcond6_fu_274_p2)
    begin
        if (((ap_ST_st2_fsm_1 = ap_CS_fsm) and (exitcond6_fu_274_p2 = ap_const_lv1_0))) then 
            real_V_ce0 <= ap_const_logic_1;
        else 
            real_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    
    r_V_19_reg_843_temp <= signed(r_V_19_reg_843);
    rhs_V2_i_fu_460_p0 <= std_logic_vector(resize(r_V_19_reg_843_temp,64));

    rhs_V2_i_fu_460_p1 <= std_logic_vector(resize(unsigned(rhs_V2_i_fu_460_p0),65));
    
    r_V_21_reg_848_temp <= signed(r_V_21_reg_848);
    rhs_V_203_i_fu_485_p0 <= std_logic_vector(resize(r_V_21_reg_848_temp,64));

    rhs_V_203_i_fu_485_p1 <= std_logic_vector(resize(unsigned(rhs_V_203_i_fu_485_p0),65));
    sel_i_fu_526_p3 <= 
        neg_mul_i_fu_521_p2 when (tmp_29_reg_821(0) = '1') else 
        mul_i_reg_868;
    sh_assign_1_i_cast_fu_603_p1 <= std_logic_vector(resize(unsigned(step_2_reg_252),32));
    sh_assign_5_cast_cast_fu_388_p1 <= std_logic_vector(resize(unsigned(i_2_reg_210),22));
    step_fu_589_p2 <= std_logic_vector(unsigned(step_2_reg_252) + unsigned(ap_const_lv7_1));
    storemerge_i_fu_717_p3 <= 
        r_V_i_fu_705_p2 when (tmp_31_reg_902(0) = '1') else 
        r_V_12_i_fu_711_p2;
    t_V_fu_398_p3 <= (grp_fu_264_p4 & ap_const_lv20_0);
    tmp_27_fu_291_p3 <= imag_V_q0(31 downto 31);
    tmp_28_fu_360_p3 <= r_V_18_fu_342_p3(51 downto 51);
    tmp_30_fu_505_p3 <= r_V_22_fu_489_p2(51 downto 51);
    tmp_31_fu_595_p3 <= p_Val2_29_reg_234(31 downto 31);
    tmp_32_fu_664_p3 <= p_Val2_20_reg_756(31 downto 31);
    tmp_6_i_fu_631_p1 <= std_logic_vector(resize(unsigned(step_2_reg_252),64));
    tmp_fu_286_p1 <= std_logic_vector(resize(unsigned(i_reg_163),64));
    tmp_i3_fu_554_p2 <= "1" when (signed(p_Val2_20_reg_756) > signed(ap_const_lv32_0)) else "0";
    x_iteration_V_1_fu_576_p3 <= 
        p_Val2_20_reg_756 when (tmp_i3_fu_554_p2(0) = '1') else 
        x_iteration_V_fu_559_p2;
    x_iteration_V_3_fu_613_p2 <= std_logic_vector(unsigned(t_V_4_reg_243) - unsigned(r_V_23_fu_607_p2));
    x_iteration_V_4_fu_636_p2 <= std_logic_vector(unsigned(r_V_23_fu_607_p2) + unsigned(t_V_4_reg_243));
    x_iteration_V_5_fu_656_p3 <= 
        x_iteration_V_3_fu_613_p2 when (tmp_31_fu_595_p3(0) = '1') else 
        x_iteration_V_4_fu_636_p2;
    x_iteration_V_fu_559_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(p_Val2_20_reg_756));
    y_iteration_V_1_fu_564_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(p_Val2_21_reg_771));
    y_iteration_V_2_fu_569_p3 <= 
        p_Val2_21_reg_771 when (tmp_i3_fu_554_p2(0) = '1') else 
        y_iteration_V_1_fu_564_p2;
    y_iteration_V_4_fu_642_p2 <= std_logic_vector(unsigned(p_Val2_29_reg_234) - unsigned(r_V_24_fu_619_p2));
    y_iteration_V_5_fu_648_p3 <= 
        y_iteration_V_fu_625_p2 when (tmp_31_fu_595_p3(0) = '1') else 
        y_iteration_V_4_fu_642_p2;
    y_iteration_V_fu_625_p2 <= std_logic_vector(unsigned(r_V_24_fu_619_p2) + unsigned(p_Val2_29_reg_234));
end behav;
