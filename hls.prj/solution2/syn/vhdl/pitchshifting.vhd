-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2013.2
-- Copyright (C) 2013 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pitchshifting is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    amplitude_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    amplitude_V_ce0 : OUT STD_LOGIC;
    amplitude_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    angle_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    angle_V_ce0 : OUT STD_LOGIC;
    angle_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    previousPhase_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    previousPhase_V_ce0 : OUT STD_LOGIC;
    previousPhase_V_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    time_domain_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    time_domain_V_ce0 : OUT STD_LOGIC;
    time_domain_V_we0 : OUT STD_LOGIC;
    time_domain_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of pitchshifting is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (5 downto 0) := "000101";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (5 downto 0) := "000110";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (5 downto 0) := "000111";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (5 downto 0) := "001001";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (5 downto 0) := "001010";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (5 downto 0) := "001011";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (5 downto 0) := "001100";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (5 downto 0) := "001101";
    constant ap_ST_st15_fsm_14 : STD_LOGIC_VECTOR (5 downto 0) := "001110";
    constant ap_ST_st16_fsm_15 : STD_LOGIC_VECTOR (5 downto 0) := "001111";
    constant ap_ST_st17_fsm_16 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_st18_fsm_17 : STD_LOGIC_VECTOR (5 downto 0) := "010001";
    constant ap_ST_st19_fsm_18 : STD_LOGIC_VECTOR (5 downto 0) := "010010";
    constant ap_ST_st20_fsm_19 : STD_LOGIC_VECTOR (5 downto 0) := "010011";
    constant ap_ST_st21_fsm_20 : STD_LOGIC_VECTOR (5 downto 0) := "010100";
    constant ap_ST_st22_fsm_21 : STD_LOGIC_VECTOR (5 downto 0) := "010101";
    constant ap_ST_st23_fsm_22 : STD_LOGIC_VECTOR (5 downto 0) := "010110";
    constant ap_ST_st24_fsm_23 : STD_LOGIC_VECTOR (5 downto 0) := "010111";
    constant ap_ST_st25_fsm_24 : STD_LOGIC_VECTOR (5 downto 0) := "011000";
    constant ap_ST_st26_fsm_25 : STD_LOGIC_VECTOR (5 downto 0) := "011001";
    constant ap_ST_st27_fsm_26 : STD_LOGIC_VECTOR (5 downto 0) := "011010";
    constant ap_ST_st28_fsm_27 : STD_LOGIC_VECTOR (5 downto 0) := "011011";
    constant ap_ST_st29_fsm_28 : STD_LOGIC_VECTOR (5 downto 0) := "011100";
    constant ap_ST_st30_fsm_29 : STD_LOGIC_VECTOR (5 downto 0) := "011101";
    constant ap_ST_st31_fsm_30 : STD_LOGIC_VECTOR (5 downto 0) := "011110";
    constant ap_ST_st32_fsm_31 : STD_LOGIC_VECTOR (5 downto 0) := "011111";
    constant ap_ST_st33_fsm_32 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_ST_st34_fsm_33 : STD_LOGIC_VECTOR (5 downto 0) := "100001";
    constant ap_ST_st35_fsm_34 : STD_LOGIC_VECTOR (5 downto 0) := "100010";
    constant ap_ST_st36_fsm_35 : STD_LOGIC_VECTOR (5 downto 0) := "100011";
    constant ap_ST_st37_fsm_36 : STD_LOGIC_VECTOR (5 downto 0) := "100100";
    constant ap_ST_st38_fsm_37 : STD_LOGIC_VECTOR (5 downto 0) := "100101";
    constant ap_ST_st39_fsm_38 : STD_LOGIC_VECTOR (5 downto 0) := "100110";
    constant ap_ST_st40_fsm_39 : STD_LOGIC_VECTOR (5 downto 0) := "100111";
    constant ap_ST_st41_fsm_40 : STD_LOGIC_VECTOR (5 downto 0) := "101000";
    constant ap_ST_st42_fsm_41 : STD_LOGIC_VECTOR (5 downto 0) := "101001";
    constant ap_ST_st43_fsm_42 : STD_LOGIC_VECTOR (5 downto 0) := "101010";
    constant ap_ST_st44_fsm_43 : STD_LOGIC_VECTOR (5 downto 0) := "101011";
    constant ap_ST_st45_fsm_44 : STD_LOGIC_VECTOR (5 downto 0) := "101100";
    constant ap_ST_st46_fsm_45 : STD_LOGIC_VECTOR (5 downto 0) := "101101";
    constant ap_ST_st47_fsm_46 : STD_LOGIC_VECTOR (5 downto 0) := "101110";
    constant ap_ST_st48_fsm_47 : STD_LOGIC_VECTOR (5 downto 0) := "101111";
    constant ap_ST_st49_fsm_48 : STD_LOGIC_VECTOR (5 downto 0) := "110000";
    constant ap_ST_st50_fsm_49 : STD_LOGIC_VECTOR (5 downto 0) := "110001";
    constant ap_ST_st51_fsm_50 : STD_LOGIC_VECTOR (5 downto 0) := "110010";
    constant ap_ST_st52_fsm_51 : STD_LOGIC_VECTOR (5 downto 0) := "110011";
    constant ap_ST_st53_fsm_52 : STD_LOGIC_VECTOR (5 downto 0) := "110100";
    constant ap_ST_st54_fsm_53 : STD_LOGIC_VECTOR (5 downto 0) := "110101";
    constant ap_ST_st55_fsm_54 : STD_LOGIC_VECTOR (5 downto 0) := "110110";
    constant ap_ST_st56_fsm_55 : STD_LOGIC_VECTOR (5 downto 0) := "110111";
    constant ap_ST_st57_fsm_56 : STD_LOGIC_VECTOR (5 downto 0) := "111000";
    constant ap_ST_st58_fsm_57 : STD_LOGIC_VECTOR (5 downto 0) := "111001";
    constant ap_ST_st59_fsm_58 : STD_LOGIC_VECTOR (5 downto 0) := "111010";
    constant ap_ST_st60_fsm_59 : STD_LOGIC_VECTOR (5 downto 0) := "111011";
    constant ap_ST_st61_fsm_60 : STD_LOGIC_VECTOR (5 downto 0) := "111100";
    constant ap_ST_st62_fsm_61 : STD_LOGIC_VECTOR (5 downto 0) := "111101";
    constant ap_ST_st63_fsm_62 : STD_LOGIC_VECTOR (5 downto 0) := "111110";
    constant ap_ST_st64_fsm_63 : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv33_0 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000000";
    constant ap_const_lv41_0 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv11_400 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv41_6487EC00 : STD_LOGIC_VECTOR (40 downto 0) := "00000000001100100100001111110110000000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv33_3243F6 : STD_LOGIC_VECTOR (32 downto 0) := "000000000001100100100001111110110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv105_145F30B21788BC : STD_LOGIC_VECTOR (104 downto 0) := "000000000000000000000000000000000000000000000000000010100010111110011000010110010000101111000100010111100";
    constant ap_const_lv105_0 : STD_LOGIC_VECTOR (104 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv32_68 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv52_6487EC : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000011001001000011111101100";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_3243F6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000001100100100001111110110";
    constant ap_const_lv32_FFCDBC0A : STD_LOGIC_VECTOR (31 downto 0) := "11111111110011011011110000001010";
    constant ap_const_lv33_6487EC : STD_LOGIC_VECTOR (32 downto 0) := "000000000011001001000011111101100";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv25_0 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000000";
    constant ap_const_lv32_143 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101000011";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_1921FB : STD_LOGIC_VECTOR (31 downto 0) := "00000000000110010010000111111011";
    constant ap_const_lv32_4B65F1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000010010110110010111110001";
    constant ap_const_lv31_7FB49A0F : STD_LOGIC_VECTOR (30 downto 0) := "1111111101101001001101000001111";
    constant ap_const_lv21_DBC0A : STD_LOGIC_VECTOR (20 downto 0) := "011011011110000001010";
    constant ap_const_lv21_6DE05 : STD_LOGIC_VECTOR (20 downto 0) := "001101101111000000101";
    constant ap_const_lv157_lc_1 : STD_LOGIC_VECTOR (156 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000001011010100000100111101100110011111110011110010110100101101010110100110111001101010111";
    constant ap_const_lv157_lc_2 : STD_LOGIC_VECTOR (156 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_69 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101001";
    constant ap_const_lv32_9C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011100";
    constant ap_const_lv65_0 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal wn_V_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal wn_V_1_ce0 : STD_LOGIC;
    signal wn_V_1_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_391_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_reg_1364 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_50_reg_1368 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_68_i_reg_1372 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cordic_fu_376_ap_done : STD_LOGIC;
    signal grp_fu_397_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_fu_421_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_reg_1137 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_fu_427_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_reg_1142 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond5_fu_415_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal next_mul7_fu_433_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal next_mul7_reg_1160 : STD_LOGIC_VECTOR (40 downto 0);
    signal p_lshr_f_cast_reg_1165 : STD_LOGIC_VECTOR (30 downto 0);
    signal deltaPhiPrime_fu_462_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal deltaPhiPrime_reg_1170 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_477_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_1175 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_fu_483_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_reg_1179 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_reg_1184 : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_fu_495_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal t_V_reg_1190 : STD_LOGIC_VECTOR (51 downto 0);
    signal grp_fu_506_p2 : STD_LOGIC_VECTOR (104 downto 0);
    signal mul_i_reg_1200 : STD_LOGIC_VECTOR (104 downto 0);
    signal trunc_i_cast_fu_533_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_41_fu_523_p4_temp: signed (30-1 downto 0);
    signal trunc_i_cast_reg_1206 : STD_LOGIC_VECTOR (30 downto 0);
    signal neg_ti_i_fu_537_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal neg_ti_i_reg_1211 : STD_LOGIC_VECTOR (30 downto 0);
    signal result_fu_594_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_reg_1216 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_611_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal rhs_V3_i_cast_reg_1226 : STD_LOGIC_VECTOR (51 downto 0);
    signal next_mul_fu_645_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal next_mul_reg_1231 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_lshr_f1_cast_reg_1236 : STD_LOGIC_VECTOR (22 downto 0);
    signal phaseCumulative_V_addr_1_reg_1246 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_55_reg_1251 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_reg_1256 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_32_reg_1261 : STD_LOGIC_VECTOR (23 downto 0);
    signal trueFreq_fu_729_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal trueFreq_reg_1266 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_738_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_16_reg_1276 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_1_fu_756_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal j_1_reg_1284 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_5_fu_762_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_reg_1289 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond4_fu_750_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_7_fu_767_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal t_V_7_reg_1301 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_49_reg_1311 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_779_p2 : STD_LOGIC_VECTOR (104 downto 0);
    signal mul_i1_reg_1317 : STD_LOGIC_VECTOR (104 downto 0);
    signal trunc_i1_cast_fu_814_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_50_fu_804_p4_temp: signed (30-1 downto 0);
    signal trunc_i1_cast_reg_1323 : STD_LOGIC_VECTOR (30 downto 0);
    signal neg_ti_i1_fu_818_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal neg_ti_i1_reg_1328 : STD_LOGIC_VECTOR (30 downto 0);
    signal result_2_fu_875_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_2_reg_1333 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_892_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal rhs_V3_i58_cast_reg_1343 : STD_LOGIC_VECTOR (51 downto 0);
    signal real_angle_V_fu_902_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal real_angle_V_reg_1348 : STD_LOGIC_VECTOR (31 downto 0);
    signal agg_result_V_i61_cast1_reg_1353 : STD_LOGIC_VECTOR (30 downto 0);
    signal agg_result_V_i61_cast_reg_1358 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_i_fu_933_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_50_fu_939_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_68_i_fu_945_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_65_i_cast_fu_956_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_65_i_cast_reg_1376 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_64_i_cast_fu_966_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_64_i_cast_reg_1396 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_i_cast_fu_976_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_i_cast_reg_1401 : STD_LOGIC_VECTOR (31 downto 0);
    signal OP1_V_cast_fu_981_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal amplitude_V_q0_temp: signed (32-1 downto 0);
    signal m_1_fu_1033_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal m_1_reg_1435 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_16_fu_1039_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_reg_1440 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond3_fu_1027_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_56_reg_1470 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1071_p2 : STD_LOGIC_VECTOR (156 downto 0);
    signal mul_reg_1476 : STD_LOGIC_VECTOR (156 downto 0);
    signal neg_mul_fu_1085_p2 : STD_LOGIC_VECTOR (156 downto 0);
    signal neg_mul_reg_1481 : STD_LOGIC_VECTOR (156 downto 0);
    signal deltaPhiPrimeMod_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal deltaPhiPrimeMod_V_ce0 : STD_LOGIC;
    signal deltaPhiPrimeMod_V_we0 : STD_LOGIC;
    signal deltaPhiPrimeMod_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal deltaPhiPrimeMod_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal phaseCumulative_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal phaseCumulative_V_ce0 : STD_LOGIC;
    signal phaseCumulative_V_we0 : STD_LOGIC;
    signal phaseCumulative_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal phaseCumulative_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal real_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal real_V_ce0 : STD_LOGIC;
    signal real_V_we0 : STD_LOGIC;
    signal real_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal real_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal real_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal real_V_ce1 : STD_LOGIC;
    signal real_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal imag_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal imag_V_ce0 : STD_LOGIC;
    signal imag_V_we0 : STD_LOGIC;
    signal imag_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal imag_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal imag_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal imag_V_ce1 : STD_LOGIC;
    signal imag_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_IFFT_fu_370_ap_start : STD_LOGIC;
    signal grp_IFFT_fu_370_ap_done : STD_LOGIC;
    signal grp_IFFT_fu_370_ap_idle : STD_LOGIC;
    signal grp_IFFT_fu_370_ap_ready : STD_LOGIC;
    signal grp_IFFT_fu_370_xreal_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_IFFT_fu_370_xreal_V_ce0 : STD_LOGIC;
    signal grp_IFFT_fu_370_xreal_V_we0 : STD_LOGIC;
    signal grp_IFFT_fu_370_xreal_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_IFFT_fu_370_xreal_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_IFFT_fu_370_xreal_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_IFFT_fu_370_xreal_V_ce1 : STD_LOGIC;
    signal grp_IFFT_fu_370_xreal_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_IFFT_fu_370_ximag_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_IFFT_fu_370_ximag_V_ce0 : STD_LOGIC;
    signal grp_IFFT_fu_370_ximag_V_we0 : STD_LOGIC;
    signal grp_IFFT_fu_370_ximag_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_IFFT_fu_370_ximag_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_IFFT_fu_370_ximag_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_IFFT_fu_370_ximag_V_ce1 : STD_LOGIC;
    signal grp_IFFT_fu_370_ximag_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cordic_fu_376_ap_start : STD_LOGIC;
    signal grp_cordic_fu_376_ap_idle : STD_LOGIC;
    signal grp_cordic_fu_376_ap_ready : STD_LOGIC;
    signal grp_cordic_fu_376_theta_V : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cordic_fu_376_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cordic_fu_376_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_5_reg_287 : STD_LOGIC_VECTOR (10 downto 0);
    signal phi_mul_reg_298 : STD_LOGIC_VECTOR (32 downto 0);
    signal phi_mul6_reg_310 : STD_LOGIC_VECTOR (40 downto 0);
    signal j_reg_321 : STD_LOGIC_VECTOR (10 downto 0);
    signal sin_value_V_reg_332 : STD_LOGIC_VECTOR (31 downto 0);
    signal cos_value_V_reg_345 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_reg_358 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_IFFT_fu_370_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal grp_cordic_fu_376_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal deltaPhiPrimeMod_V_addr_1_gep_fu_180_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal deltaPhiPrimeMod_V_addr_gep_fu_191_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_8_fu_631_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_7_fu_638_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_46_fu_449_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal deltaPhi_fu_453_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_459_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_fu_471_p0 : STD_LOGIC_VECTOR (32 downto 0);
    signal deltaPhiPrime_reg_1170_temp: signed (32-1 downto 0);
    signal r_V_fu_471_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_fu_506_p0 : STD_LOGIC_VECTOR (51 downto 0);
    signal grp_fu_506_p1 : STD_LOGIC_VECTOR (52 downto 0);
    signal neg_mul_i_fu_512_p2 : STD_LOGIC_VECTOR (104 downto 0);
    signal sel_i_fu_517_p3 : STD_LOGIC_VECTOR (104 downto 0);
    signal tmp_41_fu_523_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal neg_ti_i_fu_537_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_i5_fu_543_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_45_fu_548_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal ret_V_1_i_fu_574_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i6_fu_558_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_45_fu_548_p4_temp: signed (11-1 downto 0);
    signal tmp_47_fu_570_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_1_i_fu_580_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_i_fu_586_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_1_i_fu_574_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_46_fu_562_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_i_fu_586_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_fu_594_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_48_fu_602_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_611_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_611_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal r_V_32_fu_617_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Val2_55_fu_621_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_V_1_fu_661_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_neg1_fu_677_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_lshr1_cast_fu_703_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_neg_t1_fu_706_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_21_cast_fu_712_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_12_fu_715_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal trueFreq_fu_729_p0 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_12_fu_715_p3_temp: signed (25-1 downto 0);
    signal tmp_25_cast_fu_726_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_738_p0 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_738_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_779_p0 : STD_LOGIC_VECTOR (51 downto 0);
    signal grp_fu_779_p1 : STD_LOGIC_VECTOR (52 downto 0);
    signal neg_mul_i1_fu_793_p2 : STD_LOGIC_VECTOR (104 downto 0);
    signal sel_i1_fu_798_p3 : STD_LOGIC_VECTOR (104 downto 0);
    signal tmp_50_fu_804_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal neg_ti_i1_fu_818_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_i1_fu_824_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_51_fu_829_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal ret_V_1_i1_fu_855_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i1_49_fu_839_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_51_fu_829_p4_temp: signed (11-1 downto 0);
    signal tmp_53_fu_851_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_1_i1_fu_861_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_i1_fu_867_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_1_i1_fu_855_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_52_fu_843_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_i1_fu_867_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_2_fu_875_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_54_fu_883_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_892_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_892_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal r_V_33_fu_898_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal r_V_65_i_fu_951_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_64_i_fu_961_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_i_fu_971_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_989_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_989_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_999_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_999_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_989_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal grp_fu_999_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal grp_fu_1053_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1053_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1053_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_33_fu_1059_p3 : STD_LOGIC_VECTOR (71 downto 0);
    signal grp_fu_1071_p0 : STD_LOGIC_VECTOR (71 downto 0);
    signal grp_fu_1071_p1 : STD_LOGIC_VECTOR (84 downto 0);
    signal sel_fu_1091_p3 : STD_LOGIC_VECTOR (156 downto 0);
    signal tmp_57_fu_1096_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal neg_ti_fu_1110_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal trunc_cast_fu_1106_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal tmp_57_fu_1096_p4_temp: signed (52-1 downto 0);
    signal neg_ti_fu_1110_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal tmp_18_fu_1116_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal tmp_18_fu_1116_p3 : STD_LOGIC_VECTOR (64 downto 0);
    signal grp_fu_506_ce : STD_LOGIC;
    signal grp_fu_611_ce : STD_LOGIC;
    signal grp_fu_738_ce : STD_LOGIC;
    signal grp_fu_779_ce : STD_LOGIC;
    signal grp_fu_892_ce : STD_LOGIC;
    signal grp_fu_989_ce : STD_LOGIC;
    signal grp_fu_999_ce : STD_LOGIC;
    signal grp_fu_1053_ce : STD_LOGIC;
    signal grp_fu_1071_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1053_p00 : STD_LOGIC_VECTOR (51 downto 0);

    component IFFT IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        xreal_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        xreal_V_ce0 : OUT STD_LOGIC;
        xreal_V_we0 : OUT STD_LOGIC;
        xreal_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        xreal_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        xreal_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        xreal_V_ce1 : OUT STD_LOGIC;
        xreal_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ximag_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        ximag_V_ce0 : OUT STD_LOGIC;
        ximag_V_we0 : OUT STD_LOGIC;
        ximag_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ximag_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ximag_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        ximag_V_ce1 : OUT STD_LOGIC;
        ximag_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cordic IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        theta_V : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component combine_mul_52s_53ns_105_11 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (51 downto 0);
        din1 : IN STD_LOGIC_VECTOR (52 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (104 downto 0) );
    end component;


    component combine_mul_32s_23ns_52_3 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (22 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (51 downto 0) );
    end component;


    component combine_mul_26s_9ns_32_3 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (25 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component combine_mul_32s_32s_52_6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (51 downto 0) );
    end component;


    component combine_mul_20ns_32s_52_3 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (19 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (51 downto 0) );
    end component;


    component combine_mul_72s_85ns_157_2 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (71 downto 0);
        din1 : IN STD_LOGIC_VECTOR (84 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (156 downto 0) );
    end component;


    component pitchshifting_wn_V_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component pitchshifting_deltaPhiPrimeMod_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component pitchshifting_real_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    wn_V_1_U : component pitchshifting_wn_V_1
    generic map (
        DataWidth => 20,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => wn_V_1_address0,
        ce0 => wn_V_1_ce0,
        q0 => wn_V_1_q0);

    deltaPhiPrimeMod_V_U : component pitchshifting_deltaPhiPrimeMod_V
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => deltaPhiPrimeMod_V_address0,
        ce0 => deltaPhiPrimeMod_V_ce0,
        we0 => deltaPhiPrimeMod_V_we0,
        d0 => deltaPhiPrimeMod_V_d0,
        q0 => deltaPhiPrimeMod_V_q0);

    phaseCumulative_V_U : component pitchshifting_deltaPhiPrimeMod_V
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => phaseCumulative_V_address0,
        ce0 => phaseCumulative_V_ce0,
        we0 => phaseCumulative_V_we0,
        d0 => phaseCumulative_V_d0,
        q0 => phaseCumulative_V_q0);

    real_V_U : component pitchshifting_real_V
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => real_V_address0,
        ce0 => real_V_ce0,
        we0 => real_V_we0,
        d0 => real_V_d0,
        q0 => real_V_q0,
        address1 => real_V_address1,
        ce1 => real_V_ce1,
        q1 => real_V_q1);

    imag_V_U : component pitchshifting_real_V
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => imag_V_address0,
        ce0 => imag_V_ce0,
        we0 => imag_V_we0,
        d0 => imag_V_d0,
        q0 => imag_V_q0,
        address1 => imag_V_address1,
        ce1 => imag_V_ce1,
        q1 => imag_V_q1);

    grp_IFFT_fu_370 : component IFFT
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_IFFT_fu_370_ap_start,
        ap_done => grp_IFFT_fu_370_ap_done,
        ap_idle => grp_IFFT_fu_370_ap_idle,
        ap_ready => grp_IFFT_fu_370_ap_ready,
        xreal_V_address0 => grp_IFFT_fu_370_xreal_V_address0,
        xreal_V_ce0 => grp_IFFT_fu_370_xreal_V_ce0,
        xreal_V_we0 => grp_IFFT_fu_370_xreal_V_we0,
        xreal_V_d0 => grp_IFFT_fu_370_xreal_V_d0,
        xreal_V_q0 => grp_IFFT_fu_370_xreal_V_q0,
        xreal_V_address1 => grp_IFFT_fu_370_xreal_V_address1,
        xreal_V_ce1 => grp_IFFT_fu_370_xreal_V_ce1,
        xreal_V_q1 => grp_IFFT_fu_370_xreal_V_q1,
        ximag_V_address0 => grp_IFFT_fu_370_ximag_V_address0,
        ximag_V_ce0 => grp_IFFT_fu_370_ximag_V_ce0,
        ximag_V_we0 => grp_IFFT_fu_370_ximag_V_we0,
        ximag_V_d0 => grp_IFFT_fu_370_ximag_V_d0,
        ximag_V_q0 => grp_IFFT_fu_370_ximag_V_q0,
        ximag_V_address1 => grp_IFFT_fu_370_ximag_V_address1,
        ximag_V_ce1 => grp_IFFT_fu_370_ximag_V_ce1,
        ximag_V_q1 => grp_IFFT_fu_370_ximag_V_q1);

    grp_cordic_fu_376 : component cordic
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_cordic_fu_376_ap_start,
        ap_done => grp_cordic_fu_376_ap_done,
        ap_idle => grp_cordic_fu_376_ap_idle,
        ap_ready => grp_cordic_fu_376_ap_ready,
        theta_V => grp_cordic_fu_376_theta_V,
        ap_return_0 => grp_cordic_fu_376_ap_return_0,
        ap_return_1 => grp_cordic_fu_376_ap_return_1);

    combine_mul_52s_53ns_105_11_U37 : component combine_mul_52s_53ns_105_11
    generic map (
        ID => 37,
        NUM_STAGE => 11,
        din0_WIDTH => 52,
        din1_WIDTH => 53,
        dout_WIDTH => 105)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_506_p0,
        din1 => grp_fu_506_p1,
        ce => grp_fu_506_ce,
        dout => grp_fu_506_p2);

    combine_mul_32s_23ns_52_3_U38 : component combine_mul_32s_23ns_52_3
    generic map (
        ID => 38,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 23,
        dout_WIDTH => 52)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_611_p0,
        din1 => grp_fu_611_p1,
        ce => grp_fu_611_ce,
        dout => grp_fu_611_p2);

    combine_mul_26s_9ns_32_3_U39 : component combine_mul_26s_9ns_32_3
    generic map (
        ID => 39,
        NUM_STAGE => 3,
        din0_WIDTH => 26,
        din1_WIDTH => 9,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_738_p0,
        din1 => grp_fu_738_p1,
        ce => grp_fu_738_ce,
        dout => grp_fu_738_p2);

    combine_mul_52s_53ns_105_11_U40 : component combine_mul_52s_53ns_105_11
    generic map (
        ID => 40,
        NUM_STAGE => 11,
        din0_WIDTH => 52,
        din1_WIDTH => 53,
        dout_WIDTH => 105)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_779_p0,
        din1 => grp_fu_779_p1,
        ce => grp_fu_779_ce,
        dout => grp_fu_779_p2);

    combine_mul_32s_23ns_52_3_U41 : component combine_mul_32s_23ns_52_3
    generic map (
        ID => 41,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 23,
        dout_WIDTH => 52)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_892_p0,
        din1 => grp_fu_892_p1,
        ce => grp_fu_892_ce,
        dout => grp_fu_892_p2);

    combine_mul_32s_32s_52_6_U42 : component combine_mul_32s_32s_52_6
    generic map (
        ID => 42,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 52)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_989_p0,
        din1 => grp_fu_989_p1,
        ce => grp_fu_989_ce,
        dout => grp_fu_989_p2);

    combine_mul_32s_32s_52_6_U43 : component combine_mul_32s_32s_52_6
    generic map (
        ID => 43,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 52)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_999_p0,
        din1 => grp_fu_999_p1,
        ce => grp_fu_999_ce,
        dout => grp_fu_999_p2);

    combine_mul_20ns_32s_52_3_U44 : component combine_mul_20ns_32s_52_3
    generic map (
        ID => 44,
        NUM_STAGE => 3,
        din0_WIDTH => 20,
        din1_WIDTH => 32,
        dout_WIDTH => 52)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1053_p0,
        din1 => grp_fu_1053_p1,
        ce => grp_fu_1053_ce,
        dout => grp_fu_1053_p2);

    combine_mul_72s_85ns_157_2_U45 : component combine_mul_72s_85ns_157_2
    generic map (
        ID => 45,
        NUM_STAGE => 2,
        din0_WIDTH => 72,
        din1_WIDTH => 85,
        dout_WIDTH => 157)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1071_p0,
        din1 => grp_fu_1071_p1,
        ce => grp_fu_1071_ce,
        dout => grp_fu_1071_p2);




    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- grp_IFFT_fu_370_ap_start_ap_start_reg assign process. --
    grp_IFFT_fu_370_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_IFFT_fu_370_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_ST_st29_fsm_28 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond4_fu_750_p2)))) then 
                    grp_IFFT_fu_370_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_IFFT_fu_370_ap_ready)) then 
                    grp_IFFT_fu_370_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- grp_cordic_fu_376_ap_start_ap_start_reg assign process. --
    grp_cordic_fu_376_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_cordic_fu_376_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_ST_st47_fsm_46 = ap_CS_fsm) or (ap_ST_st49_fsm_48 = ap_CS_fsm) or (ap_ST_st50_fsm_49 = ap_CS_fsm) or ((ap_ST_st46_fsm_45 = ap_CS_fsm) and not((ap_const_lv1_0 = tmp_i_fu_933_p2))))) then 
                    grp_cordic_fu_376_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_cordic_fu_376_ap_ready)) then 
                    grp_cordic_fu_376_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- cos_value_V_reg_345 assign process. --
    cos_value_V_reg_345_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st51_fsm_50 = ap_CS_fsm) and not((ap_const_logic_0 = grp_cordic_fu_376_ap_done)))) then 
                cos_value_V_reg_345 <= grp_cordic_fu_376_ap_return_1;
            elsif (((ap_ST_st48_fsm_47 = ap_CS_fsm) and (tmp_i_reg_1364 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_i_50_reg_1368)) and not((((tmp_i_reg_1364 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_i_50_reg_1368) and (ap_const_lv1_0 = tmp_68_i_reg_1372) and (ap_const_logic_0 = grp_cordic_fu_376_ap_done)) or ((tmp_i_reg_1364 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_i_50_reg_1368) and not((ap_const_lv1_0 = tmp_68_i_reg_1372)) and (ap_const_logic_0 = grp_cordic_fu_376_ap_done)) or ((tmp_i_reg_1364 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_i_50_reg_1368)) and (ap_const_logic_0 = grp_cordic_fu_376_ap_done)))))) then 
                cos_value_V_reg_345 <= grp_fu_397_p2;
            elsif (((ap_ST_st48_fsm_47 = ap_CS_fsm) and (tmp_i_reg_1364 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_i_50_reg_1368) and not((ap_const_lv1_0 = tmp_68_i_reg_1372)) and not((((tmp_i_reg_1364 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_i_50_reg_1368) and (ap_const_lv1_0 = tmp_68_i_reg_1372) and (ap_const_logic_0 = grp_cordic_fu_376_ap_done)) or ((tmp_i_reg_1364 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_i_50_reg_1368) and not((ap_const_lv1_0 = tmp_68_i_reg_1372)) and (ap_const_logic_0 = grp_cordic_fu_376_ap_done)) or ((tmp_i_reg_1364 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_i_50_reg_1368)) and (ap_const_logic_0 = grp_cordic_fu_376_ap_done)))))) then 
                cos_value_V_reg_345 <= grp_fu_391_p2;
            elsif (((ap_ST_st48_fsm_47 = ap_CS_fsm) and (tmp_i_reg_1364 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_i_50_reg_1368) and (ap_const_lv1_0 = tmp_68_i_reg_1372) and not((((tmp_i_reg_1364 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_i_50_reg_1368) and (ap_const_lv1_0 = tmp_68_i_reg_1372) and (ap_const_logic_0 = grp_cordic_fu_376_ap_done)) or ((tmp_i_reg_1364 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_i_50_reg_1368) and not((ap_const_lv1_0 = tmp_68_i_reg_1372)) and (ap_const_logic_0 = grp_cordic_fu_376_ap_done)) or ((tmp_i_reg_1364 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_i_50_reg_1368)) and (ap_const_logic_0 = grp_cordic_fu_376_ap_done)))))) then 
                cos_value_V_reg_345 <= grp_cordic_fu_376_ap_return_0;
            end if; 
        end if;
    end process;

    -- i_5_reg_287 assign process. --
    i_5_reg_287_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not((ap_start = ap_const_logic_0)))) then 
                i_5_reg_287 <= ap_const_lv11_0;
            elsif ((ap_ST_st28_fsm_27 = ap_CS_fsm)) then 
                i_5_reg_287 <= i_reg_1137;
            end if; 
        end if;
    end process;

    -- j_reg_321 assign process. --
    j_reg_321_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st2_fsm_1 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond5_fu_415_p2)))) then 
                j_reg_321 <= ap_const_lv11_0;
            elsif ((ap_ST_st57_fsm_56 = ap_CS_fsm)) then 
                j_reg_321 <= j_1_reg_1284;
            end if; 
        end if;
    end process;

    -- m_reg_358 assign process. --
    m_reg_358_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st64_fsm_63 = ap_CS_fsm)) then 
                m_reg_358 <= m_1_reg_1435;
            elsif (((ap_ST_st58_fsm_57 = ap_CS_fsm) and not((ap_const_logic_0 = grp_IFFT_fu_370_ap_done)))) then 
                m_reg_358 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    -- phi_mul6_reg_310 assign process. --
    phi_mul6_reg_310_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not((ap_start = ap_const_logic_0)))) then 
                phi_mul6_reg_310 <= ap_const_lv41_0;
            elsif ((ap_ST_st28_fsm_27 = ap_CS_fsm)) then 
                phi_mul6_reg_310 <= next_mul7_reg_1160;
            end if; 
        end if;
    end process;

    -- phi_mul_reg_298 assign process. --
    phi_mul_reg_298_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not((ap_start = ap_const_logic_0)))) then 
                phi_mul_reg_298 <= ap_const_lv33_0;
            elsif ((ap_ST_st28_fsm_27 = ap_CS_fsm)) then 
                phi_mul_reg_298 <= next_mul_reg_1231;
            end if; 
        end if;
    end process;

    -- sin_value_V_reg_332 assign process. --
    sin_value_V_reg_332_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st51_fsm_50 = ap_CS_fsm) and not((ap_const_logic_0 = grp_cordic_fu_376_ap_done)))) then 
                sin_value_V_reg_332 <= grp_cordic_fu_376_ap_return_0;
            elsif (((ap_ST_st48_fsm_47 = ap_CS_fsm) and (tmp_i_reg_1364 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_i_50_reg_1368)) and not((((tmp_i_reg_1364 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_i_50_reg_1368) and (ap_const_lv1_0 = tmp_68_i_reg_1372) and (ap_const_logic_0 = grp_cordic_fu_376_ap_done)) or ((tmp_i_reg_1364 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_i_50_reg_1368) and not((ap_const_lv1_0 = tmp_68_i_reg_1372)) and (ap_const_logic_0 = grp_cordic_fu_376_ap_done)) or ((tmp_i_reg_1364 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_i_50_reg_1368)) and (ap_const_logic_0 = grp_cordic_fu_376_ap_done)))))) then 
                sin_value_V_reg_332 <= grp_cordic_fu_376_ap_return_1;
            elsif (((ap_ST_st48_fsm_47 = ap_CS_fsm) and (tmp_i_reg_1364 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_i_50_reg_1368) and not((ap_const_lv1_0 = tmp_68_i_reg_1372)) and not((((tmp_i_reg_1364 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_i_50_reg_1368) and (ap_const_lv1_0 = tmp_68_i_reg_1372) and (ap_const_logic_0 = grp_cordic_fu_376_ap_done)) or ((tmp_i_reg_1364 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_i_50_reg_1368) and not((ap_const_lv1_0 = tmp_68_i_reg_1372)) and (ap_const_logic_0 = grp_cordic_fu_376_ap_done)) or ((tmp_i_reg_1364 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_i_50_reg_1368)) and (ap_const_logic_0 = grp_cordic_fu_376_ap_done)))))) then 
                sin_value_V_reg_332 <= grp_fu_397_p2;
            elsif (((ap_ST_st48_fsm_47 = ap_CS_fsm) and (tmp_i_reg_1364 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_i_50_reg_1368) and (ap_const_lv1_0 = tmp_68_i_reg_1372) and not((((tmp_i_reg_1364 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_i_50_reg_1368) and (ap_const_lv1_0 = tmp_68_i_reg_1372) and (ap_const_logic_0 = grp_cordic_fu_376_ap_done)) or ((tmp_i_reg_1364 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_i_50_reg_1368) and not((ap_const_lv1_0 = tmp_68_i_reg_1372)) and (ap_const_logic_0 = grp_cordic_fu_376_ap_done)) or ((tmp_i_reg_1364 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_i_50_reg_1368)) and (ap_const_logic_0 = grp_cordic_fu_376_ap_done)))))) then 
                sin_value_V_reg_332 <= grp_fu_391_p2;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st46_fsm_45 = ap_CS_fsm)) then
                agg_result_V_i61_cast1_reg_1353 <= r_V_33_fu_898_p2(50 downto 20);
                agg_result_V_i61_cast_reg_1358 <= r_V_33_fu_898_p2(40 downto 20);
                real_angle_V_reg_1348 <= r_V_33_fu_898_p2(51 downto 20);
                tmp_i_reg_1364 <= tmp_i_fu_933_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st3_fsm_2 = ap_CS_fsm)) then
                deltaPhiPrime_reg_1170 <= deltaPhiPrime_fu_462_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then
                i_reg_1137 <= i_fu_421_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st29_fsm_28 = ap_CS_fsm)) then
                j_1_reg_1284 <= j_1_fu_756_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st59_fsm_58 = ap_CS_fsm)) then
                m_1_reg_1435 <= m_1_fu_1033_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st40_fsm_39 = ap_CS_fsm)) then
                mul_i1_reg_1317 <= grp_fu_779_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st15_fsm_14 = ap_CS_fsm)) then
                mul_i_reg_1200 <= grp_fu_506_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st63_fsm_62 = ap_CS_fsm)) then
                mul_reg_1476 <= grp_fu_1071_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st63_fsm_62 = ap_CS_fsm) and not((ap_const_lv1_0 = tmp_56_reg_1470)))) then
                neg_mul_reg_1481 <= neg_mul_fu_1085_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st41_fsm_40 = ap_CS_fsm) and not((ap_const_lv1_0 = tmp_49_reg_1311)))) then
                neg_ti_i1_reg_1328 <= neg_ti_i1_fu_818_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st16_fsm_15 = ap_CS_fsm) and not((ap_const_lv1_0 = tmp_40_reg_1184)))) then
                neg_ti_i_reg_1211 <= neg_ti_i_fu_537_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st2_fsm_1 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond5_fu_415_p2))) then
                next_mul7_reg_1160 <= next_mul7_fu_433_p2;
                p_lshr_f_cast_reg_1165 <= phi_mul6_reg_310(40 downto 10);
                tmp_reg_1142(0) <= tmp_fu_427_p1(0);
    tmp_reg_1142(1) <= tmp_fu_427_p1(1);
    tmp_reg_1142(2) <= tmp_fu_427_p1(2);
    tmp_reg_1142(3) <= tmp_fu_427_p1(3);
    tmp_reg_1142(4) <= tmp_fu_427_p1(4);
    tmp_reg_1142(5) <= tmp_fu_427_p1(5);
    tmp_reg_1142(6) <= tmp_fu_427_p1(6);
    tmp_reg_1142(7) <= tmp_fu_427_p1(7);
    tmp_reg_1142(8) <= tmp_fu_427_p1(8);
    tmp_reg_1142(9) <= tmp_fu_427_p1(9);
    tmp_reg_1142(10) <= tmp_fu_427_p1(10);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st21_fsm_20 = ap_CS_fsm)) then
                next_mul_reg_1231 <= next_mul_fu_645_p2;
                p_lshr_f1_cast_reg_1236 <= phi_mul_reg_298(32 downto 10);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st22_fsm_21 = ap_CS_fsm)) then
                phaseCumulative_V_addr_1_reg_1246 <= tmp_reg_1142(10 - 1 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st27_fsm_26 = ap_CS_fsm)) then
                r_V_16_reg_1276 <= grp_fu_738_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st49_fsm_48 = ap_CS_fsm)) then
                r_V_64_i_cast_reg_1396(0) <= r_V_64_i_cast_fu_966_p1(0);
    r_V_64_i_cast_reg_1396(1) <= r_V_64_i_cast_fu_966_p1(1);
    r_V_64_i_cast_reg_1396(2) <= r_V_64_i_cast_fu_966_p1(2);
    r_V_64_i_cast_reg_1396(3) <= r_V_64_i_cast_fu_966_p1(3);
    r_V_64_i_cast_reg_1396(4) <= r_V_64_i_cast_fu_966_p1(4);
    r_V_64_i_cast_reg_1396(5) <= r_V_64_i_cast_fu_966_p1(5);
    r_V_64_i_cast_reg_1396(6) <= r_V_64_i_cast_fu_966_p1(6);
    r_V_64_i_cast_reg_1396(7) <= r_V_64_i_cast_fu_966_p1(7);
    r_V_64_i_cast_reg_1396(8) <= r_V_64_i_cast_fu_966_p1(8);
    r_V_64_i_cast_reg_1396(9) <= r_V_64_i_cast_fu_966_p1(9);
    r_V_64_i_cast_reg_1396(10) <= r_V_64_i_cast_fu_966_p1(10);
    r_V_64_i_cast_reg_1396(11) <= r_V_64_i_cast_fu_966_p1(11);
    r_V_64_i_cast_reg_1396(12) <= r_V_64_i_cast_fu_966_p1(12);
    r_V_64_i_cast_reg_1396(13) <= r_V_64_i_cast_fu_966_p1(13);
    r_V_64_i_cast_reg_1396(14) <= r_V_64_i_cast_fu_966_p1(14);
    r_V_64_i_cast_reg_1396(15) <= r_V_64_i_cast_fu_966_p1(15);
    r_V_64_i_cast_reg_1396(16) <= r_V_64_i_cast_fu_966_p1(16);
    r_V_64_i_cast_reg_1396(17) <= r_V_64_i_cast_fu_966_p1(17);
    r_V_64_i_cast_reg_1396(18) <= r_V_64_i_cast_fu_966_p1(18);
    r_V_64_i_cast_reg_1396(19) <= r_V_64_i_cast_fu_966_p1(19);
    r_V_64_i_cast_reg_1396(20) <= r_V_64_i_cast_fu_966_p1(20);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st47_fsm_46 = ap_CS_fsm)) then
                r_V_65_i_cast_reg_1376(0) <= r_V_65_i_cast_fu_956_p1(0);
    r_V_65_i_cast_reg_1376(1) <= r_V_65_i_cast_fu_956_p1(1);
    r_V_65_i_cast_reg_1376(2) <= r_V_65_i_cast_fu_956_p1(2);
    r_V_65_i_cast_reg_1376(3) <= r_V_65_i_cast_fu_956_p1(3);
    r_V_65_i_cast_reg_1376(4) <= r_V_65_i_cast_fu_956_p1(4);
    r_V_65_i_cast_reg_1376(5) <= r_V_65_i_cast_fu_956_p1(5);
    r_V_65_i_cast_reg_1376(6) <= r_V_65_i_cast_fu_956_p1(6);
    r_V_65_i_cast_reg_1376(7) <= r_V_65_i_cast_fu_956_p1(7);
    r_V_65_i_cast_reg_1376(8) <= r_V_65_i_cast_fu_956_p1(8);
    r_V_65_i_cast_reg_1376(9) <= r_V_65_i_cast_fu_956_p1(9);
    r_V_65_i_cast_reg_1376(10) <= r_V_65_i_cast_fu_956_p1(10);
    r_V_65_i_cast_reg_1376(11) <= r_V_65_i_cast_fu_956_p1(11);
    r_V_65_i_cast_reg_1376(12) <= r_V_65_i_cast_fu_956_p1(12);
    r_V_65_i_cast_reg_1376(13) <= r_V_65_i_cast_fu_956_p1(13);
    r_V_65_i_cast_reg_1376(14) <= r_V_65_i_cast_fu_956_p1(14);
    r_V_65_i_cast_reg_1376(15) <= r_V_65_i_cast_fu_956_p1(15);
    r_V_65_i_cast_reg_1376(16) <= r_V_65_i_cast_fu_956_p1(16);
    r_V_65_i_cast_reg_1376(17) <= r_V_65_i_cast_fu_956_p1(17);
    r_V_65_i_cast_reg_1376(18) <= r_V_65_i_cast_fu_956_p1(18);
    r_V_65_i_cast_reg_1376(19) <= r_V_65_i_cast_fu_956_p1(19);
    r_V_65_i_cast_reg_1376(20) <= r_V_65_i_cast_fu_956_p1(20);
    r_V_65_i_cast_reg_1376(21) <= r_V_65_i_cast_fu_956_p1(21);
    r_V_65_i_cast_reg_1376(22) <= r_V_65_i_cast_fu_956_p1(22);
    r_V_65_i_cast_reg_1376(23) <= r_V_65_i_cast_fu_956_p1(23);
    r_V_65_i_cast_reg_1376(24) <= r_V_65_i_cast_fu_956_p1(24);
    r_V_65_i_cast_reg_1376(25) <= r_V_65_i_cast_fu_956_p1(25);
    r_V_65_i_cast_reg_1376(26) <= r_V_65_i_cast_fu_956_p1(26);
    r_V_65_i_cast_reg_1376(27) <= r_V_65_i_cast_fu_956_p1(27);
    r_V_65_i_cast_reg_1376(28) <= r_V_65_i_cast_fu_956_p1(28);
    r_V_65_i_cast_reg_1376(29) <= r_V_65_i_cast_fu_956_p1(29);
    r_V_65_i_cast_reg_1376(30) <= r_V_65_i_cast_fu_956_p1(30);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st50_fsm_49 = ap_CS_fsm)) then
                r_V_i_cast_reg_1401(0) <= r_V_i_cast_fu_976_p1(0);
    r_V_i_cast_reg_1401(1) <= r_V_i_cast_fu_976_p1(1);
    r_V_i_cast_reg_1401(2) <= r_V_i_cast_fu_976_p1(2);
    r_V_i_cast_reg_1401(3) <= r_V_i_cast_fu_976_p1(3);
    r_V_i_cast_reg_1401(4) <= r_V_i_cast_fu_976_p1(4);
    r_V_i_cast_reg_1401(5) <= r_V_i_cast_fu_976_p1(5);
    r_V_i_cast_reg_1401(6) <= r_V_i_cast_fu_976_p1(6);
    r_V_i_cast_reg_1401(7) <= r_V_i_cast_fu_976_p1(7);
    r_V_i_cast_reg_1401(8) <= r_V_i_cast_fu_976_p1(8);
    r_V_i_cast_reg_1401(9) <= r_V_i_cast_fu_976_p1(9);
    r_V_i_cast_reg_1401(10) <= r_V_i_cast_fu_976_p1(10);
    r_V_i_cast_reg_1401(11) <= r_V_i_cast_fu_976_p1(11);
    r_V_i_cast_reg_1401(12) <= r_V_i_cast_fu_976_p1(12);
    r_V_i_cast_reg_1401(13) <= r_V_i_cast_fu_976_p1(13);
    r_V_i_cast_reg_1401(14) <= r_V_i_cast_fu_976_p1(14);
    r_V_i_cast_reg_1401(15) <= r_V_i_cast_fu_976_p1(15);
    r_V_i_cast_reg_1401(16) <= r_V_i_cast_fu_976_p1(16);
    r_V_i_cast_reg_1401(17) <= r_V_i_cast_fu_976_p1(17);
    r_V_i_cast_reg_1401(18) <= r_V_i_cast_fu_976_p1(18);
    r_V_i_cast_reg_1401(19) <= r_V_i_cast_fu_976_p1(19);
    r_V_i_cast_reg_1401(20) <= r_V_i_cast_fu_976_p1(20);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st42_fsm_41 = ap_CS_fsm)) then
                result_2_reg_1333 <= result_2_fu_875_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st17_fsm_16 = ap_CS_fsm)) then
                result_reg_1216 <= result_fu_594_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st45_fsm_44 = ap_CS_fsm)) then
                rhs_V3_i58_cast_reg_1343 <= grp_fu_892_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st20_fsm_19 = ap_CS_fsm)) then
                rhs_V3_i_cast_reg_1226 <= grp_fu_611_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st30_fsm_29 = ap_CS_fsm)) then
                t_V_7_reg_1301(20) <= t_V_7_fu_767_p3(20);
    t_V_7_reg_1301(21) <= t_V_7_fu_767_p3(21);
    t_V_7_reg_1301(22) <= t_V_7_fu_767_p3(22);
    t_V_7_reg_1301(23) <= t_V_7_fu_767_p3(23);
    t_V_7_reg_1301(24) <= t_V_7_fu_767_p3(24);
    t_V_7_reg_1301(25) <= t_V_7_fu_767_p3(25);
    t_V_7_reg_1301(26) <= t_V_7_fu_767_p3(26);
    t_V_7_reg_1301(27) <= t_V_7_fu_767_p3(27);
    t_V_7_reg_1301(28) <= t_V_7_fu_767_p3(28);
    t_V_7_reg_1301(29) <= t_V_7_fu_767_p3(29);
    t_V_7_reg_1301(30) <= t_V_7_fu_767_p3(30);
    t_V_7_reg_1301(31) <= t_V_7_fu_767_p3(31);
    t_V_7_reg_1301(32) <= t_V_7_fu_767_p3(32);
    t_V_7_reg_1301(33) <= t_V_7_fu_767_p3(33);
    t_V_7_reg_1301(34) <= t_V_7_fu_767_p3(34);
    t_V_7_reg_1301(35) <= t_V_7_fu_767_p3(35);
    t_V_7_reg_1301(36) <= t_V_7_fu_767_p3(36);
    t_V_7_reg_1301(37) <= t_V_7_fu_767_p3(37);
    t_V_7_reg_1301(38) <= t_V_7_fu_767_p3(38);
    t_V_7_reg_1301(39) <= t_V_7_fu_767_p3(39);
    t_V_7_reg_1301(40) <= t_V_7_fu_767_p3(40);
    t_V_7_reg_1301(41) <= t_V_7_fu_767_p3(41);
    t_V_7_reg_1301(42) <= t_V_7_fu_767_p3(42);
    t_V_7_reg_1301(43) <= t_V_7_fu_767_p3(43);
    t_V_7_reg_1301(44) <= t_V_7_fu_767_p3(44);
    t_V_7_reg_1301(45) <= t_V_7_fu_767_p3(45);
    t_V_7_reg_1301(46) <= t_V_7_fu_767_p3(46);
    t_V_7_reg_1301(47) <= t_V_7_fu_767_p3(47);
    t_V_7_reg_1301(48) <= t_V_7_fu_767_p3(48);
    t_V_7_reg_1301(49) <= t_V_7_fu_767_p3(49);
    t_V_7_reg_1301(50) <= t_V_7_fu_767_p3(50);
    t_V_7_reg_1301(51) <= t_V_7_fu_767_p3(51);
                tmp_49_reg_1311 <= phaseCumulative_V_q0(31 downto 31);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st5_fsm_4 = ap_CS_fsm)) then
                t_V_reg_1190(20) <= t_V_fu_495_p3(20);
    t_V_reg_1190(21) <= t_V_fu_495_p3(21);
    t_V_reg_1190(22) <= t_V_fu_495_p3(22);
    t_V_reg_1190(23) <= t_V_fu_495_p3(23);
    t_V_reg_1190(24) <= t_V_fu_495_p3(24);
    t_V_reg_1190(25) <= t_V_fu_495_p3(25);
    t_V_reg_1190(26) <= t_V_fu_495_p3(26);
    t_V_reg_1190(27) <= t_V_fu_495_p3(27);
    t_V_reg_1190(28) <= t_V_fu_495_p3(28);
    t_V_reg_1190(29) <= t_V_fu_495_p3(29);
    t_V_reg_1190(30) <= t_V_fu_495_p3(30);
    t_V_reg_1190(31) <= t_V_fu_495_p3(31);
    t_V_reg_1190(32) <= t_V_fu_495_p3(32);
    t_V_reg_1190(33) <= t_V_fu_495_p3(33);
    t_V_reg_1190(34) <= t_V_fu_495_p3(34);
    t_V_reg_1190(35) <= t_V_fu_495_p3(35);
    t_V_reg_1190(36) <= t_V_fu_495_p3(36);
    t_V_reg_1190(37) <= t_V_fu_495_p3(37);
    t_V_reg_1190(38) <= t_V_fu_495_p3(38);
    t_V_reg_1190(39) <= t_V_fu_495_p3(39);
    t_V_reg_1190(40) <= t_V_fu_495_p3(40);
    t_V_reg_1190(41) <= t_V_fu_495_p3(41);
    t_V_reg_1190(42) <= t_V_fu_495_p3(42);
    t_V_reg_1190(43) <= t_V_fu_495_p3(43);
    t_V_reg_1190(44) <= t_V_fu_495_p3(44);
    t_V_reg_1190(45) <= t_V_fu_495_p3(45);
    t_V_reg_1190(46) <= t_V_fu_495_p3(46);
    t_V_reg_1190(47) <= t_V_fu_495_p3(47);
    t_V_reg_1190(48) <= t_V_fu_495_p3(48);
    t_V_reg_1190(49) <= t_V_fu_495_p3(49);
    t_V_reg_1190(50) <= t_V_fu_495_p3(50);
    t_V_reg_1190(51) <= t_V_fu_495_p3(51);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st59_fsm_58 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond3_fu_1027_p2))) then
                tmp_16_reg_1440(0) <= tmp_16_fu_1039_p1(0);
    tmp_16_reg_1440(1) <= tmp_16_fu_1039_p1(1);
    tmp_16_reg_1440(2) <= tmp_16_fu_1039_p1(2);
    tmp_16_reg_1440(3) <= tmp_16_fu_1039_p1(3);
    tmp_16_reg_1440(4) <= tmp_16_fu_1039_p1(4);
    tmp_16_reg_1440(5) <= tmp_16_fu_1039_p1(5);
    tmp_16_reg_1440(6) <= tmp_16_fu_1039_p1(6);
    tmp_16_reg_1440(7) <= tmp_16_fu_1039_p1(7);
    tmp_16_reg_1440(8) <= tmp_16_fu_1039_p1(8);
    tmp_16_reg_1440(9) <= tmp_16_fu_1039_p1(9);
    tmp_16_reg_1440(10) <= tmp_16_fu_1039_p1(10);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st23_fsm_22 = ap_CS_fsm)) then
                tmp_31_reg_1256 <= p_neg1_fu_677_p2(51 downto 28);
                tmp_32_reg_1261 <= deltaPhiPrimeMod_V_q0(31 downto 8);
                tmp_55_reg_1251 <= deltaPhiPrimeMod_V_q0(31 downto 31);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st4_fsm_3 = ap_CS_fsm)) then
                tmp_39_reg_1179 <= tmp_39_fu_483_p1;
                tmp_40_reg_1184 <= r_V_fu_471_p2(31 downto 31);
                tmp_s_reg_1175 <= tmp_s_fu_477_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st62_fsm_61 = ap_CS_fsm)) then
                tmp_56_reg_1470 <= grp_fu_1053_p2(51 downto 51);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st29_fsm_28 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond4_fu_750_p2))) then
                tmp_5_reg_1289(0) <= tmp_5_fu_762_p1(0);
    tmp_5_reg_1289(1) <= tmp_5_fu_762_p1(1);
    tmp_5_reg_1289(2) <= tmp_5_fu_762_p1(2);
    tmp_5_reg_1289(3) <= tmp_5_fu_762_p1(3);
    tmp_5_reg_1289(4) <= tmp_5_fu_762_p1(4);
    tmp_5_reg_1289(5) <= tmp_5_fu_762_p1(5);
    tmp_5_reg_1289(6) <= tmp_5_fu_762_p1(6);
    tmp_5_reg_1289(7) <= tmp_5_fu_762_p1(7);
    tmp_5_reg_1289(8) <= tmp_5_fu_762_p1(8);
    tmp_5_reg_1289(9) <= tmp_5_fu_762_p1(9);
    tmp_5_reg_1289(10) <= tmp_5_fu_762_p1(10);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st46_fsm_45 = ap_CS_fsm) and (ap_const_lv1_0 = tmp_i_fu_933_p2) and (ap_const_lv1_0 = tmp_i_50_fu_939_p2))) then
                tmp_68_i_reg_1372 <= tmp_68_i_fu_945_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st46_fsm_45 = ap_CS_fsm) and (ap_const_lv1_0 = tmp_i_fu_933_p2))) then
                tmp_i_50_reg_1368 <= tmp_i_50_fu_939_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st24_fsm_23 = ap_CS_fsm)) then
                trueFreq_reg_1266 <= trueFreq_fu_729_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st41_fsm_40 = ap_CS_fsm)) then
                trunc_i1_cast_reg_1323 <= trunc_i1_cast_fu_814_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st16_fsm_15 = ap_CS_fsm)) then
                trunc_i_cast_reg_1206 <= trunc_i_cast_fu_533_p1;
            end if;
        end if;
    end process;
    tmp_reg_1142(63 downto 11) <= "00000000000000000000000000000000000000000000000000000";
    t_V_reg_1190(19 downto 0) <= "00000000000000000000";
    tmp_5_reg_1289(63 downto 11) <= "00000000000000000000000000000000000000000000000000000";
    t_V_7_reg_1301(19 downto 0) <= "00000000000000000000";
    r_V_65_i_cast_reg_1376(31) <= '0';
    r_V_64_i_cast_reg_1396(31 downto 21) <= "00000000000";
    r_V_i_cast_reg_1401(31 downto 21) <= "00000000000";
    tmp_16_reg_1440(63 downto 11) <= "00000000000000000000000000000000000000000000000000000";

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_start , ap_CS_fsm , tmp_i_reg_1364 , tmp_i_50_reg_1368 , tmp_68_i_reg_1372 , grp_cordic_fu_376_ap_done , exitcond5_fu_415_p2 , exitcond4_fu_750_p2 , tmp_i_fu_933_p2 , tmp_i_50_fu_939_p2 , tmp_68_i_fu_945_p2 , exitcond3_fu_1027_p2 , grp_IFFT_fu_370_ap_done)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((ap_const_lv1_0 = exitcond5_fu_415_p2))) then
                    ap_NS_fsm <= ap_ST_st29_fsm_28;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st3_fsm_2 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_st6_fsm_5;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_st7_fsm_6;
            when ap_ST_st7_fsm_6 => 
                ap_NS_fsm <= ap_ST_st8_fsm_7;
            when ap_ST_st8_fsm_7 => 
                ap_NS_fsm <= ap_ST_st9_fsm_8;
            when ap_ST_st9_fsm_8 => 
                ap_NS_fsm <= ap_ST_st10_fsm_9;
            when ap_ST_st10_fsm_9 => 
                ap_NS_fsm <= ap_ST_st11_fsm_10;
            when ap_ST_st11_fsm_10 => 
                ap_NS_fsm <= ap_ST_st12_fsm_11;
            when ap_ST_st12_fsm_11 => 
                ap_NS_fsm <= ap_ST_st13_fsm_12;
            when ap_ST_st13_fsm_12 => 
                ap_NS_fsm <= ap_ST_st14_fsm_13;
            when ap_ST_st14_fsm_13 => 
                ap_NS_fsm <= ap_ST_st15_fsm_14;
            when ap_ST_st15_fsm_14 => 
                ap_NS_fsm <= ap_ST_st16_fsm_15;
            when ap_ST_st16_fsm_15 => 
                ap_NS_fsm <= ap_ST_st17_fsm_16;
            when ap_ST_st17_fsm_16 => 
                ap_NS_fsm <= ap_ST_st18_fsm_17;
            when ap_ST_st18_fsm_17 => 
                ap_NS_fsm <= ap_ST_st19_fsm_18;
            when ap_ST_st19_fsm_18 => 
                ap_NS_fsm <= ap_ST_st20_fsm_19;
            when ap_ST_st20_fsm_19 => 
                ap_NS_fsm <= ap_ST_st21_fsm_20;
            when ap_ST_st21_fsm_20 => 
                ap_NS_fsm <= ap_ST_st22_fsm_21;
            when ap_ST_st22_fsm_21 => 
                ap_NS_fsm <= ap_ST_st23_fsm_22;
            when ap_ST_st23_fsm_22 => 
                ap_NS_fsm <= ap_ST_st24_fsm_23;
            when ap_ST_st24_fsm_23 => 
                ap_NS_fsm <= ap_ST_st25_fsm_24;
            when ap_ST_st25_fsm_24 => 
                ap_NS_fsm <= ap_ST_st26_fsm_25;
            when ap_ST_st26_fsm_25 => 
                ap_NS_fsm <= ap_ST_st27_fsm_26;
            when ap_ST_st27_fsm_26 => 
                ap_NS_fsm <= ap_ST_st28_fsm_27;
            when ap_ST_st28_fsm_27 => 
                ap_NS_fsm <= ap_ST_st2_fsm_1;
            when ap_ST_st29_fsm_28 => 
                if (not((ap_const_lv1_0 = exitcond4_fu_750_p2))) then
                    ap_NS_fsm <= ap_ST_st58_fsm_57;
                else
                    ap_NS_fsm <= ap_ST_st30_fsm_29;
                end if;
            when ap_ST_st30_fsm_29 => 
                ap_NS_fsm <= ap_ST_st31_fsm_30;
            when ap_ST_st31_fsm_30 => 
                ap_NS_fsm <= ap_ST_st32_fsm_31;
            when ap_ST_st32_fsm_31 => 
                ap_NS_fsm <= ap_ST_st33_fsm_32;
            when ap_ST_st33_fsm_32 => 
                ap_NS_fsm <= ap_ST_st34_fsm_33;
            when ap_ST_st34_fsm_33 => 
                ap_NS_fsm <= ap_ST_st35_fsm_34;
            when ap_ST_st35_fsm_34 => 
                ap_NS_fsm <= ap_ST_st36_fsm_35;
            when ap_ST_st36_fsm_35 => 
                ap_NS_fsm <= ap_ST_st37_fsm_36;
            when ap_ST_st37_fsm_36 => 
                ap_NS_fsm <= ap_ST_st38_fsm_37;
            when ap_ST_st38_fsm_37 => 
                ap_NS_fsm <= ap_ST_st39_fsm_38;
            when ap_ST_st39_fsm_38 => 
                ap_NS_fsm <= ap_ST_st40_fsm_39;
            when ap_ST_st40_fsm_39 => 
                ap_NS_fsm <= ap_ST_st41_fsm_40;
            when ap_ST_st41_fsm_40 => 
                ap_NS_fsm <= ap_ST_st42_fsm_41;
            when ap_ST_st42_fsm_41 => 
                ap_NS_fsm <= ap_ST_st43_fsm_42;
            when ap_ST_st43_fsm_42 => 
                ap_NS_fsm <= ap_ST_st44_fsm_43;
            when ap_ST_st44_fsm_43 => 
                ap_NS_fsm <= ap_ST_st45_fsm_44;
            when ap_ST_st45_fsm_44 => 
                ap_NS_fsm <= ap_ST_st46_fsm_45;
            when ap_ST_st46_fsm_45 => 
                if (((ap_const_lv1_0 = tmp_i_fu_933_p2) and (ap_const_lv1_0 = tmp_i_50_fu_939_p2) and not((ap_const_lv1_0 = tmp_68_i_fu_945_p2)))) then
                    ap_NS_fsm <= ap_ST_st49_fsm_48;
                elsif (((ap_const_lv1_0 = tmp_i_fu_933_p2) and (ap_const_lv1_0 = tmp_i_50_fu_939_p2) and (ap_const_lv1_0 = tmp_68_i_fu_945_p2))) then
                    ap_NS_fsm <= ap_ST_st47_fsm_46;
                elsif (((ap_const_lv1_0 = tmp_i_fu_933_p2) and not((ap_const_lv1_0 = tmp_i_50_fu_939_p2)))) then
                    ap_NS_fsm <= ap_ST_st50_fsm_49;
                else
                    ap_NS_fsm <= ap_ST_st51_fsm_50;
                end if;
            when ap_ST_st47_fsm_46 => 
                ap_NS_fsm <= ap_ST_st48_fsm_47;
            when ap_ST_st48_fsm_47 => 
                if (not((((tmp_i_reg_1364 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_i_50_reg_1368) and (ap_const_lv1_0 = tmp_68_i_reg_1372) and (ap_const_logic_0 = grp_cordic_fu_376_ap_done)) or ((tmp_i_reg_1364 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_i_50_reg_1368) and not((ap_const_lv1_0 = tmp_68_i_reg_1372)) and (ap_const_logic_0 = grp_cordic_fu_376_ap_done)) or ((tmp_i_reg_1364 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_i_50_reg_1368)) and (ap_const_logic_0 = grp_cordic_fu_376_ap_done))))) then
                    ap_NS_fsm <= ap_ST_st52_fsm_51;
                else
                    ap_NS_fsm <= ap_ST_st48_fsm_47;
                end if;
            when ap_ST_st49_fsm_48 => 
                ap_NS_fsm <= ap_ST_st48_fsm_47;
            when ap_ST_st50_fsm_49 => 
                ap_NS_fsm <= ap_ST_st48_fsm_47;
            when ap_ST_st51_fsm_50 => 
                if (not((ap_const_logic_0 = grp_cordic_fu_376_ap_done))) then
                    ap_NS_fsm <= ap_ST_st48_fsm_47;
                else
                    ap_NS_fsm <= ap_ST_st51_fsm_50;
                end if;
            when ap_ST_st52_fsm_51 => 
                ap_NS_fsm <= ap_ST_st53_fsm_52;
            when ap_ST_st53_fsm_52 => 
                ap_NS_fsm <= ap_ST_st54_fsm_53;
            when ap_ST_st54_fsm_53 => 
                ap_NS_fsm <= ap_ST_st55_fsm_54;
            when ap_ST_st55_fsm_54 => 
                ap_NS_fsm <= ap_ST_st56_fsm_55;
            when ap_ST_st56_fsm_55 => 
                ap_NS_fsm <= ap_ST_st57_fsm_56;
            when ap_ST_st57_fsm_56 => 
                ap_NS_fsm <= ap_ST_st29_fsm_28;
            when ap_ST_st58_fsm_57 => 
                if (not((ap_const_logic_0 = grp_IFFT_fu_370_ap_done))) then
                    ap_NS_fsm <= ap_ST_st59_fsm_58;
                else
                    ap_NS_fsm <= ap_ST_st58_fsm_57;
                end if;
            when ap_ST_st59_fsm_58 => 
                if (not((ap_const_lv1_0 = exitcond3_fu_1027_p2))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st60_fsm_59;
                end if;
            when ap_ST_st60_fsm_59 => 
                ap_NS_fsm <= ap_ST_st61_fsm_60;
            when ap_ST_st61_fsm_60 => 
                ap_NS_fsm <= ap_ST_st62_fsm_61;
            when ap_ST_st62_fsm_61 => 
                ap_NS_fsm <= ap_ST_st63_fsm_62;
            when ap_ST_st63_fsm_62 => 
                ap_NS_fsm <= ap_ST_st64_fsm_63;
            when ap_ST_st64_fsm_63 => 
                ap_NS_fsm <= ap_ST_st59_fsm_58;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    
    amplitude_V_q0_temp <= signed(amplitude_V_q0);
    OP1_V_cast_fu_981_p1 <= std_logic_vector(resize(amplitude_V_q0_temp,52));

    amplitude_V_address0 <= tmp_5_reg_1289(10 - 1 downto 0);

    -- amplitude_V_ce0 assign process. --
    amplitude_V_ce0_assign_proc : process(ap_CS_fsm, tmp_i_reg_1364, tmp_i_50_reg_1368, tmp_68_i_reg_1372, grp_cordic_fu_376_ap_done)
    begin
        if (((ap_ST_st48_fsm_47 = ap_CS_fsm) and not((((tmp_i_reg_1364 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_i_50_reg_1368) and (ap_const_lv1_0 = tmp_68_i_reg_1372) and (ap_const_logic_0 = grp_cordic_fu_376_ap_done)) or ((tmp_i_reg_1364 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_i_50_reg_1368) and not((ap_const_lv1_0 = tmp_68_i_reg_1372)) and (ap_const_logic_0 = grp_cordic_fu_376_ap_done)) or ((tmp_i_reg_1364 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_i_50_reg_1368)) and (ap_const_logic_0 = grp_cordic_fu_376_ap_done)))))) then 
            amplitude_V_ce0 <= ap_const_logic_1;
        else 
            amplitude_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    angle_V_address0 <= tmp_fu_427_p1(10 - 1 downto 0);

    -- angle_V_ce0 assign process. --
    angle_V_ce0_assign_proc : process(ap_CS_fsm, exitcond5_fu_415_p2)
    begin
        if (((ap_ST_st2_fsm_1 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond5_fu_415_p2))) then 
            angle_V_ce0 <= ap_const_logic_1;
        else 
            angle_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_start, ap_CS_fsm, exitcond3_fu_1027_p2)
    begin
        if (((not((ap_const_logic_1 = ap_start)) and (ap_ST_st1_fsm_0 = ap_CS_fsm)) or ((ap_ST_st59_fsm_58 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond3_fu_1027_p2))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_CS_fsm)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_ST_st1_fsm_0 = ap_CS_fsm))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_CS_fsm, exitcond3_fu_1027_p2)
    begin
        if (((ap_ST_st59_fsm_58 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond3_fu_1027_p2)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    deltaPhiPrimeMod_V_addr_1_gep_fu_180_p3 <= tmp_reg_1142(10 - 1 downto 0);
    deltaPhiPrimeMod_V_addr_gep_fu_191_p3 <= tmp_reg_1142(10 - 1 downto 0);

    -- deltaPhiPrimeMod_V_address0 assign process. --
    deltaPhiPrimeMod_V_address0_assign_proc : process(ap_CS_fsm, tmp_reg_1142, tmp_s_reg_1175, deltaPhiPrimeMod_V_addr_1_gep_fu_180_p3, deltaPhiPrimeMod_V_addr_gep_fu_191_p3)
    begin
        if (((ap_ST_st21_fsm_20 = ap_CS_fsm) and not((ap_const_lv1_0 = tmp_s_reg_1175)))) then 
            deltaPhiPrimeMod_V_address0 <= deltaPhiPrimeMod_V_addr_gep_fu_191_p3;
        elsif (((ap_ST_st21_fsm_20 = ap_CS_fsm) and (ap_const_lv1_0 = tmp_s_reg_1175))) then 
            deltaPhiPrimeMod_V_address0 <= deltaPhiPrimeMod_V_addr_1_gep_fu_180_p3;
        elsif ((ap_ST_st22_fsm_21 = ap_CS_fsm)) then 
            deltaPhiPrimeMod_V_address0 <= tmp_reg_1142(10 - 1 downto 0);
        else 
            deltaPhiPrimeMod_V_address0 <= tmp_reg_1142(10 - 1 downto 0);
        end if; 
    end process;


    -- deltaPhiPrimeMod_V_ce0 assign process. --
    deltaPhiPrimeMod_V_ce0_assign_proc : process(ap_CS_fsm, tmp_s_reg_1175)
    begin
        if (((ap_ST_st22_fsm_21 = ap_CS_fsm) or ((ap_ST_st21_fsm_20 = ap_CS_fsm) and (ap_const_lv1_0 = tmp_s_reg_1175)) or ((ap_ST_st21_fsm_20 = ap_CS_fsm) and not((ap_const_lv1_0 = tmp_s_reg_1175))))) then 
            deltaPhiPrimeMod_V_ce0 <= ap_const_logic_1;
        else 
            deltaPhiPrimeMod_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- deltaPhiPrimeMod_V_d0 assign process. --
    deltaPhiPrimeMod_V_d0_assign_proc : process(ap_CS_fsm, tmp_s_reg_1175, r_V_8_fu_631_p2, r_V_7_fu_638_p2)
    begin
        if ((ap_ST_st21_fsm_20 = ap_CS_fsm)) then
            if (not((ap_const_lv1_0 = tmp_s_reg_1175))) then 
                deltaPhiPrimeMod_V_d0 <= r_V_7_fu_638_p2;
            elsif ((ap_const_lv1_0 = tmp_s_reg_1175)) then 
                deltaPhiPrimeMod_V_d0 <= r_V_8_fu_631_p2;
            else 
                deltaPhiPrimeMod_V_d0 <= r_V_7_fu_638_p2;
            end if;
        else 
            deltaPhiPrimeMod_V_d0 <= r_V_7_fu_638_p2;
        end if; 
    end process;


    -- deltaPhiPrimeMod_V_we0 assign process. --
    deltaPhiPrimeMod_V_we0_assign_proc : process(ap_CS_fsm, tmp_s_reg_1175)
    begin
        if ((((ap_ST_st21_fsm_20 = ap_CS_fsm) and (ap_const_lv1_0 = tmp_s_reg_1175)) or ((ap_ST_st21_fsm_20 = ap_CS_fsm) and not((ap_const_lv1_0 = tmp_s_reg_1175))))) then 
            deltaPhiPrimeMod_V_we0 <= ap_const_logic_1;
        else 
            deltaPhiPrimeMod_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    deltaPhiPrime_fu_462_p2 <= std_logic_vector(unsigned(deltaPhi_fu_453_p2) - unsigned(tmp_13_fu_459_p1));
    deltaPhi_fu_453_p2 <= std_logic_vector(unsigned(angle_V_q0) - unsigned(p_Val2_46_fu_449_p1));
    exitcond3_fu_1027_p2 <= "1" when (m_reg_358 = ap_const_lv11_400) else "0";
    exitcond4_fu_750_p2 <= "1" when (j_reg_321 = ap_const_lv11_400) else "0";
    exitcond5_fu_415_p2 <= "1" when (i_5_reg_287 = ap_const_lv11_400) else "0";
    grp_IFFT_fu_370_ap_start <= grp_IFFT_fu_370_ap_start_ap_start_reg;
    grp_IFFT_fu_370_ximag_V_q0 <= imag_V_q0;
    grp_IFFT_fu_370_ximag_V_q1 <= imag_V_q1;
    grp_IFFT_fu_370_xreal_V_q0 <= real_V_q0;
    grp_IFFT_fu_370_xreal_V_q1 <= real_V_q1;
    grp_cordic_fu_376_ap_start <= grp_cordic_fu_376_ap_start_ap_start_reg;

    -- grp_cordic_fu_376_theta_V assign process. --
    grp_cordic_fu_376_theta_V_assign_proc : process(ap_CS_fsm, tmp_i_reg_1364, tmp_i_50_reg_1368, tmp_68_i_reg_1372, real_angle_V_reg_1348, r_V_65_i_cast_reg_1376, r_V_64_i_cast_reg_1396, r_V_i_cast_reg_1401)
    begin
        if (((ap_ST_st48_fsm_47 = ap_CS_fsm) and (tmp_i_reg_1364 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_i_50_reg_1368)))) then 
            grp_cordic_fu_376_theta_V <= r_V_i_cast_reg_1401;
        elsif (((ap_ST_st48_fsm_47 = ap_CS_fsm) and (tmp_i_reg_1364 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_i_50_reg_1368) and not((ap_const_lv1_0 = tmp_68_i_reg_1372)))) then 
            grp_cordic_fu_376_theta_V <= r_V_64_i_cast_reg_1396;
        elsif (((ap_ST_st48_fsm_47 = ap_CS_fsm) and (tmp_i_reg_1364 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_i_50_reg_1368) and (ap_const_lv1_0 = tmp_68_i_reg_1372))) then 
            grp_cordic_fu_376_theta_V <= r_V_65_i_cast_reg_1376;
        elsif ((ap_ST_st51_fsm_50 = ap_CS_fsm)) then 
            grp_cordic_fu_376_theta_V <= real_angle_V_reg_1348;
        else 
            grp_cordic_fu_376_theta_V <= r_V_i_cast_reg_1401;
        end if; 
    end process;

    grp_fu_1053_ce <= ap_const_logic_1;
    grp_fu_1053_p0 <= grp_fu_1053_p00(20 - 1 downto 0);
    grp_fu_1053_p00 <= std_logic_vector(resize(unsigned(wn_V_1_q0),52));
    grp_fu_1053_p1 <= real_V_q0;
    grp_fu_1071_ce <= ap_const_logic_1;
    grp_fu_1071_p0 <= tmp_33_fu_1059_p3;
    grp_fu_1071_p1 <= ap_const_lv157_lc_1(85 - 1 downto 0);
    grp_fu_391_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(grp_cordic_fu_376_ap_return_1));
    grp_fu_397_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(grp_cordic_fu_376_ap_return_0));
    grp_fu_506_ce <= ap_const_logic_1;
    grp_fu_506_p0 <= t_V_fu_495_p3;
    grp_fu_506_p1 <= ap_const_lv105_145F30B21788BC(53 - 1 downto 0);
    grp_fu_611_ce <= ap_const_logic_1;
    grp_fu_611_p0 <= tmp_48_fu_602_p2;
    grp_fu_611_p1 <= ap_const_lv52_6487EC(23 - 1 downto 0);
    grp_fu_738_ce <= ap_const_logic_1;
    grp_fu_738_p0 <= trueFreq_reg_1266;
    grp_fu_738_p1 <= ap_const_lv32_143(9 - 1 downto 0);
    grp_fu_779_ce <= ap_const_logic_1;
    grp_fu_779_p0 <= t_V_7_fu_767_p3;
    grp_fu_779_p1 <= ap_const_lv105_145F30B21788BC(53 - 1 downto 0);
    grp_fu_892_ce <= ap_const_logic_1;
    grp_fu_892_p0 <= tmp_54_fu_883_p2;
    grp_fu_892_p1 <= ap_const_lv52_6487EC(23 - 1 downto 0);
    grp_fu_989_ce <= ap_const_logic_1;
    grp_fu_989_p0 <= cos_value_V_reg_345;
    grp_fu_989_p1 <= OP1_V_cast_fu_981_p1(32 - 1 downto 0);
    grp_fu_999_ce <= ap_const_logic_1;
    grp_fu_999_p0 <= sin_value_V_reg_332;
    grp_fu_999_p1 <= OP1_V_cast_fu_981_p1(32 - 1 downto 0);
    i_fu_421_p2 <= std_logic_vector(unsigned(i_5_reg_287) + unsigned(ap_const_lv11_1));

    -- imag_V_address0 assign process. --
    imag_V_address0_assign_proc : process(ap_CS_fsm, tmp_5_reg_1289, grp_IFFT_fu_370_ximag_V_address0)
    begin
        if ((ap_ST_st57_fsm_56 = ap_CS_fsm)) then 
            imag_V_address0 <= tmp_5_reg_1289(10 - 1 downto 0);
        elsif ((ap_ST_st58_fsm_57 = ap_CS_fsm)) then 
            imag_V_address0 <= grp_IFFT_fu_370_ximag_V_address0;
        else 
            imag_V_address0 <= tmp_5_reg_1289(10 - 1 downto 0);
        end if; 
    end process;

    imag_V_address1 <= grp_IFFT_fu_370_ximag_V_address1;

    -- imag_V_ce0 assign process. --
    imag_V_ce0_assign_proc : process(ap_CS_fsm, grp_IFFT_fu_370_ximag_V_ce0)
    begin
        if ((ap_ST_st57_fsm_56 = ap_CS_fsm)) then 
            imag_V_ce0 <= ap_const_logic_1;
        elsif ((ap_ST_st58_fsm_57 = ap_CS_fsm)) then 
            imag_V_ce0 <= grp_IFFT_fu_370_ximag_V_ce0;
        else 
            imag_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- imag_V_ce1 assign process. --
    imag_V_ce1_assign_proc : process(ap_CS_fsm, grp_IFFT_fu_370_ximag_V_ce1)
    begin
        if ((ap_ST_st58_fsm_57 = ap_CS_fsm)) then 
            imag_V_ce1 <= grp_IFFT_fu_370_ximag_V_ce1;
        else 
            imag_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- imag_V_d0 assign process. --
    imag_V_d0_assign_proc : process(ap_CS_fsm, grp_IFFT_fu_370_ximag_V_d0, grp_fu_999_p2)
    begin
        if ((ap_ST_st57_fsm_56 = ap_CS_fsm)) then 
            imag_V_d0 <= grp_fu_999_p2(51 downto 20);
        elsif ((ap_ST_st58_fsm_57 = ap_CS_fsm)) then 
            imag_V_d0 <= grp_IFFT_fu_370_ximag_V_d0;
        else 
            imag_V_d0 <= grp_fu_999_p2(51 downto 20);
        end if; 
    end process;


    -- imag_V_we0 assign process. --
    imag_V_we0_assign_proc : process(ap_CS_fsm, grp_IFFT_fu_370_ximag_V_we0)
    begin
        if (((ap_ST_st57_fsm_56 = ap_CS_fsm))) then 
            imag_V_we0 <= ap_const_logic_1;
        elsif ((ap_ST_st58_fsm_57 = ap_CS_fsm)) then 
            imag_V_we0 <= grp_IFFT_fu_370_ximag_V_we0;
        else 
            imag_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    j_1_fu_756_p2 <= std_logic_vector(unsigned(j_reg_321) + unsigned(ap_const_lv11_1));
    m_1_fu_1033_p2 <= std_logic_vector(unsigned(m_reg_358) + unsigned(ap_const_lv11_1));
    neg_mul_fu_1085_p2 <= std_logic_vector(unsigned(ap_const_lv157_lc_2) - unsigned(grp_fu_1071_p2));
    neg_mul_i1_fu_793_p2 <= std_logic_vector(unsigned(ap_const_lv105_0) - unsigned(mul_i1_reg_1317));
    neg_mul_i_fu_512_p2 <= std_logic_vector(unsigned(ap_const_lv105_0) - unsigned(mul_i_reg_1200));
    neg_ti_fu_1110_p1 <= trunc_cast_fu_1106_p1;
    neg_ti_fu_1110_p2 <= std_logic_vector(unsigned(ap_const_lv65_0) - unsigned(neg_ti_fu_1110_p1));
    
    tmp_50_fu_804_p4_temp <= signed(tmp_50_fu_804_p4);
    neg_ti_i1_fu_818_p1 <= std_logic_vector(resize(tmp_50_fu_804_p4_temp,31));

    neg_ti_i1_fu_818_p2 <= std_logic_vector(unsigned(ap_const_lv31_0) - unsigned(neg_ti_i1_fu_818_p1));
    
    tmp_41_fu_523_p4_temp <= signed(tmp_41_fu_523_p4);
    neg_ti_i_fu_537_p1 <= std_logic_vector(resize(tmp_41_fu_523_p4_temp,31));

    neg_ti_i_fu_537_p2 <= std_logic_vector(unsigned(ap_const_lv31_0) - unsigned(neg_ti_i_fu_537_p1));
    next_mul7_fu_433_p2 <= std_logic_vector(unsigned(phi_mul6_reg_310) + unsigned(ap_const_lv41_6487EC00));
    next_mul_fu_645_p2 <= std_logic_vector(unsigned(phi_mul_reg_298) + unsigned(ap_const_lv33_6487EC));
    p_Val2_46_fu_449_p1 <= std_logic_vector(resize(unsigned(previousPhase_V_q0),32));
    p_Val2_55_fu_621_p4 <= r_V_32_fu_617_p2(51 downto 20);
    p_i1_fu_867_p1 <= tmp_i1_49_fu_839_p1;
    p_i1_fu_867_p3 <= 
        p_i1_fu_867_p1 when (tmp_1_i1_fu_861_p2(0) = '1') else 
        ret_V_1_i1_fu_855_p2;
    p_i_fu_586_p1 <= tmp_i6_fu_558_p1;
    p_i_fu_586_p3 <= 
        p_i_fu_586_p1 when (tmp_1_i_fu_580_p2(0) = '1') else 
        ret_V_1_i_fu_574_p2;
    p_lshr1_cast_fu_703_p1 <= std_logic_vector(resize(unsigned(tmp_31_reg_1256),25));
    p_neg1_fu_677_p2 <= std_logic_vector(unsigned(ap_const_lv52_0) - unsigned(t_V_1_fu_661_p3));
    p_neg_t1_fu_706_p2 <= std_logic_vector(unsigned(ap_const_lv25_0) - unsigned(p_lshr1_cast_fu_703_p1));

    -- phaseCumulative_V_address0 assign process. --
    phaseCumulative_V_address0_assign_proc : process(ap_CS_fsm, phaseCumulative_V_addr_1_reg_1246, tmp_5_fu_762_p1)
    begin
        if ((ap_ST_st29_fsm_28 = ap_CS_fsm)) then 
            phaseCumulative_V_address0 <= tmp_5_fu_762_p1(10 - 1 downto 0);
        elsif (((ap_ST_st27_fsm_26 = ap_CS_fsm) or (ap_ST_st28_fsm_27 = ap_CS_fsm))) then 
            phaseCumulative_V_address0 <= phaseCumulative_V_addr_1_reg_1246;
        else 
            phaseCumulative_V_address0 <= tmp_5_fu_762_p1(10 - 1 downto 0);
        end if; 
    end process;


    -- phaseCumulative_V_ce0 assign process. --
    phaseCumulative_V_ce0_assign_proc : process(ap_CS_fsm, exitcond4_fu_750_p2)
    begin
        if (((ap_ST_st27_fsm_26 = ap_CS_fsm) or ((ap_ST_st29_fsm_28 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond4_fu_750_p2)) or (ap_ST_st28_fsm_27 = ap_CS_fsm))) then 
            phaseCumulative_V_ce0 <= ap_const_logic_1;
        else 
            phaseCumulative_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    phaseCumulative_V_d0 <= std_logic_vector(unsigned(r_V_16_reg_1276) + unsigned(phaseCumulative_V_q0));

    -- phaseCumulative_V_we0 assign process. --
    phaseCumulative_V_we0_assign_proc : process(ap_CS_fsm)
    begin
        if (((ap_ST_st28_fsm_27 = ap_CS_fsm))) then 
            phaseCumulative_V_we0 <= ap_const_logic_1;
        else 
            phaseCumulative_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    previousPhase_V_address0 <= tmp_fu_427_p1(10 - 1 downto 0);

    -- previousPhase_V_ce0 assign process. --
    previousPhase_V_ce0_assign_proc : process(ap_CS_fsm, exitcond5_fu_415_p2)
    begin
        if (((ap_ST_st2_fsm_1 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond5_fu_415_p2))) then 
            previousPhase_V_ce0 <= ap_const_logic_1;
        else 
            previousPhase_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    r_V_32_fu_617_p2 <= std_logic_vector(unsigned(t_V_reg_1190) - unsigned(rhs_V3_i_cast_reg_1226));
    r_V_33_fu_898_p2 <= std_logic_vector(unsigned(t_V_7_reg_1301) - unsigned(rhs_V3_i58_cast_reg_1343));
    r_V_64_i_cast_fu_966_p1 <= std_logic_vector(resize(unsigned(r_V_64_i_fu_961_p2),32));
    r_V_64_i_fu_961_p2 <= std_logic_vector(unsigned(agg_result_V_i61_cast_reg_1358) + unsigned(ap_const_lv21_DBC0A));
    r_V_65_i_cast_fu_956_p1 <= std_logic_vector(resize(unsigned(r_V_65_i_fu_951_p2),32));
    r_V_65_i_fu_951_p2 <= std_logic_vector(unsigned(agg_result_V_i61_cast1_reg_1353) + unsigned(ap_const_lv31_7FB49A0F));
    r_V_7_fu_638_p2 <= std_logic_vector(unsigned(p_Val2_55_fu_621_p4) + unsigned(ap_const_lv32_FFCDBC0A));
    r_V_8_fu_631_p2 <= std_logic_vector(unsigned(p_Val2_55_fu_621_p4) + unsigned(ap_const_lv32_3243F6));
    
    deltaPhiPrime_reg_1170_temp <= signed(deltaPhiPrime_reg_1170);
    r_V_fu_471_p0 <= std_logic_vector(resize(deltaPhiPrime_reg_1170_temp,33));

    r_V_fu_471_p2 <= std_logic_vector(unsigned(r_V_fu_471_p0) + unsigned(ap_const_lv33_3243F6));
    r_V_i_cast_fu_976_p1 <= std_logic_vector(resize(unsigned(r_V_i_fu_971_p2),32));
    r_V_i_fu_971_p2 <= std_logic_vector(unsigned(agg_result_V_i61_cast_reg_1358) + unsigned(ap_const_lv21_6DE05));

    -- real_V_address0 assign process. --
    real_V_address0_assign_proc : process(ap_CS_fsm, tmp_5_reg_1289, tmp_16_fu_1039_p1, grp_IFFT_fu_370_xreal_V_address0)
    begin
        if ((ap_ST_st57_fsm_56 = ap_CS_fsm)) then 
            real_V_address0 <= tmp_5_reg_1289(10 - 1 downto 0);
        elsif ((ap_ST_st59_fsm_58 = ap_CS_fsm)) then 
            real_V_address0 <= tmp_16_fu_1039_p1(10 - 1 downto 0);
        elsif ((ap_ST_st58_fsm_57 = ap_CS_fsm)) then 
            real_V_address0 <= grp_IFFT_fu_370_xreal_V_address0;
        else 
            real_V_address0 <= tmp_5_reg_1289(10 - 1 downto 0);
        end if; 
    end process;

    real_V_address1 <= grp_IFFT_fu_370_xreal_V_address1;

    -- real_V_ce0 assign process. --
    real_V_ce0_assign_proc : process(ap_CS_fsm, exitcond3_fu_1027_p2, grp_IFFT_fu_370_xreal_V_ce0)
    begin
        if ((((ap_ST_st59_fsm_58 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond3_fu_1027_p2)) or (ap_ST_st57_fsm_56 = ap_CS_fsm))) then 
            real_V_ce0 <= ap_const_logic_1;
        elsif ((ap_ST_st58_fsm_57 = ap_CS_fsm)) then 
            real_V_ce0 <= grp_IFFT_fu_370_xreal_V_ce0;
        else 
            real_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- real_V_ce1 assign process. --
    real_V_ce1_assign_proc : process(ap_CS_fsm, grp_IFFT_fu_370_xreal_V_ce1)
    begin
        if ((ap_ST_st58_fsm_57 = ap_CS_fsm)) then 
            real_V_ce1 <= grp_IFFT_fu_370_xreal_V_ce1;
        else 
            real_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- real_V_d0 assign process. --
    real_V_d0_assign_proc : process(ap_CS_fsm, grp_IFFT_fu_370_xreal_V_d0, grp_fu_989_p2)
    begin
        if ((ap_ST_st57_fsm_56 = ap_CS_fsm)) then 
            real_V_d0 <= grp_fu_989_p2(51 downto 20);
        elsif ((ap_ST_st58_fsm_57 = ap_CS_fsm)) then 
            real_V_d0 <= grp_IFFT_fu_370_xreal_V_d0;
        else 
            real_V_d0 <= grp_fu_989_p2(51 downto 20);
        end if; 
    end process;


    -- real_V_we0 assign process. --
    real_V_we0_assign_proc : process(ap_CS_fsm, grp_IFFT_fu_370_xreal_V_we0)
    begin
        if (((ap_ST_st57_fsm_56 = ap_CS_fsm))) then 
            real_V_we0 <= ap_const_logic_1;
        elsif ((ap_ST_st58_fsm_57 = ap_CS_fsm)) then 
            real_V_we0 <= grp_IFFT_fu_370_xreal_V_we0;
        else 
            real_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    real_angle_V_fu_902_p4 <= r_V_33_fu_898_p2(51 downto 20);
    result_2_fu_875_p2 <= tmp_i1_49_fu_839_p1;
    result_2_fu_875_p3 <= 
        p_i1_fu_867_p3 when (tmp_52_fu_843_p3(0) = '1') else 
        result_2_fu_875_p2;
    result_fu_594_p2 <= tmp_i6_fu_558_p1;
    result_fu_594_p3 <= 
        p_i_fu_586_p3 when (tmp_46_fu_562_p3(0) = '1') else 
        result_fu_594_p2;
    ret_V_1_i1_fu_855_p0 <= tmp_i1_49_fu_839_p1;
    ret_V_1_i1_fu_855_p2 <= std_logic_vector(unsigned(ret_V_1_i1_fu_855_p0) + unsigned(ap_const_lv32_1));
    ret_V_1_i_fu_574_p0 <= tmp_i6_fu_558_p1;
    ret_V_1_i_fu_574_p2 <= std_logic_vector(unsigned(ret_V_1_i_fu_574_p0) + unsigned(ap_const_lv32_1));
    sel_fu_1091_p3 <= 
        neg_mul_reg_1481 when (tmp_56_reg_1470(0) = '1') else 
        mul_reg_1476;
    sel_i1_fu_798_p3 <= 
        neg_mul_i1_fu_793_p2 when (tmp_49_reg_1311(0) = '1') else 
        mul_i1_reg_1317;
    sel_i_fu_517_p3 <= 
        neg_mul_i_fu_512_p2 when (tmp_40_reg_1184(0) = '1') else 
        mul_i_reg_1200;
    t_V_1_fu_661_p3 <= (deltaPhiPrimeMod_V_q0 & ap_const_lv20_0);
    t_V_7_fu_767_p3 <= (phaseCumulative_V_q0 & ap_const_lv20_0);
    t_V_fu_495_p3 <= (tmp_39_reg_1179 & ap_const_lv20_0);
    time_domain_V_address0 <= tmp_16_reg_1440(10 - 1 downto 0);

    -- time_domain_V_ce0 assign process. --
    time_domain_V_ce0_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_st64_fsm_63 = ap_CS_fsm)) then 
            time_domain_V_ce0 <= ap_const_logic_1;
        else 
            time_domain_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    time_domain_V_d0 <= tmp_18_fu_1116_p3(51 downto 20);

    -- time_domain_V_we0 assign process. --
    time_domain_V_we0_assign_proc : process(ap_CS_fsm)
    begin
        if (((ap_ST_st64_fsm_63 = ap_CS_fsm))) then 
            time_domain_V_we0 <= ap_const_logic_1;
        else 
            time_domain_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_12_fu_715_p3 <= 
        p_neg_t1_fu_706_p2 when (tmp_55_reg_1251(0) = '1') else 
        tmp_21_cast_fu_712_p1;
    tmp_13_fu_459_p1 <= std_logic_vector(resize(unsigned(p_lshr_f_cast_reg_1165),32));
    tmp_16_fu_1039_p1 <= std_logic_vector(resize(unsigned(m_reg_358),64));
    tmp_18_fu_1116_p2 <= trunc_cast_fu_1106_p1;
    tmp_18_fu_1116_p3 <= 
        neg_ti_fu_1110_p2 when (tmp_56_reg_1470(0) = '1') else 
        tmp_18_fu_1116_p2;
    tmp_1_i1_fu_861_p2 <= "1" when (tmp_53_fu_851_p1 = ap_const_lv20_0) else "0";
    tmp_1_i_fu_580_p2 <= "1" when (tmp_47_fu_570_p1 = ap_const_lv20_0) else "0";
    tmp_21_cast_fu_712_p1 <= std_logic_vector(resize(unsigned(tmp_32_reg_1261),25));
    tmp_25_cast_fu_726_p1 <= std_logic_vector(resize(unsigned(p_lshr_f1_cast_reg_1236),26));
    tmp_33_fu_1059_p3 <= (grp_fu_1053_p2 & ap_const_lv20_0);
    tmp_39_fu_483_p1 <= r_V_fu_471_p2(32 - 1 downto 0);
    tmp_41_fu_523_p4 <= sel_i_fu_517_p3(104 downto 75);
    tmp_45_fu_548_p4 <= tmp_i5_fu_543_p3(30 downto 20);
    tmp_46_fu_562_p3 <= tmp_i5_fu_543_p3(30 downto 30);
    tmp_47_fu_570_p1 <= tmp_i5_fu_543_p3(20 - 1 downto 0);
    tmp_48_fu_602_p2 <= std_logic_vector(shift_left(unsigned(result_reg_1216),to_integer(unsigned('0' & ap_const_lv32_14(31-1 downto 0)))));
    tmp_50_fu_804_p4 <= sel_i1_fu_798_p3(104 downto 75);
    tmp_51_fu_829_p4 <= tmp_i1_fu_824_p3(30 downto 20);
    tmp_52_fu_843_p3 <= tmp_i1_fu_824_p3(30 downto 30);
    tmp_53_fu_851_p1 <= tmp_i1_fu_824_p3(20 - 1 downto 0);
    tmp_54_fu_883_p2 <= std_logic_vector(shift_left(unsigned(result_2_reg_1333),to_integer(unsigned('0' & ap_const_lv32_14(31-1 downto 0)))));
    tmp_57_fu_1096_p4 <= sel_fu_1091_p3(156 downto 105);
    tmp_5_fu_762_p1 <= std_logic_vector(resize(unsigned(j_reg_321),64));
    tmp_68_i_fu_945_p2 <= "1" when (signed(real_angle_V_fu_902_p4) < signed(ap_const_lv32_4B65F1)) else "0";
    tmp_fu_427_p1 <= std_logic_vector(resize(unsigned(i_5_reg_287),64));
    
    tmp_51_fu_829_p4_temp <= signed(tmp_51_fu_829_p4);
    tmp_i1_49_fu_839_p1 <= std_logic_vector(resize(tmp_51_fu_829_p4_temp,32));

    tmp_i1_fu_824_p3 <= 
        neg_ti_i1_reg_1328 when (tmp_49_reg_1311(0) = '1') else 
        trunc_i1_cast_reg_1323;
    tmp_i5_fu_543_p3 <= 
        neg_ti_i_reg_1211 when (tmp_40_reg_1184(0) = '1') else 
        trunc_i_cast_reg_1206;
    
    tmp_45_fu_548_p4_temp <= signed(tmp_45_fu_548_p4);
    tmp_i6_fu_558_p1 <= std_logic_vector(resize(tmp_45_fu_548_p4_temp,32));

    tmp_i_50_fu_939_p2 <= "1" when (signed(real_angle_V_fu_902_p4) < signed(ap_const_lv32_3243F6)) else "0";
    tmp_i_fu_933_p2 <= "1" when (signed(real_angle_V_fu_902_p4) < signed(ap_const_lv32_1921FB)) else "0";
    tmp_s_fu_477_p2 <= "1" when (signed(r_V_fu_471_p2) > signed(ap_const_lv33_0)) else "0";
    
    tmp_12_fu_715_p3_temp <= signed(tmp_12_fu_715_p3);
    trueFreq_fu_729_p0 <= std_logic_vector(resize(tmp_12_fu_715_p3_temp,26));

    trueFreq_fu_729_p2 <= std_logic_vector(unsigned(trueFreq_fu_729_p0) + unsigned(tmp_25_cast_fu_726_p1));
    
    tmp_57_fu_1096_p4_temp <= signed(tmp_57_fu_1096_p4);
    trunc_cast_fu_1106_p1 <= std_logic_vector(resize(tmp_57_fu_1096_p4_temp,65));

    
    tmp_50_fu_804_p4_temp <= signed(tmp_50_fu_804_p4);
    trunc_i1_cast_fu_814_p1 <= std_logic_vector(resize(tmp_50_fu_804_p4_temp,31));

    
    tmp_41_fu_523_p4_temp <= signed(tmp_41_fu_523_p4);
    trunc_i_cast_fu_533_p1 <= std_logic_vector(resize(tmp_41_fu_523_p4_temp,31));

    wn_V_1_address0 <= tmp_16_fu_1039_p1(10 - 1 downto 0);

    -- wn_V_1_ce0 assign process. --
    wn_V_1_ce0_assign_proc : process(ap_CS_fsm, exitcond3_fu_1027_p2)
    begin
        if (((ap_ST_st59_fsm_58 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond3_fu_1027_p2))) then 
            wn_V_1_ce0 <= ap_const_logic_1;
        else 
            wn_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
